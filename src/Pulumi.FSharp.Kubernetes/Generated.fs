//------------------------------------------------------------------------------
//        This code was generated by myriad.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------
namespace Pulumi.FSharp.Kubernetes

open Pulumi.FSharp
open Pulumi.FSharp.Kubernetes

module AdmissionRegistration =
    module V1 =
        [<AutoOpen>]
        module MutatingWebhookConfiguration =
            open Pulumi.Kubernetes.AdmissionRegistration.V1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1

            type MutatingWebhookConfigurationBuilder() =
                member _.Yield _ = KubernetesResource.Zero, MutatingWebhookConfigurationArgs()

                member _.Run(cargs, args: MutatingWebhookConfigurationArgs) =
                    MutatingWebhookConfiguration(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: MutatingWebhookConfigurationArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: MutatingWebhookConfigurationArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: MutatingWebhookConfigurationArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: MutatingWebhookConfigurationArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: MutatingWebhookConfigurationArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: MutatingWebhookConfigurationArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("webhooks")>]
                member _.Webhooks((cargs, args: MutatingWebhookConfigurationArgs), webhooks) =
                    args.Webhooks <- inputList webhooks
                    cargs, args

            let mutatingWebhookConfiguration = MutatingWebhookConfigurationBuilder()

        [<AutoOpen>]
        module MutatingWebhookConfigurationList =
            open Pulumi.Kubernetes.AdmissionRegistration.V1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1

            type MutatingWebhookConfigurationListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, MutatingWebhookConfigurationListArgs()

                member _.Run(cargs, args: MutatingWebhookConfigurationListArgs) =
                    MutatingWebhookConfigurationList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: MutatingWebhookConfigurationListArgs), name) =
                    { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: MutatingWebhookConfigurationListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: MutatingWebhookConfigurationListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: MutatingWebhookConfigurationListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: MutatingWebhookConfigurationListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: MutatingWebhookConfigurationListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: MutatingWebhookConfigurationListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let mutatingWebhookConfigurationList =
                MutatingWebhookConfigurationListBuilder()

        [<AutoOpen>]
        module ValidatingWebhookConfiguration =
            open Pulumi.Kubernetes.AdmissionRegistration.V1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1

            type ValidatingWebhookConfigurationBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ValidatingWebhookConfigurationArgs()

                member _.Run(cargs, args: ValidatingWebhookConfigurationArgs) =
                    ValidatingWebhookConfiguration(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ValidatingWebhookConfigurationArgs), name) =
                    { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ValidatingWebhookConfigurationArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ValidatingWebhookConfigurationArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ValidatingWebhookConfigurationArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ValidatingWebhookConfigurationArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ValidatingWebhookConfigurationArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("webhooks")>]
                member _.Webhooks((cargs, args: ValidatingWebhookConfigurationArgs), webhooks) =
                    args.Webhooks <- inputList webhooks
                    cargs, args

            let validatingWebhookConfiguration = ValidatingWebhookConfigurationBuilder()

        [<AutoOpen>]
        module ValidatingWebhookConfigurationList =
            open Pulumi.Kubernetes.AdmissionRegistration.V1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1

            type ValidatingWebhookConfigurationListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ValidatingWebhookConfigurationListArgs()

                member _.Run(cargs, args: ValidatingWebhookConfigurationListArgs) =
                    ValidatingWebhookConfigurationList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ValidatingWebhookConfigurationListArgs), name) =
                    { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ValidatingWebhookConfigurationListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ValidatingWebhookConfigurationListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ValidatingWebhookConfigurationListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ValidatingWebhookConfigurationListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ValidatingWebhookConfigurationListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ValidatingWebhookConfigurationListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let validatingWebhookConfigurationList =
                ValidatingWebhookConfigurationListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module MutatingWebhookConfiguration =
            open Pulumi.Kubernetes.AdmissionRegistration.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1Beta1

            type MutatingWebhookConfigurationBuilder() =
                member _.Yield _ = KubernetesResource.Zero, MutatingWebhookConfigurationArgs()

                member _.Run(cargs, args: MutatingWebhookConfigurationArgs) =
                    MutatingWebhookConfiguration(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: MutatingWebhookConfigurationArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: MutatingWebhookConfigurationArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: MutatingWebhookConfigurationArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: MutatingWebhookConfigurationArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: MutatingWebhookConfigurationArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: MutatingWebhookConfigurationArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("webhooks")>]
                member _.Webhooks((cargs, args: MutatingWebhookConfigurationArgs), webhooks) =
                    args.Webhooks <- inputList webhooks
                    cargs, args

            let mutatingWebhookConfiguration = MutatingWebhookConfigurationBuilder()

        [<AutoOpen>]
        module MutatingWebhookConfigurationList =
            open Pulumi.Kubernetes.AdmissionRegistration.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1Beta1

            type MutatingWebhookConfigurationListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, MutatingWebhookConfigurationListArgs()

                member _.Run(cargs, args: MutatingWebhookConfigurationListArgs) =
                    MutatingWebhookConfigurationList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: MutatingWebhookConfigurationListArgs), name) =
                    { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: MutatingWebhookConfigurationListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: MutatingWebhookConfigurationListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: MutatingWebhookConfigurationListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: MutatingWebhookConfigurationListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: MutatingWebhookConfigurationListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: MutatingWebhookConfigurationListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let mutatingWebhookConfigurationList =
                MutatingWebhookConfigurationListBuilder()

        [<AutoOpen>]
        module ValidatingWebhookConfiguration =
            open Pulumi.Kubernetes.AdmissionRegistration.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1Beta1

            type ValidatingWebhookConfigurationBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ValidatingWebhookConfigurationArgs()

                member _.Run(cargs, args: ValidatingWebhookConfigurationArgs) =
                    ValidatingWebhookConfiguration(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ValidatingWebhookConfigurationArgs), name) =
                    { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ValidatingWebhookConfigurationArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ValidatingWebhookConfigurationArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ValidatingWebhookConfigurationArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ValidatingWebhookConfigurationArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ValidatingWebhookConfigurationArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("webhooks")>]
                member _.Webhooks((cargs, args: ValidatingWebhookConfigurationArgs), webhooks) =
                    args.Webhooks <- inputList webhooks
                    cargs, args

            let validatingWebhookConfiguration = ValidatingWebhookConfigurationBuilder()

        [<AutoOpen>]
        module ValidatingWebhookConfigurationList =
            open Pulumi.Kubernetes.AdmissionRegistration.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1Beta1

            type ValidatingWebhookConfigurationListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ValidatingWebhookConfigurationListArgs()

                member _.Run(cargs, args: ValidatingWebhookConfigurationListArgs) =
                    ValidatingWebhookConfigurationList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ValidatingWebhookConfigurationListArgs), name) =
                    { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ValidatingWebhookConfigurationListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ValidatingWebhookConfigurationListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ValidatingWebhookConfigurationListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ValidatingWebhookConfigurationListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ValidatingWebhookConfigurationListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ValidatingWebhookConfigurationListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let validatingWebhookConfigurationList =
                ValidatingWebhookConfigurationListBuilder()

module ApiExtensions =
    module V1 =
        [<AutoOpen>]
        module CustomResourceDefinition =
            open Pulumi.Kubernetes.ApiExtensions.V1
            open Pulumi.Kubernetes.Types.Inputs.ApiExtensions.V1

            type CustomResourceDefinitionBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CustomResourceDefinitionArgs()
                member _.Run(cargs, args: CustomResourceDefinitionArgs) = CustomResourceDefinition(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CustomResourceDefinitionArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CustomResourceDefinitionArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CustomResourceDefinitionArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CustomResourceDefinitionArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CustomResourceDefinitionArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CustomResourceDefinitionArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: CustomResourceDefinitionArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let customResourceDefinition = CustomResourceDefinitionBuilder()

        [<AutoOpen>]
        module CustomResourceDefinitionList =
            open Pulumi.Kubernetes.ApiExtensions.V1
            open Pulumi.Kubernetes.Types.Inputs.ApiExtensions.V1

            type CustomResourceDefinitionListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CustomResourceDefinitionListArgs()

                member _.Run(cargs, args: CustomResourceDefinitionListArgs) =
                    CustomResourceDefinitionList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CustomResourceDefinitionListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CustomResourceDefinitionListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CustomResourceDefinitionListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: CustomResourceDefinitionListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CustomResourceDefinitionListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CustomResourceDefinitionListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CustomResourceDefinitionListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let customResourceDefinitionList = CustomResourceDefinitionListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module CustomResourceDefinition =
            open Pulumi.Kubernetes.ApiExtensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.ApiExtensions.V1Beta1

            type CustomResourceDefinitionBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CustomResourceDefinitionArgs()
                member _.Run(cargs, args: CustomResourceDefinitionArgs) = CustomResourceDefinition(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CustomResourceDefinitionArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CustomResourceDefinitionArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CustomResourceDefinitionArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CustomResourceDefinitionArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CustomResourceDefinitionArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CustomResourceDefinitionArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: CustomResourceDefinitionArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let customResourceDefinition = CustomResourceDefinitionBuilder()

        [<AutoOpen>]
        module CustomResourceDefinitionList =
            open Pulumi.Kubernetes.ApiExtensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.ApiExtensions.V1Beta1

            type CustomResourceDefinitionListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CustomResourceDefinitionListArgs()

                member _.Run(cargs, args: CustomResourceDefinitionListArgs) =
                    CustomResourceDefinitionList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CustomResourceDefinitionListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CustomResourceDefinitionListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CustomResourceDefinitionListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: CustomResourceDefinitionListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CustomResourceDefinitionListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CustomResourceDefinitionListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CustomResourceDefinitionListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let customResourceDefinitionList = CustomResourceDefinitionListBuilder()

module ApiRegistration =
    module V1 =
        [<AutoOpen>]
        module APIService =
            open Pulumi.Kubernetes.ApiRegistration.V1
            open Pulumi.Kubernetes.Types.Inputs.ApiRegistration.V1

            type APIServiceBuilder() =
                member _.Yield _ = KubernetesResource.Zero, APIServiceArgs()
                member _.Run(cargs, args: APIServiceArgs) = APIService(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: APIServiceArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: APIServiceArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: APIServiceArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: APIServiceArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: APIServiceArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: APIServiceArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: APIServiceArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let aPIService = APIServiceBuilder()

        [<AutoOpen>]
        module APIServiceList =
            open Pulumi.Kubernetes.ApiRegistration.V1
            open Pulumi.Kubernetes.Types.Inputs.ApiRegistration.V1

            type APIServiceListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, APIServiceListArgs()
                member _.Run(cargs, args: APIServiceListArgs) = APIServiceList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: APIServiceListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: APIServiceListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: APIServiceListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: APIServiceListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: APIServiceListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: APIServiceListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: APIServiceListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let aPIServiceList = APIServiceListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module APIService =
            open Pulumi.Kubernetes.ApiRegistration.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.ApiRegistration.V1Beta1

            type APIServiceBuilder() =
                member _.Yield _ = KubernetesResource.Zero, APIServiceArgs()
                member _.Run(cargs, args: APIServiceArgs) = APIService(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: APIServiceArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: APIServiceArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: APIServiceArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: APIServiceArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: APIServiceArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: APIServiceArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: APIServiceArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let aPIService = APIServiceBuilder()

        [<AutoOpen>]
        module APIServiceList =
            open Pulumi.Kubernetes.ApiRegistration.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.ApiRegistration.V1Beta1

            type APIServiceListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, APIServiceListArgs()
                member _.Run(cargs, args: APIServiceListArgs) = APIServiceList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: APIServiceListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: APIServiceListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: APIServiceListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: APIServiceListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: APIServiceListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: APIServiceListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: APIServiceListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let aPIServiceList = APIServiceListBuilder()

module Apps =
    module V1 =
        [<AutoOpen>]
        module ControllerRevisionList =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type ControllerRevisionListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ControllerRevisionListArgs()
                member _.Run(cargs, args: ControllerRevisionListArgs) = ControllerRevisionList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ControllerRevisionListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ControllerRevisionListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ControllerRevisionListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ControllerRevisionListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ControllerRevisionListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ControllerRevisionListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ControllerRevisionListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let controllerRevisionList = ControllerRevisionListBuilder()

        [<AutoOpen>]
        module DaemonSet =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type DaemonSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DaemonSetArgs()
                member _.Run(cargs, args: DaemonSetArgs) = DaemonSet(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DaemonSetArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DaemonSetArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DaemonSetArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DaemonSetArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DaemonSetArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DaemonSetArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: DaemonSetArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let daemonSet = DaemonSetBuilder()

        [<AutoOpen>]
        module DaemonSetList =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type DaemonSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DaemonSetListArgs()
                member _.Run(cargs, args: DaemonSetListArgs) = DaemonSetList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DaemonSetListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DaemonSetListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DaemonSetListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: DaemonSetListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DaemonSetListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DaemonSetListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DaemonSetListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let daemonSetList = DaemonSetListBuilder()

        [<AutoOpen>]
        module Deployment =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type DeploymentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentArgs()
                member _.Run(cargs, args: DeploymentArgs) = Deployment(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DeploymentArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DeploymentArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DeploymentArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DeploymentArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DeploymentArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DeploymentArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: DeploymentArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let deployment = DeploymentBuilder()

        [<AutoOpen>]
        module DeploymentList =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type DeploymentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentListArgs()
                member _.Run(cargs, args: DeploymentListArgs) = DeploymentList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DeploymentListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DeploymentListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DeploymentListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: DeploymentListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DeploymentListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DeploymentListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DeploymentListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let deploymentList = DeploymentListBuilder()

        [<AutoOpen>]
        module ReplicaSet =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type ReplicaSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicaSetArgs()
                member _.Run(cargs, args: ReplicaSetArgs) = ReplicaSet(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ReplicaSetArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ReplicaSetArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ReplicaSetArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ReplicaSetArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ReplicaSetArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ReplicaSetArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: ReplicaSetArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let replicaSet = ReplicaSetBuilder()

        [<AutoOpen>]
        module ReplicaSetList =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type ReplicaSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicaSetListArgs()
                member _.Run(cargs, args: ReplicaSetListArgs) = ReplicaSetList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ReplicaSetListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ReplicaSetListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ReplicaSetListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ReplicaSetListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ReplicaSetListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ReplicaSetListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ReplicaSetListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let replicaSetList = ReplicaSetListBuilder()

        [<AutoOpen>]
        module StatefulSet =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type StatefulSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatefulSetArgs()
                member _.Run(cargs, args: StatefulSetArgs) = StatefulSet(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: StatefulSetArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: StatefulSetArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: StatefulSetArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: StatefulSetArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: StatefulSetArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: StatefulSetArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: StatefulSetArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let statefulSet = StatefulSetBuilder()

        [<AutoOpen>]
        module StatefulSetList =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type StatefulSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatefulSetListArgs()
                member _.Run(cargs, args: StatefulSetListArgs) = StatefulSetList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: StatefulSetListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: StatefulSetListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: StatefulSetListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: StatefulSetListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: StatefulSetListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: StatefulSetListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: StatefulSetListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let statefulSetList = StatefulSetListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module ControllerRevisionList =
            open Pulumi.Kubernetes.Apps.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta1

            type ControllerRevisionListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ControllerRevisionListArgs()
                member _.Run(cargs, args: ControllerRevisionListArgs) = ControllerRevisionList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ControllerRevisionListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ControllerRevisionListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ControllerRevisionListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ControllerRevisionListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ControllerRevisionListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ControllerRevisionListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ControllerRevisionListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let controllerRevisionList = ControllerRevisionListBuilder()

        [<AutoOpen>]
        module Deployment =
            open Pulumi.Kubernetes.Apps.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta1

            type DeploymentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentArgs()
                member _.Run(cargs, args: DeploymentArgs) = Deployment(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DeploymentArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DeploymentArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DeploymentArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DeploymentArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DeploymentArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DeploymentArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: DeploymentArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let deployment = DeploymentBuilder()

        [<AutoOpen>]
        module DeploymentList =
            open Pulumi.Kubernetes.Apps.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta1

            type DeploymentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentListArgs()
                member _.Run(cargs, args: DeploymentListArgs) = DeploymentList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DeploymentListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DeploymentListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DeploymentListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: DeploymentListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DeploymentListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DeploymentListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DeploymentListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let deploymentList = DeploymentListBuilder()

        [<AutoOpen>]
        module StatefulSet =
            open Pulumi.Kubernetes.Apps.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta1

            type StatefulSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatefulSetArgs()
                member _.Run(cargs, args: StatefulSetArgs) = StatefulSet(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: StatefulSetArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: StatefulSetArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: StatefulSetArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: StatefulSetArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: StatefulSetArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: StatefulSetArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: StatefulSetArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let statefulSet = StatefulSetBuilder()

        [<AutoOpen>]
        module StatefulSetList =
            open Pulumi.Kubernetes.Apps.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta1

            type StatefulSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatefulSetListArgs()
                member _.Run(cargs, args: StatefulSetListArgs) = StatefulSetList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: StatefulSetListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: StatefulSetListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: StatefulSetListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: StatefulSetListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: StatefulSetListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: StatefulSetListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: StatefulSetListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let statefulSetList = StatefulSetListBuilder()

    module V1Beta2 =
        [<AutoOpen>]
        module ControllerRevisionList =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type ControllerRevisionListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ControllerRevisionListArgs()
                member _.Run(cargs, args: ControllerRevisionListArgs) = ControllerRevisionList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ControllerRevisionListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ControllerRevisionListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ControllerRevisionListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ControllerRevisionListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ControllerRevisionListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ControllerRevisionListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ControllerRevisionListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let controllerRevisionList = ControllerRevisionListBuilder()

        [<AutoOpen>]
        module DaemonSet =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type DaemonSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DaemonSetArgs()
                member _.Run(cargs, args: DaemonSetArgs) = DaemonSet(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DaemonSetArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DaemonSetArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DaemonSetArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DaemonSetArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DaemonSetArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DaemonSetArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: DaemonSetArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let daemonSet = DaemonSetBuilder()

        [<AutoOpen>]
        module DaemonSetList =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type DaemonSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DaemonSetListArgs()
                member _.Run(cargs, args: DaemonSetListArgs) = DaemonSetList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DaemonSetListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DaemonSetListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DaemonSetListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: DaemonSetListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DaemonSetListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DaemonSetListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DaemonSetListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let daemonSetList = DaemonSetListBuilder()

        [<AutoOpen>]
        module Deployment =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type DeploymentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentArgs()
                member _.Run(cargs, args: DeploymentArgs) = Deployment(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DeploymentArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DeploymentArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DeploymentArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DeploymentArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DeploymentArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DeploymentArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: DeploymentArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let deployment = DeploymentBuilder()

        [<AutoOpen>]
        module DeploymentList =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type DeploymentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentListArgs()
                member _.Run(cargs, args: DeploymentListArgs) = DeploymentList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DeploymentListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DeploymentListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DeploymentListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: DeploymentListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DeploymentListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DeploymentListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DeploymentListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let deploymentList = DeploymentListBuilder()

        [<AutoOpen>]
        module ReplicaSet =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type ReplicaSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicaSetArgs()
                member _.Run(cargs, args: ReplicaSetArgs) = ReplicaSet(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ReplicaSetArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ReplicaSetArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ReplicaSetArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ReplicaSetArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ReplicaSetArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ReplicaSetArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: ReplicaSetArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let replicaSet = ReplicaSetBuilder()

        [<AutoOpen>]
        module ReplicaSetList =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type ReplicaSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicaSetListArgs()
                member _.Run(cargs, args: ReplicaSetListArgs) = ReplicaSetList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ReplicaSetListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ReplicaSetListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ReplicaSetListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ReplicaSetListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ReplicaSetListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ReplicaSetListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ReplicaSetListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let replicaSetList = ReplicaSetListBuilder()

        [<AutoOpen>]
        module StatefulSet =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type StatefulSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatefulSetArgs()
                member _.Run(cargs, args: StatefulSetArgs) = StatefulSet(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: StatefulSetArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: StatefulSetArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: StatefulSetArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: StatefulSetArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: StatefulSetArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: StatefulSetArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: StatefulSetArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let statefulSet = StatefulSetBuilder()

        [<AutoOpen>]
        module StatefulSetList =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type StatefulSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatefulSetListArgs()
                member _.Run(cargs, args: StatefulSetListArgs) = StatefulSetList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: StatefulSetListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: StatefulSetListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: StatefulSetListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: StatefulSetListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: StatefulSetListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: StatefulSetListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: StatefulSetListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let statefulSetList = StatefulSetListBuilder()

module AuditRegistraion =
    module V1Alpha1 =
        [<AutoOpen>]
        module AuditSink =
            open Pulumi.Kubernetes.AuditRegistraion.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.AuditRegistraion.V1Alpha1

            type AuditSinkBuilder() =
                member _.Yield _ = KubernetesResource.Zero, AuditSinkArgs()
                member _.Run(cargs, args: AuditSinkArgs) = AuditSink(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: AuditSinkArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: AuditSinkArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: AuditSinkArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: AuditSinkArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: AuditSinkArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: AuditSinkArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: AuditSinkArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let auditSink = AuditSinkBuilder()

        [<AutoOpen>]
        module AuditSinkList =
            open Pulumi.Kubernetes.AuditRegistraion.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.AuditRegistraion.V1Alpha1

            type AuditSinkListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, AuditSinkListArgs()
                member _.Run(cargs, args: AuditSinkListArgs) = AuditSinkList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: AuditSinkListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: AuditSinkListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: AuditSinkListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: AuditSinkListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: AuditSinkListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: AuditSinkListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: AuditSinkListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let auditSinkList = AuditSinkListBuilder()

module Authentication =
    module V1 =
        [<AutoOpen>]
        module TokenRequest =
            open Pulumi.Kubernetes.Authentication.V1
            open Pulumi.Kubernetes.Types.Inputs.Authentication.V1

            type TokenRequestBuilder() =
                member _.Yield _ = KubernetesResource.Zero, TokenRequestArgs()
                member _.Run(cargs, args: TokenRequestArgs) = TokenRequest(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: TokenRequestArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: TokenRequestArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: TokenRequestArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: TokenRequestArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: TokenRequestArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: TokenRequestArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: TokenRequestArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let tokenRequest = TokenRequestBuilder()

        [<AutoOpen>]
        module TokenReview =
            open Pulumi.Kubernetes.Authentication.V1
            open Pulumi.Kubernetes.Types.Inputs.Authentication.V1

            type TokenReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, TokenReviewArgs()
                member _.Run(cargs, args: TokenReviewArgs) = TokenReview(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: TokenReviewArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: TokenReviewArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: TokenReviewArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: TokenReviewArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: TokenReviewArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: TokenReviewArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: TokenReviewArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let tokenReview = TokenReviewBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module TokenReview =
            open Pulumi.Kubernetes.Authentication.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Authentication.V1Beta1

            type TokenReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, TokenReviewArgs()
                member _.Run(cargs, args: TokenReviewArgs) = TokenReview(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: TokenReviewArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: TokenReviewArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: TokenReviewArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: TokenReviewArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: TokenReviewArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: TokenReviewArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: TokenReviewArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let tokenReview = TokenReviewBuilder()

module Authorization =
    module V1 =
        [<AutoOpen>]
        module LocalSubjectAccessReview =
            open Pulumi.Kubernetes.Authorization.V1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1

            type LocalSubjectAccessReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LocalSubjectAccessReviewArgs()
                member _.Run(cargs, args: LocalSubjectAccessReviewArgs) = LocalSubjectAccessReview(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: LocalSubjectAccessReviewArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: LocalSubjectAccessReviewArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: LocalSubjectAccessReviewArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: LocalSubjectAccessReviewArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: LocalSubjectAccessReviewArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: LocalSubjectAccessReviewArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: LocalSubjectAccessReviewArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let localSubjectAccessReview = LocalSubjectAccessReviewBuilder()

        [<AutoOpen>]
        module SelfSubjectAccessReview =
            open Pulumi.Kubernetes.Authorization.V1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1

            type SelfSubjectAccessReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SelfSubjectAccessReviewArgs()
                member _.Run(cargs, args: SelfSubjectAccessReviewArgs) = SelfSubjectAccessReview(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: SelfSubjectAccessReviewArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: SelfSubjectAccessReviewArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: SelfSubjectAccessReviewArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: SelfSubjectAccessReviewArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: SelfSubjectAccessReviewArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: SelfSubjectAccessReviewArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: SelfSubjectAccessReviewArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let selfSubjectAccessReview = SelfSubjectAccessReviewBuilder()

        [<AutoOpen>]
        module SelfSubjectRulesReview =
            open Pulumi.Kubernetes.Authorization.V1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1

            type SelfSubjectRulesReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SelfSubjectRulesReviewArgs()
                member _.Run(cargs, args: SelfSubjectRulesReviewArgs) = SelfSubjectRulesReview(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: SelfSubjectRulesReviewArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: SelfSubjectRulesReviewArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: SelfSubjectRulesReviewArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: SelfSubjectRulesReviewArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: SelfSubjectRulesReviewArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: SelfSubjectRulesReviewArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: SelfSubjectRulesReviewArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let selfSubjectRulesReview = SelfSubjectRulesReviewBuilder()

        [<AutoOpen>]
        module SubjectAccessReview =
            open Pulumi.Kubernetes.Authorization.V1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1

            type SubjectAccessReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SubjectAccessReviewArgs()
                member _.Run(cargs, args: SubjectAccessReviewArgs) = SubjectAccessReview(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: SubjectAccessReviewArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: SubjectAccessReviewArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: SubjectAccessReviewArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: SubjectAccessReviewArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: SubjectAccessReviewArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: SubjectAccessReviewArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: SubjectAccessReviewArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let subjectAccessReview = SubjectAccessReviewBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module LocalSubjectAccessReview =
            open Pulumi.Kubernetes.Authorization.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1Beta1

            type LocalSubjectAccessReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LocalSubjectAccessReviewArgs()
                member _.Run(cargs, args: LocalSubjectAccessReviewArgs) = LocalSubjectAccessReview(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: LocalSubjectAccessReviewArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: LocalSubjectAccessReviewArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: LocalSubjectAccessReviewArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: LocalSubjectAccessReviewArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: LocalSubjectAccessReviewArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: LocalSubjectAccessReviewArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: LocalSubjectAccessReviewArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let localSubjectAccessReview = LocalSubjectAccessReviewBuilder()

        [<AutoOpen>]
        module SelfSubjectAccessReview =
            open Pulumi.Kubernetes.Authorization.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1Beta1

            type SelfSubjectAccessReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SelfSubjectAccessReviewArgs()
                member _.Run(cargs, args: SelfSubjectAccessReviewArgs) = SelfSubjectAccessReview(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: SelfSubjectAccessReviewArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: SelfSubjectAccessReviewArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: SelfSubjectAccessReviewArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: SelfSubjectAccessReviewArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: SelfSubjectAccessReviewArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: SelfSubjectAccessReviewArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: SelfSubjectAccessReviewArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let selfSubjectAccessReview = SelfSubjectAccessReviewBuilder()

        [<AutoOpen>]
        module SelfSubjectRulesReview =
            open Pulumi.Kubernetes.Authorization.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1Beta1

            type SelfSubjectRulesReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SelfSubjectRulesReviewArgs()
                member _.Run(cargs, args: SelfSubjectRulesReviewArgs) = SelfSubjectRulesReview(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: SelfSubjectRulesReviewArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: SelfSubjectRulesReviewArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: SelfSubjectRulesReviewArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: SelfSubjectRulesReviewArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: SelfSubjectRulesReviewArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: SelfSubjectRulesReviewArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: SelfSubjectRulesReviewArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let selfSubjectRulesReview = SelfSubjectRulesReviewBuilder()

        [<AutoOpen>]
        module SubjectAccessReview =
            open Pulumi.Kubernetes.Authorization.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1Beta1

            type SubjectAccessReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SubjectAccessReviewArgs()
                member _.Run(cargs, args: SubjectAccessReviewArgs) = SubjectAccessReview(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: SubjectAccessReviewArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: SubjectAccessReviewArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: SubjectAccessReviewArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: SubjectAccessReviewArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: SubjectAccessReviewArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: SubjectAccessReviewArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: SubjectAccessReviewArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let subjectAccessReview = SubjectAccessReviewBuilder()

module Autoscaling =
    module V1 =
        [<AutoOpen>]
        module HorizontalPodAutoscaler =
            open Pulumi.Kubernetes.Autoscaling.V1
            open Pulumi.Kubernetes.Types.Inputs.Autoscaling.V1

            type HorizontalPodAutoscalerBuilder() =
                member _.Yield _ = KubernetesResource.Zero, HorizontalPodAutoscalerArgs()
                member _.Run(cargs, args: HorizontalPodAutoscalerArgs) = HorizontalPodAutoscaler(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: HorizontalPodAutoscalerArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: HorizontalPodAutoscalerArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: HorizontalPodAutoscalerArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: HorizontalPodAutoscalerArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: HorizontalPodAutoscalerArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: HorizontalPodAutoscalerArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: HorizontalPodAutoscalerArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let horizontalPodAutoscaler = HorizontalPodAutoscalerBuilder()

        [<AutoOpen>]
        module HorizontalPodAutoscalerList =
            open Pulumi.Kubernetes.Autoscaling.V1
            open Pulumi.Kubernetes.Types.Inputs.Autoscaling.V1

            type HorizontalPodAutoscalerListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, HorizontalPodAutoscalerListArgs()

                member _.Run(cargs, args: HorizontalPodAutoscalerListArgs) =
                    HorizontalPodAutoscalerList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: HorizontalPodAutoscalerListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: HorizontalPodAutoscalerListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: HorizontalPodAutoscalerListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: HorizontalPodAutoscalerListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: HorizontalPodAutoscalerListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: HorizontalPodAutoscalerListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: HorizontalPodAutoscalerListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let horizontalPodAutoscalerList = HorizontalPodAutoscalerListBuilder()

    module V2Beta1 =
        [<AutoOpen>]
        module HorizontalPodAutoscaler =
            open Pulumi.Kubernetes.Autoscaling.V2Beta1
            open Pulumi.Kubernetes.Types.Inputs.Autoscaling.V2Beta1

            type HorizontalPodAutoscalerBuilder() =
                member _.Yield _ = KubernetesResource.Zero, HorizontalPodAutoscalerArgs()
                member _.Run(cargs, args: HorizontalPodAutoscalerArgs) = HorizontalPodAutoscaler(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: HorizontalPodAutoscalerArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: HorizontalPodAutoscalerArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: HorizontalPodAutoscalerArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: HorizontalPodAutoscalerArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: HorizontalPodAutoscalerArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: HorizontalPodAutoscalerArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: HorizontalPodAutoscalerArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let horizontalPodAutoscaler = HorizontalPodAutoscalerBuilder()

        [<AutoOpen>]
        module HorizontalPodAutoscalerList =
            open Pulumi.Kubernetes.Autoscaling.V2Beta1
            open Pulumi.Kubernetes.Types.Inputs.Autoscaling.V2Beta1

            type HorizontalPodAutoscalerListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, HorizontalPodAutoscalerListArgs()

                member _.Run(cargs, args: HorizontalPodAutoscalerListArgs) =
                    HorizontalPodAutoscalerList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: HorizontalPodAutoscalerListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: HorizontalPodAutoscalerListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: HorizontalPodAutoscalerListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: HorizontalPodAutoscalerListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: HorizontalPodAutoscalerListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: HorizontalPodAutoscalerListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: HorizontalPodAutoscalerListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let horizontalPodAutoscalerList = HorizontalPodAutoscalerListBuilder()

    module V2Beta2 =
        [<AutoOpen>]
        module HorizontalPodAutoscaler =
            open Pulumi.Kubernetes.Autoscaling.V2Beta2
            open Pulumi.Kubernetes.Types.Inputs.Autoscaling.V2Beta2

            type HorizontalPodAutoscalerBuilder() =
                member _.Yield _ = KubernetesResource.Zero, HorizontalPodAutoscalerArgs()
                member _.Run(cargs, args: HorizontalPodAutoscalerArgs) = HorizontalPodAutoscaler(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: HorizontalPodAutoscalerArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: HorizontalPodAutoscalerArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: HorizontalPodAutoscalerArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: HorizontalPodAutoscalerArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: HorizontalPodAutoscalerArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: HorizontalPodAutoscalerArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: HorizontalPodAutoscalerArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let horizontalPodAutoscaler = HorizontalPodAutoscalerBuilder()

        [<AutoOpen>]
        module HorizontalPodAutoscalerList =
            open Pulumi.Kubernetes.Autoscaling.V2Beta2
            open Pulumi.Kubernetes.Types.Inputs.Autoscaling.V2Beta2

            type HorizontalPodAutoscalerListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, HorizontalPodAutoscalerListArgs()

                member _.Run(cargs, args: HorizontalPodAutoscalerListArgs) =
                    HorizontalPodAutoscalerList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: HorizontalPodAutoscalerListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: HorizontalPodAutoscalerListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: HorizontalPodAutoscalerListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: HorizontalPodAutoscalerListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: HorizontalPodAutoscalerListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: HorizontalPodAutoscalerListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: HorizontalPodAutoscalerListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let horizontalPodAutoscalerList = HorizontalPodAutoscalerListBuilder()

module Batch =
    module V1 =
        [<AutoOpen>]
        module Job =
            open Pulumi.Kubernetes.Batch.V1
            open Pulumi.Kubernetes.Types.Inputs.Batch.V1

            type JobBuilder() =
                member _.Yield _ = KubernetesResource.Zero, JobArgs()
                member _.Run(cargs, args: JobArgs) = Job(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: JobArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: JobArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: JobArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: JobArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: JobArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: JobArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: JobArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let job = JobBuilder()

        [<AutoOpen>]
        module JobList =
            open Pulumi.Kubernetes.Batch.V1
            open Pulumi.Kubernetes.Types.Inputs.Batch.V1

            type JobListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, JobListArgs()
                member _.Run(cargs, args: JobListArgs) = JobList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: JobListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: JobListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: JobListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: JobListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: JobListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: JobListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: JobListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let jobList = JobListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module CronJob =
            open Pulumi.Kubernetes.Batch.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Batch.V1Beta1

            type CronJobBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CronJobArgs()
                member _.Run(cargs, args: CronJobArgs) = CronJob(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CronJobArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CronJobArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CronJobArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CronJobArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CronJobArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CronJobArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: CronJobArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let cronJob = CronJobBuilder()

        [<AutoOpen>]
        module CronJobList =
            open Pulumi.Kubernetes.Batch.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Batch.V1Beta1

            type CronJobListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CronJobListArgs()
                member _.Run(cargs, args: CronJobListArgs) = CronJobList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CronJobListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CronJobListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CronJobListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: CronJobListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CronJobListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CronJobListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CronJobListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let cronJobList = CronJobListBuilder()

    module V2Alpha1 =
        [<AutoOpen>]
        module CronJob =
            open Pulumi.Kubernetes.Batch.V2Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Batch.V2Alpha1

            type CronJobBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CronJobArgs()
                member _.Run(cargs, args: CronJobArgs) = CronJob(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CronJobArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CronJobArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CronJobArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CronJobArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CronJobArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CronJobArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: CronJobArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let cronJob = CronJobBuilder()

        [<AutoOpen>]
        module CronJobList =
            open Pulumi.Kubernetes.Batch.V2Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Batch.V2Alpha1

            type CronJobListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CronJobListArgs()
                member _.Run(cargs, args: CronJobListArgs) = CronJobList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CronJobListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CronJobListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CronJobListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: CronJobListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CronJobListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CronJobListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CronJobListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let cronJobList = CronJobListBuilder()

module Certificates =
    module V1Beta1 =
        [<AutoOpen>]
        module CertificateSigningRequest =
            open Pulumi.Kubernetes.Certificates.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Certificates.V1Beta1

            type CertificateSigningRequestBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CertificateSigningRequestArgs()
                member _.Run(cargs, args: CertificateSigningRequestArgs) = CertificateSigningRequest(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CertificateSigningRequestArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CertificateSigningRequestArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CertificateSigningRequestArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CertificateSigningRequestArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CertificateSigningRequestArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CertificateSigningRequestArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: CertificateSigningRequestArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let certificateSigningRequest = CertificateSigningRequestBuilder()

        [<AutoOpen>]
        module CertificateSigningRequestList =
            open Pulumi.Kubernetes.Certificates.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Certificates.V1Beta1

            type CertificateSigningRequestListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CertificateSigningRequestListArgs()

                member _.Run(cargs, args: CertificateSigningRequestListArgs) =
                    CertificateSigningRequestList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CertificateSigningRequestListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CertificateSigningRequestListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CertificateSigningRequestListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: CertificateSigningRequestListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CertificateSigningRequestListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CertificateSigningRequestListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CertificateSigningRequestListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let certificateSigningRequestList = CertificateSigningRequestListBuilder()

module Coordination =
    module V1 =
        [<AutoOpen>]
        module Lease =
            open Pulumi.Kubernetes.Coordination.V1
            open Pulumi.Kubernetes.Types.Inputs.Coordination.V1

            type LeaseBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LeaseArgs()
                member _.Run(cargs, args: LeaseArgs) = Lease(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: LeaseArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: LeaseArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: LeaseArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: LeaseArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: LeaseArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: LeaseArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: LeaseArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let lease = LeaseBuilder()

        [<AutoOpen>]
        module LeaseList =
            open Pulumi.Kubernetes.Coordination.V1
            open Pulumi.Kubernetes.Types.Inputs.Coordination.V1

            type LeaseListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LeaseListArgs()
                member _.Run(cargs, args: LeaseListArgs) = LeaseList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: LeaseListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: LeaseListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: LeaseListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: LeaseListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: LeaseListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: LeaseListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: LeaseListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let leaseList = LeaseListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module Lease =
            open Pulumi.Kubernetes.Coordination.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Coordination.V1Beta1

            type LeaseBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LeaseArgs()
                member _.Run(cargs, args: LeaseArgs) = Lease(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: LeaseArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: LeaseArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: LeaseArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: LeaseArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: LeaseArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: LeaseArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: LeaseArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let lease = LeaseBuilder()

        [<AutoOpen>]
        module LeaseList =
            open Pulumi.Kubernetes.Coordination.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Coordination.V1Beta1

            type LeaseListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LeaseListArgs()
                member _.Run(cargs, args: LeaseListArgs) = LeaseList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: LeaseListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: LeaseListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: LeaseListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: LeaseListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: LeaseListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: LeaseListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: LeaseListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let leaseList = LeaseListBuilder()

module Core =
    module V1 =
        [<AutoOpen>]
        module Binding =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type BindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, BindingArgs()
                member _.Run(cargs, args: BindingArgs) = Binding(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: BindingArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: BindingArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: BindingArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: BindingArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: BindingArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: BindingArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("target")>]
                member _.Target((cargs, args: BindingArgs), target) =
                    args.Target <- input target
                    cargs, args

            let binding = BindingBuilder()

        [<AutoOpen>]
        module ComponentStatus =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ComponentStatusBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ComponentStatusArgs()
                member _.Run(cargs, args: ComponentStatusArgs) = ComponentStatus(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ComponentStatusArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ComponentStatusArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ComponentStatusArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("conditions")>]
                member _.Conditions((cargs, args: ComponentStatusArgs), conditions) =
                    args.Conditions <- inputList conditions
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ComponentStatusArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ComponentStatusArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ComponentStatusArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let componentStatus = ComponentStatusBuilder()

        [<AutoOpen>]
        module ComponentStatusList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ComponentStatusListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ComponentStatusListArgs()
                member _.Run(cargs, args: ComponentStatusListArgs) = ComponentStatusList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ComponentStatusListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ComponentStatusListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ComponentStatusListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ComponentStatusListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ComponentStatusListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ComponentStatusListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ComponentStatusListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let componentStatusList = ComponentStatusListBuilder()

        [<AutoOpen>]
        module ConfigMap =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ConfigMapBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ConfigMapArgs()
                member _.Run(cargs, args: ConfigMapArgs) = ConfigMap(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ConfigMapArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ConfigMapArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ConfigMapArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("binaryData")>]
                member _.BinaryData((cargs, args: ConfigMapArgs), binaryData) =
                    args.BinaryData <- inputMap binaryData
                    cargs, args

                [<CustomOperation("data")>]
                member _.Data((cargs, args: ConfigMapArgs), data) =
                    args.Data <- inputMap data
                    cargs, args

                [<CustomOperation("immutable")>]
                member _.Immutable((cargs, args: ConfigMapArgs), immutable) =
                    args.Immutable <- input immutable
                    cargs, args

                member _.Immutable((cargs, args: ConfigMapArgs), immutable) =
                    args.Immutable <- io immutable
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ConfigMapArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ConfigMapArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ConfigMapArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let configMap = ConfigMapBuilder()

        [<AutoOpen>]
        module ConfigMapList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ConfigMapListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ConfigMapListArgs()
                member _.Run(cargs, args: ConfigMapListArgs) = ConfigMapList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ConfigMapListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ConfigMapListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ConfigMapListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ConfigMapListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ConfigMapListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ConfigMapListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ConfigMapListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let configMapList = ConfigMapListBuilder()

        [<AutoOpen>]
        module Endpoints =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type EndpointsBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EndpointsArgs()
                member _.Run(cargs, args: EndpointsArgs) = Endpoints(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: EndpointsArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: EndpointsArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: EndpointsArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: EndpointsArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: EndpointsArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: EndpointsArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("subsets")>]
                member _.Subsets((cargs, args: EndpointsArgs), subsets) =
                    args.Subsets <- inputList subsets
                    cargs, args

            let endpoints = EndpointsBuilder()

        [<AutoOpen>]
        module EndpointsList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type EndpointsListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EndpointsListArgs()
                member _.Run(cargs, args: EndpointsListArgs) = EndpointsList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: EndpointsListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: EndpointsListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: EndpointsListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: EndpointsListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: EndpointsListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: EndpointsListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: EndpointsListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let endpointsList = EndpointsListBuilder()

        [<AutoOpen>]
        module Event =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type EventBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EventArgs()
                member _.Run(cargs, args: EventArgs) = Event(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: EventArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("action")>]
                member _.Action((cargs, args: EventArgs), action) =
                    args.Action <- input action
                    cargs, args

                member _.Action((cargs, args: EventArgs), action) =
                    args.Action <- io action
                    cargs, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: EventArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: EventArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("count")>]
                member _.Count((cargs, args: EventArgs), count) =
                    args.Count <- input count
                    cargs, args

                member _.Count((cargs, args: EventArgs), count) =
                    args.Count <- io count
                    cargs, args

                [<CustomOperation("eventTime")>]
                member _.EventTime((cargs, args: EventArgs), eventTime) =
                    args.EventTime <- input eventTime
                    cargs, args

                member _.EventTime((cargs, args: EventArgs), eventTime) =
                    args.EventTime <- io eventTime
                    cargs, args

                [<CustomOperation("firstTimestamp")>]
                member _.FirstTimestamp((cargs, args: EventArgs), firstTimestamp) =
                    args.FirstTimestamp <- input firstTimestamp
                    cargs, args

                member _.FirstTimestamp((cargs, args: EventArgs), firstTimestamp) =
                    args.FirstTimestamp <- io firstTimestamp
                    cargs, args

                [<CustomOperation("involvedObject")>]
                member _.InvolvedObject((cargs, args: EventArgs), involvedObject) =
                    args.InvolvedObject <- input involvedObject
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: EventArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: EventArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("lastTimestamp")>]
                member _.LastTimestamp((cargs, args: EventArgs), lastTimestamp) =
                    args.LastTimestamp <- input lastTimestamp
                    cargs, args

                member _.LastTimestamp((cargs, args: EventArgs), lastTimestamp) =
                    args.LastTimestamp <- io lastTimestamp
                    cargs, args

                [<CustomOperation("message")>]
                member _.Message((cargs, args: EventArgs), message) =
                    args.Message <- input message
                    cargs, args

                member _.Message((cargs, args: EventArgs), message) =
                    args.Message <- io message
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: EventArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("reason")>]
                member _.Reason((cargs, args: EventArgs), reason) =
                    args.Reason <- input reason
                    cargs, args

                member _.Reason((cargs, args: EventArgs), reason) =
                    args.Reason <- io reason
                    cargs, args

                [<CustomOperation("related")>]
                member _.Related((cargs, args: EventArgs), related) =
                    args.Related <- input related
                    cargs, args

                [<CustomOperation("reportingComponent")>]
                member _.ReportingComponent((cargs, args: EventArgs), reportingComponent) =
                    args.ReportingComponent <- input reportingComponent
                    cargs, args

                member _.ReportingComponent((cargs, args: EventArgs), reportingComponent) =
                    args.ReportingComponent <- io reportingComponent
                    cargs, args

                [<CustomOperation("reportingInstance")>]
                member _.ReportingInstance((cargs, args: EventArgs), reportingInstance) =
                    args.ReportingInstance <- input reportingInstance
                    cargs, args

                member _.ReportingInstance((cargs, args: EventArgs), reportingInstance) =
                    args.ReportingInstance <- io reportingInstance
                    cargs, args

                [<CustomOperation("series")>]
                member _.Series((cargs, args: EventArgs), series) =
                    args.Series <- input series
                    cargs, args

                [<CustomOperation("source")>]
                member _.Source((cargs, args: EventArgs), source) =
                    args.Source <- input source
                    cargs, args

                [<CustomOperation("type")>]
                member _.Type((cargs, args: EventArgs), ``type``) =
                    args.Type <- input ``type``
                    cargs, args

                member _.Type((cargs, args: EventArgs), ``type``) =
                    args.Type <- io ``type``
                    cargs, args

            let event = EventBuilder()

        [<AutoOpen>]
        module EventList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type EventListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EventListArgs()
                member _.Run(cargs, args: EventListArgs) = EventList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: EventListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: EventListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: EventListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: EventListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: EventListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: EventListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: EventListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let eventList = EventListBuilder()

        [<AutoOpen>]
        module LimitRange =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type LimitRangeBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LimitRangeArgs()
                member _.Run(cargs, args: LimitRangeArgs) = LimitRange(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: LimitRangeArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: LimitRangeArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: LimitRangeArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: LimitRangeArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: LimitRangeArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: LimitRangeArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: LimitRangeArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let limitRange = LimitRangeBuilder()

        [<AutoOpen>]
        module LimitRangeList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type LimitRangeListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LimitRangeListArgs()
                member _.Run(cargs, args: LimitRangeListArgs) = LimitRangeList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: LimitRangeListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: LimitRangeListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: LimitRangeListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: LimitRangeListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: LimitRangeListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: LimitRangeListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: LimitRangeListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let limitRangeList = LimitRangeListBuilder()

        [<AutoOpen>]
        module Namespace =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type NamespaceBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NamespaceArgs()
                member _.Run(cargs, args: NamespaceArgs) = Namespace(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: NamespaceArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: NamespaceArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: NamespaceArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: NamespaceArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: NamespaceArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: NamespaceArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: NamespaceArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let ``namespace`` = NamespaceBuilder()

        [<AutoOpen>]
        module NamespaceList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type NamespaceListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NamespaceListArgs()
                member _.Run(cargs, args: NamespaceListArgs) = NamespaceList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: NamespaceListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: NamespaceListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: NamespaceListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: NamespaceListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: NamespaceListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: NamespaceListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: NamespaceListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let namespaceList = NamespaceListBuilder()

        [<AutoOpen>]
        module Node =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type NodeBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NodeArgs()
                member _.Run(cargs, args: NodeArgs) = Node(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: NodeArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: NodeArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: NodeArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: NodeArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: NodeArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: NodeArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: NodeArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let node = NodeBuilder()

        [<AutoOpen>]
        module NodeList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type NodeListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NodeListArgs()
                member _.Run(cargs, args: NodeListArgs) = NodeList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: NodeListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: NodeListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: NodeListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: NodeListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: NodeListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: NodeListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: NodeListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let nodeList = NodeListBuilder()

        [<AutoOpen>]
        module PersistentVolume =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PersistentVolumeBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PersistentVolumeArgs()
                member _.Run(cargs, args: PersistentVolumeArgs) = PersistentVolume(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PersistentVolumeArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PersistentVolumeArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PersistentVolumeArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PersistentVolumeArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PersistentVolumeArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PersistentVolumeArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: PersistentVolumeArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let persistentVolume = PersistentVolumeBuilder()

        [<AutoOpen>]
        module PersistentVolumeClaim =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PersistentVolumeClaimBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PersistentVolumeClaimArgs()
                member _.Run(cargs, args: PersistentVolumeClaimArgs) = PersistentVolumeClaim(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PersistentVolumeClaimArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PersistentVolumeClaimArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PersistentVolumeClaimArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PersistentVolumeClaimArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PersistentVolumeClaimArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PersistentVolumeClaimArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: PersistentVolumeClaimArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let persistentVolumeClaim = PersistentVolumeClaimBuilder()

        [<AutoOpen>]
        module PersistentVolumeClaimList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PersistentVolumeClaimListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PersistentVolumeClaimListArgs()
                member _.Run(cargs, args: PersistentVolumeClaimListArgs) = PersistentVolumeClaimList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PersistentVolumeClaimListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PersistentVolumeClaimListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PersistentVolumeClaimListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: PersistentVolumeClaimListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PersistentVolumeClaimListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PersistentVolumeClaimListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PersistentVolumeClaimListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let persistentVolumeClaimList = PersistentVolumeClaimListBuilder()

        [<AutoOpen>]
        module PersistentVolumeList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PersistentVolumeListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PersistentVolumeListArgs()
                member _.Run(cargs, args: PersistentVolumeListArgs) = PersistentVolumeList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PersistentVolumeListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PersistentVolumeListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PersistentVolumeListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: PersistentVolumeListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PersistentVolumeListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PersistentVolumeListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PersistentVolumeListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let persistentVolumeList = PersistentVolumeListBuilder()

        [<AutoOpen>]
        module Pod =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PodBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodArgs()
                member _.Run(cargs, args: PodArgs) = Pod(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PodArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PodArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PodArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PodArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PodArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PodArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: PodArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let pod = PodBuilder()

        [<AutoOpen>]
        module PodList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PodListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodListArgs()
                member _.Run(cargs, args: PodListArgs) = PodList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PodListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PodListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PodListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: PodListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PodListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PodListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PodListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let podList = PodListBuilder()

        [<AutoOpen>]
        module PodTemplate =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PodTemplateBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodTemplateArgs()
                member _.Run(cargs, args: PodTemplateArgs) = PodTemplate(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PodTemplateArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PodTemplateArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PodTemplateArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PodTemplateArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PodTemplateArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PodTemplateArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("template")>]
                member _.Template((cargs, args: PodTemplateArgs), template) =
                    args.Template <- input template
                    cargs, args

            let podTemplate = PodTemplateBuilder()

        [<AutoOpen>]
        module PodTemplateList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PodTemplateListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodTemplateListArgs()
                member _.Run(cargs, args: PodTemplateListArgs) = PodTemplateList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PodTemplateListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PodTemplateListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PodTemplateListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: PodTemplateListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PodTemplateListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PodTemplateListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PodTemplateListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let podTemplateList = PodTemplateListBuilder()

        [<AutoOpen>]
        module ReplicationController =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ReplicationControllerBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicationControllerArgs()
                member _.Run(cargs, args: ReplicationControllerArgs) = ReplicationController(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ReplicationControllerArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ReplicationControllerArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ReplicationControllerArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ReplicationControllerArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ReplicationControllerArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ReplicationControllerArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: ReplicationControllerArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let replicationController = ReplicationControllerBuilder()

        [<AutoOpen>]
        module ReplicationControllerList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ReplicationControllerListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicationControllerListArgs()
                member _.Run(cargs, args: ReplicationControllerListArgs) = ReplicationControllerList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ReplicationControllerListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ReplicationControllerListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ReplicationControllerListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ReplicationControllerListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ReplicationControllerListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ReplicationControllerListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ReplicationControllerListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let replicationControllerList = ReplicationControllerListBuilder()

        [<AutoOpen>]
        module ResourceQuota =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ResourceQuotaBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ResourceQuotaArgs()
                member _.Run(cargs, args: ResourceQuotaArgs) = ResourceQuota(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ResourceQuotaArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ResourceQuotaArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ResourceQuotaArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ResourceQuotaArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ResourceQuotaArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ResourceQuotaArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: ResourceQuotaArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let resourceQuota = ResourceQuotaBuilder()

        [<AutoOpen>]
        module ResourceQuotaList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ResourceQuotaListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ResourceQuotaListArgs()
                member _.Run(cargs, args: ResourceQuotaListArgs) = ResourceQuotaList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ResourceQuotaListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ResourceQuotaListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ResourceQuotaListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ResourceQuotaListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ResourceQuotaListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ResourceQuotaListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ResourceQuotaListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let resourceQuotaList = ResourceQuotaListBuilder()

        [<AutoOpen>]
        module Secret =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type SecretBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SecretArgs()
                member _.Run(cargs, args: SecretArgs) = Secret(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: SecretArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: SecretArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: SecretArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("data")>]
                member _.Data((cargs, args: SecretArgs), data) =
                    args.Data <- inputMap data
                    cargs, args

                [<CustomOperation("immutable")>]
                member _.Immutable((cargs, args: SecretArgs), immutable) =
                    args.Immutable <- input immutable
                    cargs, args

                member _.Immutable((cargs, args: SecretArgs), immutable) =
                    args.Immutable <- io immutable
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: SecretArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: SecretArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: SecretArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("stringData")>]
                member _.StringData((cargs, args: SecretArgs), stringData) =
                    args.StringData <- inputMap stringData
                    cargs, args

                [<CustomOperation("type")>]
                member _.Type((cargs, args: SecretArgs), ``type``) =
                    args.Type <- input ``type``
                    cargs, args

                member _.Type((cargs, args: SecretArgs), ``type``) =
                    args.Type <- io ``type``
                    cargs, args

            let secret = SecretBuilder()

        [<AutoOpen>]
        module SecretList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type SecretListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SecretListArgs()
                member _.Run(cargs, args: SecretListArgs) = SecretList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: SecretListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: SecretListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: SecretListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: SecretListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: SecretListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: SecretListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: SecretListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let secretList = SecretListBuilder()

        [<AutoOpen>]
        module Service =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ServiceBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ServiceArgs()
                member _.Run(cargs, args: ServiceArgs) = Service(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ServiceArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ServiceArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ServiceArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ServiceArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ServiceArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ServiceArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: ServiceArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let service = ServiceBuilder()

        [<AutoOpen>]
        module ServiceAccount =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ServiceAccountBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ServiceAccountArgs()
                member _.Run(cargs, args: ServiceAccountArgs) = ServiceAccount(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ServiceAccountArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ServiceAccountArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ServiceAccountArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("automountServiceAccountToken")>]
                member _.AutomountServiceAccountToken((cargs, args: ServiceAccountArgs), automountServiceAccountToken) =
                    args.AutomountServiceAccountToken <- input automountServiceAccountToken
                    cargs, args

                member _.AutomountServiceAccountToken((cargs, args: ServiceAccountArgs), automountServiceAccountToken) =
                    args.AutomountServiceAccountToken <- io automountServiceAccountToken
                    cargs, args

                [<CustomOperation("imagePullSecrets")>]
                member _.ImagePullSecrets((cargs, args: ServiceAccountArgs), imagePullSecrets) =
                    args.ImagePullSecrets <- inputList imagePullSecrets
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ServiceAccountArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ServiceAccountArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ServiceAccountArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("secrets")>]
                member _.Secrets((cargs, args: ServiceAccountArgs), secrets) =
                    args.Secrets <- inputList secrets
                    cargs, args

            let serviceAccount = ServiceAccountBuilder()

        [<AutoOpen>]
        module ServiceAccountList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ServiceAccountListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ServiceAccountListArgs()
                member _.Run(cargs, args: ServiceAccountListArgs) = ServiceAccountList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ServiceAccountListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ServiceAccountListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ServiceAccountListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ServiceAccountListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ServiceAccountListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ServiceAccountListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ServiceAccountListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let serviceAccountList = ServiceAccountListBuilder()

        [<AutoOpen>]
        module ServiceList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ServiceListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ServiceListArgs()
                member _.Run(cargs, args: ServiceListArgs) = ServiceList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ServiceListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ServiceListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ServiceListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ServiceListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ServiceListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ServiceListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ServiceListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let serviceList = ServiceListBuilder()

module Discovery =
    module V1Beta1 =
        [<AutoOpen>]
        module EndpointSlice =
            open Pulumi.Kubernetes.Discovery.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Discovery.V1Beta1

            type EndpointSliceBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EndpointSliceArgs()
                member _.Run(cargs, args: EndpointSliceArgs) = EndpointSlice(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: EndpointSliceArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("addressType")>]
                member _.AddressType((cargs, args: EndpointSliceArgs), addressType) =
                    args.AddressType <- input addressType
                    cargs, args

                member _.AddressType((cargs, args: EndpointSliceArgs), addressType) =
                    args.AddressType <- io addressType
                    cargs, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: EndpointSliceArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: EndpointSliceArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("endpoints")>]
                member _.Endpoints((cargs, args: EndpointSliceArgs), endpoints) =
                    args.Endpoints <- inputList endpoints
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: EndpointSliceArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: EndpointSliceArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: EndpointSliceArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("ports")>]
                member _.Ports((cargs, args: EndpointSliceArgs), ports) =
                    args.Ports <- inputList ports
                    cargs, args

            let endpointSlice = EndpointSliceBuilder()

        [<AutoOpen>]
        module EndpointSliceList =
            open Pulumi.Kubernetes.Discovery.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Discovery.V1Beta1

            type EndpointSliceListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EndpointSliceListArgs()
                member _.Run(cargs, args: EndpointSliceListArgs) = EndpointSliceList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: EndpointSliceListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: EndpointSliceListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: EndpointSliceListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: EndpointSliceListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: EndpointSliceListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: EndpointSliceListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: EndpointSliceListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let endpointSliceList = EndpointSliceListBuilder()

module Events =
    module V1Beta1 =
        [<AutoOpen>]
        module Event =
            open Pulumi.Kubernetes.Events.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Events.V1Beta1

            type EventBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EventArgs()
                member _.Run(cargs, args: EventArgs) = Event(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: EventArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("action")>]
                member _.Action((cargs, args: EventArgs), action) =
                    args.Action <- input action
                    cargs, args

                member _.Action((cargs, args: EventArgs), action) =
                    args.Action <- io action
                    cargs, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: EventArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: EventArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("deprecatedCount")>]
                member _.DeprecatedCount((cargs, args: EventArgs), deprecatedCount) =
                    args.DeprecatedCount <- input deprecatedCount
                    cargs, args

                member _.DeprecatedCount((cargs, args: EventArgs), deprecatedCount) =
                    args.DeprecatedCount <- io deprecatedCount
                    cargs, args

                [<CustomOperation("deprecatedFirstTimestamp")>]
                member _.DeprecatedFirstTimestamp((cargs, args: EventArgs), deprecatedFirstTimestamp) =
                    args.DeprecatedFirstTimestamp <- input deprecatedFirstTimestamp
                    cargs, args

                member _.DeprecatedFirstTimestamp((cargs, args: EventArgs), deprecatedFirstTimestamp) =
                    args.DeprecatedFirstTimestamp <- io deprecatedFirstTimestamp
                    cargs, args

                [<CustomOperation("deprecatedLastTimestamp")>]
                member _.DeprecatedLastTimestamp((cargs, args: EventArgs), deprecatedLastTimestamp) =
                    args.DeprecatedLastTimestamp <- input deprecatedLastTimestamp
                    cargs, args

                member _.DeprecatedLastTimestamp((cargs, args: EventArgs), deprecatedLastTimestamp) =
                    args.DeprecatedLastTimestamp <- io deprecatedLastTimestamp
                    cargs, args

                [<CustomOperation("deprecatedSource")>]
                member _.DeprecatedSource((cargs, args: EventArgs), deprecatedSource) =
                    args.DeprecatedSource <- input deprecatedSource
                    cargs, args

                [<CustomOperation("eventTime")>]
                member _.EventTime((cargs, args: EventArgs), eventTime) =
                    args.EventTime <- input eventTime
                    cargs, args

                member _.EventTime((cargs, args: EventArgs), eventTime) =
                    args.EventTime <- io eventTime
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: EventArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: EventArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: EventArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("note")>]
                member _.Note((cargs, args: EventArgs), note) =
                    args.Note <- input note
                    cargs, args

                member _.Note((cargs, args: EventArgs), note) =
                    args.Note <- io note
                    cargs, args

                [<CustomOperation("reason")>]
                member _.Reason((cargs, args: EventArgs), reason) =
                    args.Reason <- input reason
                    cargs, args

                member _.Reason((cargs, args: EventArgs), reason) =
                    args.Reason <- io reason
                    cargs, args

                [<CustomOperation("regarding")>]
                member _.Regarding((cargs, args: EventArgs), regarding) =
                    args.Regarding <- input regarding
                    cargs, args

                [<CustomOperation("related")>]
                member _.Related((cargs, args: EventArgs), related) =
                    args.Related <- input related
                    cargs, args

                [<CustomOperation("reportingController")>]
                member _.ReportingController((cargs, args: EventArgs), reportingController) =
                    args.ReportingController <- input reportingController
                    cargs, args

                member _.ReportingController((cargs, args: EventArgs), reportingController) =
                    args.ReportingController <- io reportingController
                    cargs, args

                [<CustomOperation("reportingInstance")>]
                member _.ReportingInstance((cargs, args: EventArgs), reportingInstance) =
                    args.ReportingInstance <- input reportingInstance
                    cargs, args

                member _.ReportingInstance((cargs, args: EventArgs), reportingInstance) =
                    args.ReportingInstance <- io reportingInstance
                    cargs, args

                [<CustomOperation("series")>]
                member _.Series((cargs, args: EventArgs), series) =
                    args.Series <- input series
                    cargs, args

                [<CustomOperation("type")>]
                member _.Type((cargs, args: EventArgs), ``type``) =
                    args.Type <- input ``type``
                    cargs, args

                member _.Type((cargs, args: EventArgs), ``type``) =
                    args.Type <- io ``type``
                    cargs, args

            let event = EventBuilder()

        [<AutoOpen>]
        module EventList =
            open Pulumi.Kubernetes.Events.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Events.V1Beta1

            type EventListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EventListArgs()
                member _.Run(cargs, args: EventListArgs) = EventList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: EventListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: EventListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: EventListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: EventListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: EventListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: EventListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: EventListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let eventList = EventListBuilder()

module Extensions =
    module V1Beta1 =
        [<AutoOpen>]
        module DaemonSet =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type DaemonSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DaemonSetArgs()
                member _.Run(cargs, args: DaemonSetArgs) = DaemonSet(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DaemonSetArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DaemonSetArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DaemonSetArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DaemonSetArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DaemonSetArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DaemonSetArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: DaemonSetArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let daemonSet = DaemonSetBuilder()

        [<AutoOpen>]
        module DaemonSetList =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type DaemonSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DaemonSetListArgs()
                member _.Run(cargs, args: DaemonSetListArgs) = DaemonSetList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DaemonSetListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DaemonSetListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DaemonSetListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: DaemonSetListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DaemonSetListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DaemonSetListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DaemonSetListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let daemonSetList = DaemonSetListBuilder()

        [<AutoOpen>]
        module Deployment =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type DeploymentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentArgs()
                member _.Run(cargs, args: DeploymentArgs) = Deployment(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DeploymentArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DeploymentArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DeploymentArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DeploymentArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DeploymentArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DeploymentArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: DeploymentArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let deployment = DeploymentBuilder()

        [<AutoOpen>]
        module DeploymentList =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type DeploymentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentListArgs()
                member _.Run(cargs, args: DeploymentListArgs) = DeploymentList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: DeploymentListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: DeploymentListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: DeploymentListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: DeploymentListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: DeploymentListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: DeploymentListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: DeploymentListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let deploymentList = DeploymentListBuilder()

        [<AutoOpen>]
        module Ingress =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type IngressBuilder() =
                member _.Yield _ = KubernetesResource.Zero, IngressArgs()
                member _.Run(cargs, args: IngressArgs) = Ingress(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: IngressArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: IngressArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: IngressArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: IngressArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: IngressArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: IngressArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: IngressArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let ingress = IngressBuilder()

        [<AutoOpen>]
        module IngressList =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type IngressListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, IngressListArgs()
                member _.Run(cargs, args: IngressListArgs) = IngressList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: IngressListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: IngressListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: IngressListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: IngressListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: IngressListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: IngressListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: IngressListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let ingressList = IngressListBuilder()

        [<AutoOpen>]
        module NetworkPolicy =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type NetworkPolicyBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NetworkPolicyArgs()
                member _.Run(cargs, args: NetworkPolicyArgs) = NetworkPolicy(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: NetworkPolicyArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: NetworkPolicyArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: NetworkPolicyArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: NetworkPolicyArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: NetworkPolicyArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: NetworkPolicyArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: NetworkPolicyArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let networkPolicy = NetworkPolicyBuilder()

        [<AutoOpen>]
        module NetworkPolicyList =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type NetworkPolicyListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NetworkPolicyListArgs()
                member _.Run(cargs, args: NetworkPolicyListArgs) = NetworkPolicyList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: NetworkPolicyListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: NetworkPolicyListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: NetworkPolicyListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: NetworkPolicyListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: NetworkPolicyListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: NetworkPolicyListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: NetworkPolicyListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let networkPolicyList = NetworkPolicyListBuilder()

        [<AutoOpen>]
        module PodSecurityPolicy =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type PodSecurityPolicyBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodSecurityPolicyArgs()
                member _.Run(cargs, args: PodSecurityPolicyArgs) = PodSecurityPolicy(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PodSecurityPolicyArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PodSecurityPolicyArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PodSecurityPolicyArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PodSecurityPolicyArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PodSecurityPolicyArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PodSecurityPolicyArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: PodSecurityPolicyArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let podSecurityPolicy = PodSecurityPolicyBuilder()

        [<AutoOpen>]
        module PodSecurityPolicyList =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type PodSecurityPolicyListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodSecurityPolicyListArgs()
                member _.Run(cargs, args: PodSecurityPolicyListArgs) = PodSecurityPolicyList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PodSecurityPolicyListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PodSecurityPolicyListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PodSecurityPolicyListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: PodSecurityPolicyListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PodSecurityPolicyListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PodSecurityPolicyListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PodSecurityPolicyListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let podSecurityPolicyList = PodSecurityPolicyListBuilder()

        [<AutoOpen>]
        module ReplicaSet =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type ReplicaSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicaSetArgs()
                member _.Run(cargs, args: ReplicaSetArgs) = ReplicaSet(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ReplicaSetArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ReplicaSetArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ReplicaSetArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ReplicaSetArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ReplicaSetArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ReplicaSetArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: ReplicaSetArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let replicaSet = ReplicaSetBuilder()

        [<AutoOpen>]
        module ReplicaSetList =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type ReplicaSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicaSetListArgs()
                member _.Run(cargs, args: ReplicaSetListArgs) = ReplicaSetList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ReplicaSetListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ReplicaSetListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ReplicaSetListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ReplicaSetListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ReplicaSetListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ReplicaSetListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ReplicaSetListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let replicaSetList = ReplicaSetListBuilder()

module FlowControl =
    module V1Alpha1 =
        [<AutoOpen>]
        module FlowSchema =
            open Pulumi.Kubernetes.FlowControl.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.FlowControl.V1Alpha1

            type FlowSchemaBuilder() =
                member _.Yield _ = KubernetesResource.Zero, FlowSchemaArgs()
                member _.Run(cargs, args: FlowSchemaArgs) = FlowSchema(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: FlowSchemaArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: FlowSchemaArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: FlowSchemaArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: FlowSchemaArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: FlowSchemaArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: FlowSchemaArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: FlowSchemaArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let flowSchema = FlowSchemaBuilder()

        [<AutoOpen>]
        module FlowSchemaList =
            open Pulumi.Kubernetes.FlowControl.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.FlowControl.V1Alpha1

            type FlowSchemaListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, FlowSchemaListArgs()
                member _.Run(cargs, args: FlowSchemaListArgs) = FlowSchemaList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: FlowSchemaListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: FlowSchemaListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: FlowSchemaListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: FlowSchemaListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: FlowSchemaListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: FlowSchemaListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: FlowSchemaListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let flowSchemaList = FlowSchemaListBuilder()

        [<AutoOpen>]
        module PriorityLevelConfiguration =
            open Pulumi.Kubernetes.FlowControl.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.FlowControl.V1Alpha1

            type PriorityLevelConfigurationBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityLevelConfigurationArgs()
                member _.Run(cargs, args: PriorityLevelConfigurationArgs) = PriorityLevelConfiguration(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PriorityLevelConfigurationArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PriorityLevelConfigurationArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PriorityLevelConfigurationArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PriorityLevelConfigurationArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PriorityLevelConfigurationArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PriorityLevelConfigurationArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: PriorityLevelConfigurationArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let priorityLevelConfiguration = PriorityLevelConfigurationBuilder()

        [<AutoOpen>]
        module PriorityLevelConfigurationList =
            open Pulumi.Kubernetes.FlowControl.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.FlowControl.V1Alpha1

            type PriorityLevelConfigurationListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityLevelConfigurationListArgs()

                member _.Run(cargs, args: PriorityLevelConfigurationListArgs) =
                    PriorityLevelConfigurationList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PriorityLevelConfigurationListArgs), name) =
                    { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PriorityLevelConfigurationListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PriorityLevelConfigurationListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: PriorityLevelConfigurationListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PriorityLevelConfigurationListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PriorityLevelConfigurationListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PriorityLevelConfigurationListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let priorityLevelConfigurationList = PriorityLevelConfigurationListBuilder()

module Meta =
    module V1 =
        [<AutoOpen>]
        module Status =
            open Pulumi.Kubernetes.Meta.V1
            open Pulumi.Kubernetes.Types.Inputs.Meta.V1

            type StatusBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatusArgs()
                member _.Run(cargs, args: StatusArgs) = Status(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: StatusArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: StatusArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: StatusArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("code")>]
                member _.Code((cargs, args: StatusArgs), code) =
                    args.Code <- input code
                    cargs, args

                member _.Code((cargs, args: StatusArgs), code) =
                    args.Code <- io code
                    cargs, args

                [<CustomOperation("details")>]
                member _.Details((cargs, args: StatusArgs), details) =
                    args.Details <- input details
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: StatusArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: StatusArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("message")>]
                member _.Message((cargs, args: StatusArgs), message) =
                    args.Message <- input message
                    cargs, args

                member _.Message((cargs, args: StatusArgs), message) =
                    args.Message <- io message
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: StatusArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("reason")>]
                member _.Reason((cargs, args: StatusArgs), reason) =
                    args.Reason <- input reason
                    cargs, args

                member _.Reason((cargs, args: StatusArgs), reason) =
                    args.Reason <- io reason
                    cargs, args

            let status = StatusBuilder()

module Networking =
    module V1 =
        [<AutoOpen>]
        module NetworkPolicy =
            open Pulumi.Kubernetes.Networking.V1
            open Pulumi.Kubernetes.Types.Inputs.Networking.V1

            type NetworkPolicyBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NetworkPolicyArgs()
                member _.Run(cargs, args: NetworkPolicyArgs) = NetworkPolicy(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: NetworkPolicyArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: NetworkPolicyArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: NetworkPolicyArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: NetworkPolicyArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: NetworkPolicyArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: NetworkPolicyArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: NetworkPolicyArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let networkPolicy = NetworkPolicyBuilder()

        [<AutoOpen>]
        module NetworkPolicyList =
            open Pulumi.Kubernetes.Networking.V1
            open Pulumi.Kubernetes.Types.Inputs.Networking.V1

            type NetworkPolicyListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NetworkPolicyListArgs()
                member _.Run(cargs, args: NetworkPolicyListArgs) = NetworkPolicyList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: NetworkPolicyListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: NetworkPolicyListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: NetworkPolicyListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: NetworkPolicyListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: NetworkPolicyListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: NetworkPolicyListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: NetworkPolicyListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let networkPolicyList = NetworkPolicyListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module Ingress =
            open Pulumi.Kubernetes.Networking.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Networking.V1Beta1

            type IngressBuilder() =
                member _.Yield _ = KubernetesResource.Zero, IngressArgs()
                member _.Run(cargs, args: IngressArgs) = Ingress(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: IngressArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: IngressArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: IngressArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: IngressArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: IngressArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: IngressArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: IngressArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let ingress = IngressBuilder()

        [<AutoOpen>]
        module IngressClass =
            open Pulumi.Kubernetes.Networking.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Networking.V1Beta1

            type IngressClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, IngressClassArgs()
                member _.Run(cargs, args: IngressClassArgs) = IngressClass(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: IngressClassArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: IngressClassArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: IngressClassArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: IngressClassArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: IngressClassArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: IngressClassArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: IngressClassArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let ingressClass = IngressClassBuilder()

        [<AutoOpen>]
        module IngressClassList =
            open Pulumi.Kubernetes.Networking.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Networking.V1Beta1

            type IngressClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, IngressClassListArgs()
                member _.Run(cargs, args: IngressClassListArgs) = IngressClassList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: IngressClassListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: IngressClassListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: IngressClassListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: IngressClassListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: IngressClassListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: IngressClassListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: IngressClassListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let ingressClassList = IngressClassListBuilder()

        [<AutoOpen>]
        module IngressList =
            open Pulumi.Kubernetes.Networking.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Networking.V1Beta1

            type IngressListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, IngressListArgs()
                member _.Run(cargs, args: IngressListArgs) = IngressList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: IngressListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: IngressListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: IngressListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: IngressListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: IngressListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: IngressListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: IngressListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let ingressList = IngressListBuilder()

module Node =
    module V1Alpha1 =
        [<AutoOpen>]
        module RuntimeClass =
            open Pulumi.Kubernetes.Node.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Node.V1Alpha1

            type RuntimeClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RuntimeClassArgs()
                member _.Run(cargs, args: RuntimeClassArgs) = RuntimeClass(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RuntimeClassArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RuntimeClassArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RuntimeClassArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RuntimeClassArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RuntimeClassArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RuntimeClassArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: RuntimeClassArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let runtimeClass = RuntimeClassBuilder()

        [<AutoOpen>]
        module RuntimeClassList =
            open Pulumi.Kubernetes.Node.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Node.V1Alpha1

            type RuntimeClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RuntimeClassListArgs()
                member _.Run(cargs, args: RuntimeClassListArgs) = RuntimeClassList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RuntimeClassListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RuntimeClassListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RuntimeClassListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: RuntimeClassListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RuntimeClassListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RuntimeClassListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RuntimeClassListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let runtimeClassList = RuntimeClassListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module RuntimeClass =
            open Pulumi.Kubernetes.Node.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Node.V1Beta1

            type RuntimeClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RuntimeClassArgs()
                member _.Run(cargs, args: RuntimeClassArgs) = RuntimeClass(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RuntimeClassArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RuntimeClassArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RuntimeClassArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("handler")>]
                member _.Handler((cargs, args: RuntimeClassArgs), handler) =
                    args.Handler <- input handler
                    cargs, args

                member _.Handler((cargs, args: RuntimeClassArgs), handler) =
                    args.Handler <- io handler
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RuntimeClassArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RuntimeClassArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RuntimeClassArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("overhead")>]
                member _.Overhead((cargs, args: RuntimeClassArgs), overhead) =
                    args.Overhead <- input overhead
                    cargs, args

                [<CustomOperation("scheduling")>]
                member _.Scheduling((cargs, args: RuntimeClassArgs), scheduling) =
                    args.Scheduling <- input scheduling
                    cargs, args

            let runtimeClass = RuntimeClassBuilder()

        [<AutoOpen>]
        module RuntimeClassList =
            open Pulumi.Kubernetes.Node.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Node.V1Beta1

            type RuntimeClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RuntimeClassListArgs()
                member _.Run(cargs, args: RuntimeClassListArgs) = RuntimeClassList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RuntimeClassListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RuntimeClassListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RuntimeClassListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: RuntimeClassListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RuntimeClassListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RuntimeClassListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RuntimeClassListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let runtimeClassList = RuntimeClassListBuilder()

module Policy =
    module V1Beta1 =
        [<AutoOpen>]
        module PodDisruptionBudget =
            open Pulumi.Kubernetes.Policy.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Policy.V1Beta1

            type PodDisruptionBudgetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodDisruptionBudgetArgs()
                member _.Run(cargs, args: PodDisruptionBudgetArgs) = PodDisruptionBudget(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PodDisruptionBudgetArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PodDisruptionBudgetArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PodDisruptionBudgetArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PodDisruptionBudgetArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PodDisruptionBudgetArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PodDisruptionBudgetArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: PodDisruptionBudgetArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let podDisruptionBudget = PodDisruptionBudgetBuilder()

        [<AutoOpen>]
        module PodDisruptionBudgetList =
            open Pulumi.Kubernetes.Policy.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Policy.V1Beta1

            type PodDisruptionBudgetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodDisruptionBudgetListArgs()
                member _.Run(cargs, args: PodDisruptionBudgetListArgs) = PodDisruptionBudgetList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PodDisruptionBudgetListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PodDisruptionBudgetListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PodDisruptionBudgetListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: PodDisruptionBudgetListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PodDisruptionBudgetListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PodDisruptionBudgetListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PodDisruptionBudgetListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let podDisruptionBudgetList = PodDisruptionBudgetListBuilder()

        [<AutoOpen>]
        module PodSecurityPolicy =
            open Pulumi.Kubernetes.Policy.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Policy.V1Beta1

            type PodSecurityPolicyBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodSecurityPolicyArgs()
                member _.Run(cargs, args: PodSecurityPolicyArgs) = PodSecurityPolicy(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PodSecurityPolicyArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PodSecurityPolicyArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PodSecurityPolicyArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PodSecurityPolicyArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PodSecurityPolicyArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PodSecurityPolicyArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: PodSecurityPolicyArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let podSecurityPolicy = PodSecurityPolicyBuilder()

        [<AutoOpen>]
        module PodSecurityPolicyList =
            open Pulumi.Kubernetes.Policy.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Policy.V1Beta1

            type PodSecurityPolicyListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodSecurityPolicyListArgs()
                member _.Run(cargs, args: PodSecurityPolicyListArgs) = PodSecurityPolicyList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PodSecurityPolicyListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PodSecurityPolicyListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PodSecurityPolicyListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: PodSecurityPolicyListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PodSecurityPolicyListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PodSecurityPolicyListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PodSecurityPolicyListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let podSecurityPolicyList = PodSecurityPolicyListBuilder()

module Rbac =
    module V1 =
        [<AutoOpen>]
        module ClusterRole =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type ClusterRoleBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleArgs()
                member _.Run(cargs, args: ClusterRoleArgs) = ClusterRole(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ClusterRoleArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("aggregationRule")>]
                member _.AggregationRule((cargs, args: ClusterRoleArgs), aggregationRule) =
                    args.AggregationRule <- input aggregationRule
                    cargs, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ClusterRoleArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ClusterRoleArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ClusterRoleArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ClusterRoleArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ClusterRoleArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("rules")>]
                member _.Rules((cargs, args: ClusterRoleArgs), rules) =
                    args.Rules <- inputList rules
                    cargs, args

            let clusterRole = ClusterRoleBuilder()

        [<AutoOpen>]
        module ClusterRoleBinding =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type ClusterRoleBindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleBindingArgs()
                member _.Run(cargs, args: ClusterRoleBindingArgs) = ClusterRoleBinding(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ClusterRoleBindingArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ClusterRoleBindingArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ClusterRoleBindingArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ClusterRoleBindingArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ClusterRoleBindingArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ClusterRoleBindingArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("roleRef")>]
                member _.RoleRef((cargs, args: ClusterRoleBindingArgs), roleRef) =
                    args.RoleRef <- input roleRef
                    cargs, args

                [<CustomOperation("subjects")>]
                member _.Subjects((cargs, args: ClusterRoleBindingArgs), subjects) =
                    args.Subjects <- inputList subjects
                    cargs, args

            let clusterRoleBinding = ClusterRoleBindingBuilder()

        [<AutoOpen>]
        module ClusterRoleBindingList =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type ClusterRoleBindingListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleBindingListArgs()
                member _.Run(cargs, args: ClusterRoleBindingListArgs) = ClusterRoleBindingList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ClusterRoleBindingListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ClusterRoleBindingListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ClusterRoleBindingListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ClusterRoleBindingListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ClusterRoleBindingListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ClusterRoleBindingListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ClusterRoleBindingListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let clusterRoleBindingList = ClusterRoleBindingListBuilder()

        [<AutoOpen>]
        module ClusterRoleList =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type ClusterRoleListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleListArgs()
                member _.Run(cargs, args: ClusterRoleListArgs) = ClusterRoleList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ClusterRoleListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ClusterRoleListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ClusterRoleListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ClusterRoleListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ClusterRoleListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ClusterRoleListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ClusterRoleListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let clusterRoleList = ClusterRoleListBuilder()

        [<AutoOpen>]
        module Role =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type RoleBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleArgs()
                member _.Run(cargs, args: RoleArgs) = Role(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RoleArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RoleArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RoleArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RoleArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RoleArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RoleArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("rules")>]
                member _.Rules((cargs, args: RoleArgs), rules) =
                    args.Rules <- inputList rules
                    cargs, args

            let role = RoleBuilder()

        [<AutoOpen>]
        module RoleBinding =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type RoleBindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleBindingArgs()
                member _.Run(cargs, args: RoleBindingArgs) = RoleBinding(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RoleBindingArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RoleBindingArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RoleBindingArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RoleBindingArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RoleBindingArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RoleBindingArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("roleRef")>]
                member _.RoleRef((cargs, args: RoleBindingArgs), roleRef) =
                    args.RoleRef <- input roleRef
                    cargs, args

                [<CustomOperation("subjects")>]
                member _.Subjects((cargs, args: RoleBindingArgs), subjects) =
                    args.Subjects <- inputList subjects
                    cargs, args

            let roleBinding = RoleBindingBuilder()

        [<AutoOpen>]
        module RoleBindingList =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type RoleBindingListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleBindingListArgs()
                member _.Run(cargs, args: RoleBindingListArgs) = RoleBindingList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RoleBindingListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RoleBindingListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RoleBindingListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: RoleBindingListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RoleBindingListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RoleBindingListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RoleBindingListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let roleBindingList = RoleBindingListBuilder()

        [<AutoOpen>]
        module RoleList =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type RoleListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleListArgs()
                member _.Run(cargs, args: RoleListArgs) = RoleList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RoleListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RoleListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RoleListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: RoleListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RoleListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RoleListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RoleListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let roleList = RoleListBuilder()

    module V1Alpha1 =
        [<AutoOpen>]
        module ClusterRole =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type ClusterRoleBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleArgs()
                member _.Run(cargs, args: ClusterRoleArgs) = ClusterRole(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ClusterRoleArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("aggregationRule")>]
                member _.AggregationRule((cargs, args: ClusterRoleArgs), aggregationRule) =
                    args.AggregationRule <- input aggregationRule
                    cargs, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ClusterRoleArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ClusterRoleArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ClusterRoleArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ClusterRoleArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ClusterRoleArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("rules")>]
                member _.Rules((cargs, args: ClusterRoleArgs), rules) =
                    args.Rules <- inputList rules
                    cargs, args

            let clusterRole = ClusterRoleBuilder()

        [<AutoOpen>]
        module ClusterRoleBinding =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type ClusterRoleBindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleBindingArgs()
                member _.Run(cargs, args: ClusterRoleBindingArgs) = ClusterRoleBinding(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ClusterRoleBindingArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ClusterRoleBindingArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ClusterRoleBindingArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ClusterRoleBindingArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ClusterRoleBindingArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ClusterRoleBindingArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("roleRef")>]
                member _.RoleRef((cargs, args: ClusterRoleBindingArgs), roleRef) =
                    args.RoleRef <- input roleRef
                    cargs, args

                [<CustomOperation("subjects")>]
                member _.Subjects((cargs, args: ClusterRoleBindingArgs), subjects) =
                    args.Subjects <- inputList subjects
                    cargs, args

            let clusterRoleBinding = ClusterRoleBindingBuilder()

        [<AutoOpen>]
        module ClusterRoleBindingList =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type ClusterRoleBindingListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleBindingListArgs()
                member _.Run(cargs, args: ClusterRoleBindingListArgs) = ClusterRoleBindingList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ClusterRoleBindingListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ClusterRoleBindingListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ClusterRoleBindingListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ClusterRoleBindingListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ClusterRoleBindingListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ClusterRoleBindingListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ClusterRoleBindingListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let clusterRoleBindingList = ClusterRoleBindingListBuilder()

        [<AutoOpen>]
        module ClusterRoleList =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type ClusterRoleListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleListArgs()
                member _.Run(cargs, args: ClusterRoleListArgs) = ClusterRoleList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ClusterRoleListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ClusterRoleListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ClusterRoleListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ClusterRoleListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ClusterRoleListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ClusterRoleListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ClusterRoleListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let clusterRoleList = ClusterRoleListBuilder()

        [<AutoOpen>]
        module Role =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type RoleBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleArgs()
                member _.Run(cargs, args: RoleArgs) = Role(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RoleArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RoleArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RoleArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RoleArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RoleArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RoleArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("rules")>]
                member _.Rules((cargs, args: RoleArgs), rules) =
                    args.Rules <- inputList rules
                    cargs, args

            let role = RoleBuilder()

        [<AutoOpen>]
        module RoleBinding =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type RoleBindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleBindingArgs()
                member _.Run(cargs, args: RoleBindingArgs) = RoleBinding(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RoleBindingArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RoleBindingArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RoleBindingArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RoleBindingArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RoleBindingArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RoleBindingArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("roleRef")>]
                member _.RoleRef((cargs, args: RoleBindingArgs), roleRef) =
                    args.RoleRef <- input roleRef
                    cargs, args

                [<CustomOperation("subjects")>]
                member _.Subjects((cargs, args: RoleBindingArgs), subjects) =
                    args.Subjects <- inputList subjects
                    cargs, args

            let roleBinding = RoleBindingBuilder()

        [<AutoOpen>]
        module RoleBindingList =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type RoleBindingListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleBindingListArgs()
                member _.Run(cargs, args: RoleBindingListArgs) = RoleBindingList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RoleBindingListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RoleBindingListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RoleBindingListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: RoleBindingListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RoleBindingListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RoleBindingListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RoleBindingListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let roleBindingList = RoleBindingListBuilder()

        [<AutoOpen>]
        module RoleList =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type RoleListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleListArgs()
                member _.Run(cargs, args: RoleListArgs) = RoleList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RoleListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RoleListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RoleListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: RoleListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RoleListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RoleListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RoleListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let roleList = RoleListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module ClusterRole =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type ClusterRoleBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleArgs()
                member _.Run(cargs, args: ClusterRoleArgs) = ClusterRole(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ClusterRoleArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("aggregationRule")>]
                member _.AggregationRule((cargs, args: ClusterRoleArgs), aggregationRule) =
                    args.AggregationRule <- input aggregationRule
                    cargs, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ClusterRoleArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ClusterRoleArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ClusterRoleArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ClusterRoleArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ClusterRoleArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("rules")>]
                member _.Rules((cargs, args: ClusterRoleArgs), rules) =
                    args.Rules <- inputList rules
                    cargs, args

            let clusterRole = ClusterRoleBuilder()

        [<AutoOpen>]
        module ClusterRoleBinding =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type ClusterRoleBindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleBindingArgs()
                member _.Run(cargs, args: ClusterRoleBindingArgs) = ClusterRoleBinding(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ClusterRoleBindingArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ClusterRoleBindingArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ClusterRoleBindingArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ClusterRoleBindingArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ClusterRoleBindingArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ClusterRoleBindingArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("roleRef")>]
                member _.RoleRef((cargs, args: ClusterRoleBindingArgs), roleRef) =
                    args.RoleRef <- input roleRef
                    cargs, args

                [<CustomOperation("subjects")>]
                member _.Subjects((cargs, args: ClusterRoleBindingArgs), subjects) =
                    args.Subjects <- inputList subjects
                    cargs, args

            let clusterRoleBinding = ClusterRoleBindingBuilder()

        [<AutoOpen>]
        module ClusterRoleBindingList =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type ClusterRoleBindingListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleBindingListArgs()
                member _.Run(cargs, args: ClusterRoleBindingListArgs) = ClusterRoleBindingList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ClusterRoleBindingListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ClusterRoleBindingListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ClusterRoleBindingListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ClusterRoleBindingListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ClusterRoleBindingListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ClusterRoleBindingListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ClusterRoleBindingListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let clusterRoleBindingList = ClusterRoleBindingListBuilder()

        [<AutoOpen>]
        module ClusterRoleList =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type ClusterRoleListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleListArgs()
                member _.Run(cargs, args: ClusterRoleListArgs) = ClusterRoleList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: ClusterRoleListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: ClusterRoleListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: ClusterRoleListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: ClusterRoleListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: ClusterRoleListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: ClusterRoleListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: ClusterRoleListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let clusterRoleList = ClusterRoleListBuilder()

        [<AutoOpen>]
        module Role =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type RoleBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleArgs()
                member _.Run(cargs, args: RoleArgs) = Role(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RoleArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RoleArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RoleArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RoleArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RoleArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RoleArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("rules")>]
                member _.Rules((cargs, args: RoleArgs), rules) =
                    args.Rules <- inputList rules
                    cargs, args

            let role = RoleBuilder()

        [<AutoOpen>]
        module RoleBinding =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type RoleBindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleBindingArgs()
                member _.Run(cargs, args: RoleBindingArgs) = RoleBinding(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RoleBindingArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RoleBindingArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RoleBindingArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RoleBindingArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RoleBindingArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RoleBindingArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("roleRef")>]
                member _.RoleRef((cargs, args: RoleBindingArgs), roleRef) =
                    args.RoleRef <- input roleRef
                    cargs, args

                [<CustomOperation("subjects")>]
                member _.Subjects((cargs, args: RoleBindingArgs), subjects) =
                    args.Subjects <- inputList subjects
                    cargs, args

            let roleBinding = RoleBindingBuilder()

        [<AutoOpen>]
        module RoleBindingList =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type RoleBindingListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleBindingListArgs()
                member _.Run(cargs, args: RoleBindingListArgs) = RoleBindingList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RoleBindingListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RoleBindingListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RoleBindingListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: RoleBindingListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RoleBindingListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RoleBindingListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RoleBindingListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let roleBindingList = RoleBindingListBuilder()

        [<AutoOpen>]
        module RoleList =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type RoleListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleListArgs()
                member _.Run(cargs, args: RoleListArgs) = RoleList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: RoleListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: RoleListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: RoleListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: RoleListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: RoleListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: RoleListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: RoleListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let roleList = RoleListBuilder()

module Scheduling =
    module V1 =
        [<AutoOpen>]
        module PriorityClass =
            open Pulumi.Kubernetes.Scheduling.V1
            open Pulumi.Kubernetes.Types.Inputs.Scheduling.V1

            type PriorityClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityClassArgs()
                member _.Run(cargs, args: PriorityClassArgs) = PriorityClass(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PriorityClassArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PriorityClassArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PriorityClassArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("description")>]
                member _.Description((cargs, args: PriorityClassArgs), description) =
                    args.Description <- input description
                    cargs, args

                member _.Description((cargs, args: PriorityClassArgs), description) =
                    args.Description <- io description
                    cargs, args

                [<CustomOperation("globalDefault")>]
                member _.GlobalDefault((cargs, args: PriorityClassArgs), globalDefault) =
                    args.GlobalDefault <- input globalDefault
                    cargs, args

                member _.GlobalDefault((cargs, args: PriorityClassArgs), globalDefault) =
                    args.GlobalDefault <- io globalDefault
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PriorityClassArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PriorityClassArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PriorityClassArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("preemptionPolicy")>]
                member _.PreemptionPolicy((cargs, args: PriorityClassArgs), preemptionPolicy) =
                    args.PreemptionPolicy <- input preemptionPolicy
                    cargs, args

                member _.PreemptionPolicy((cargs, args: PriorityClassArgs), preemptionPolicy) =
                    args.PreemptionPolicy <- io preemptionPolicy
                    cargs, args

                [<CustomOperation("value")>]
                member _.Value((cargs, args: PriorityClassArgs), value) =
                    args.Value <- input value
                    cargs, args

                member _.Value((cargs, args: PriorityClassArgs), value) =
                    args.Value <- io value
                    cargs, args

            let priorityClass = PriorityClassBuilder()

        [<AutoOpen>]
        module PriorityClassList =
            open Pulumi.Kubernetes.Scheduling.V1
            open Pulumi.Kubernetes.Types.Inputs.Scheduling.V1

            type PriorityClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityClassListArgs()
                member _.Run(cargs, args: PriorityClassListArgs) = PriorityClassList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PriorityClassListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PriorityClassListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PriorityClassListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: PriorityClassListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PriorityClassListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PriorityClassListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PriorityClassListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let priorityClassList = PriorityClassListBuilder()

    module V1Alpha1 =
        [<AutoOpen>]
        module PriorityClass =
            open Pulumi.Kubernetes.Scheduling.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Scheduling.V1Alpha1

            type PriorityClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityClassArgs()
                member _.Run(cargs, args: PriorityClassArgs) = PriorityClass(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PriorityClassArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PriorityClassArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PriorityClassArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("description")>]
                member _.Description((cargs, args: PriorityClassArgs), description) =
                    args.Description <- input description
                    cargs, args

                member _.Description((cargs, args: PriorityClassArgs), description) =
                    args.Description <- io description
                    cargs, args

                [<CustomOperation("globalDefault")>]
                member _.GlobalDefault((cargs, args: PriorityClassArgs), globalDefault) =
                    args.GlobalDefault <- input globalDefault
                    cargs, args

                member _.GlobalDefault((cargs, args: PriorityClassArgs), globalDefault) =
                    args.GlobalDefault <- io globalDefault
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PriorityClassArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PriorityClassArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PriorityClassArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("preemptionPolicy")>]
                member _.PreemptionPolicy((cargs, args: PriorityClassArgs), preemptionPolicy) =
                    args.PreemptionPolicy <- input preemptionPolicy
                    cargs, args

                member _.PreemptionPolicy((cargs, args: PriorityClassArgs), preemptionPolicy) =
                    args.PreemptionPolicy <- io preemptionPolicy
                    cargs, args

                [<CustomOperation("value")>]
                member _.Value((cargs, args: PriorityClassArgs), value) =
                    args.Value <- input value
                    cargs, args

                member _.Value((cargs, args: PriorityClassArgs), value) =
                    args.Value <- io value
                    cargs, args

            let priorityClass = PriorityClassBuilder()

        [<AutoOpen>]
        module PriorityClassList =
            open Pulumi.Kubernetes.Scheduling.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Scheduling.V1Alpha1

            type PriorityClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityClassListArgs()
                member _.Run(cargs, args: PriorityClassListArgs) = PriorityClassList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PriorityClassListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PriorityClassListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PriorityClassListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: PriorityClassListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PriorityClassListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PriorityClassListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PriorityClassListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let priorityClassList = PriorityClassListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module PriorityClass =
            open Pulumi.Kubernetes.Scheduling.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Scheduling.V1Beta1

            type PriorityClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityClassArgs()
                member _.Run(cargs, args: PriorityClassArgs) = PriorityClass(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PriorityClassArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PriorityClassArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PriorityClassArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("description")>]
                member _.Description((cargs, args: PriorityClassArgs), description) =
                    args.Description <- input description
                    cargs, args

                member _.Description((cargs, args: PriorityClassArgs), description) =
                    args.Description <- io description
                    cargs, args

                [<CustomOperation("globalDefault")>]
                member _.GlobalDefault((cargs, args: PriorityClassArgs), globalDefault) =
                    args.GlobalDefault <- input globalDefault
                    cargs, args

                member _.GlobalDefault((cargs, args: PriorityClassArgs), globalDefault) =
                    args.GlobalDefault <- io globalDefault
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PriorityClassArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PriorityClassArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PriorityClassArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("preemptionPolicy")>]
                member _.PreemptionPolicy((cargs, args: PriorityClassArgs), preemptionPolicy) =
                    args.PreemptionPolicy <- input preemptionPolicy
                    cargs, args

                member _.PreemptionPolicy((cargs, args: PriorityClassArgs), preemptionPolicy) =
                    args.PreemptionPolicy <- io preemptionPolicy
                    cargs, args

                [<CustomOperation("value")>]
                member _.Value((cargs, args: PriorityClassArgs), value) =
                    args.Value <- input value
                    cargs, args

                member _.Value((cargs, args: PriorityClassArgs), value) =
                    args.Value <- io value
                    cargs, args

            let priorityClass = PriorityClassBuilder()

        [<AutoOpen>]
        module PriorityClassList =
            open Pulumi.Kubernetes.Scheduling.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Scheduling.V1Beta1

            type PriorityClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityClassListArgs()
                member _.Run(cargs, args: PriorityClassListArgs) = PriorityClassList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PriorityClassListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PriorityClassListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PriorityClassListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: PriorityClassListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PriorityClassListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PriorityClassListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PriorityClassListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let priorityClassList = PriorityClassListBuilder()

module Settings =
    module V1Alpha1 =
        [<AutoOpen>]
        module PodPreset =
            open Pulumi.Kubernetes.Settings.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Settings.V1Alpha1

            type PodPresetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodPresetArgs()
                member _.Run(cargs, args: PodPresetArgs) = PodPreset(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PodPresetArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PodPresetArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PodPresetArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PodPresetArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PodPresetArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PodPresetArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: PodPresetArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let podPreset = PodPresetBuilder()

        [<AutoOpen>]
        module PodPresetList =
            open Pulumi.Kubernetes.Settings.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Settings.V1Alpha1

            type PodPresetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodPresetListArgs()
                member _.Run(cargs, args: PodPresetListArgs) = PodPresetList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: PodPresetListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: PodPresetListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: PodPresetListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: PodPresetListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: PodPresetListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: PodPresetListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: PodPresetListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let podPresetList = PodPresetListBuilder()

module Storage =
    module V1 =
        [<AutoOpen>]
        module CSIDriver =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type CSIDriverBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSIDriverArgs()
                member _.Run(cargs, args: CSIDriverArgs) = CSIDriver(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CSIDriverArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CSIDriverArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CSIDriverArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CSIDriverArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CSIDriverArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CSIDriverArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: CSIDriverArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let cSIDriver = CSIDriverBuilder()

        [<AutoOpen>]
        module CSIDriverList =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type CSIDriverListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSIDriverListArgs()
                member _.Run(cargs, args: CSIDriverListArgs) = CSIDriverList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CSIDriverListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CSIDriverListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CSIDriverListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: CSIDriverListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CSIDriverListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CSIDriverListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CSIDriverListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let cSIDriverList = CSIDriverListBuilder()

        [<AutoOpen>]
        module CSINode =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type CSINodeBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSINodeArgs()
                member _.Run(cargs, args: CSINodeArgs) = CSINode(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CSINodeArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CSINodeArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CSINodeArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CSINodeArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CSINodeArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CSINodeArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: CSINodeArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let cSINode = CSINodeBuilder()

        [<AutoOpen>]
        module CSINodeList =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type CSINodeListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSINodeListArgs()
                member _.Run(cargs, args: CSINodeListArgs) = CSINodeList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CSINodeListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CSINodeListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CSINodeListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: CSINodeListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CSINodeListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CSINodeListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CSINodeListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let cSINodeList = CSINodeListBuilder()

        [<AutoOpen>]
        module StorageClass =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type StorageClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StorageClassArgs()
                member _.Run(cargs, args: StorageClassArgs) = StorageClass(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: StorageClassArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("allowVolumeExpansion")>]
                member _.AllowVolumeExpansion((cargs, args: StorageClassArgs), allowVolumeExpansion) =
                    args.AllowVolumeExpansion <- input allowVolumeExpansion
                    cargs, args

                member _.AllowVolumeExpansion((cargs, args: StorageClassArgs), allowVolumeExpansion) =
                    args.AllowVolumeExpansion <- io allowVolumeExpansion
                    cargs, args

                [<CustomOperation("allowedTopologies")>]
                member _.AllowedTopologies((cargs, args: StorageClassArgs), allowedTopologies) =
                    args.AllowedTopologies <- inputList allowedTopologies
                    cargs, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: StorageClassArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: StorageClassArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: StorageClassArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: StorageClassArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: StorageClassArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("mountOptions")>]
                member _.MountOptions((cargs, args: StorageClassArgs), mountOptions) =
                    args.MountOptions <- inputList mountOptions
                    cargs, args

                [<CustomOperation("parameters")>]
                member _.Parameters((cargs, args: StorageClassArgs), parameters) =
                    args.Parameters <- inputMap parameters
                    cargs, args

                [<CustomOperation("provisioner")>]
                member _.Provisioner((cargs, args: StorageClassArgs), provisioner) =
                    args.Provisioner <- input provisioner
                    cargs, args

                member _.Provisioner((cargs, args: StorageClassArgs), provisioner) =
                    args.Provisioner <- io provisioner
                    cargs, args

                [<CustomOperation("reclaimPolicy")>]
                member _.ReclaimPolicy((cargs, args: StorageClassArgs), reclaimPolicy) =
                    args.ReclaimPolicy <- input reclaimPolicy
                    cargs, args

                member _.ReclaimPolicy((cargs, args: StorageClassArgs), reclaimPolicy) =
                    args.ReclaimPolicy <- io reclaimPolicy
                    cargs, args

                [<CustomOperation("volumeBindingMode")>]
                member _.VolumeBindingMode((cargs, args: StorageClassArgs), volumeBindingMode) =
                    args.VolumeBindingMode <- input volumeBindingMode
                    cargs, args

                member _.VolumeBindingMode((cargs, args: StorageClassArgs), volumeBindingMode) =
                    args.VolumeBindingMode <- io volumeBindingMode
                    cargs, args

            let storageClass = StorageClassBuilder()

        [<AutoOpen>]
        module StorageClassList =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type StorageClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StorageClassListArgs()
                member _.Run(cargs, args: StorageClassListArgs) = StorageClassList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: StorageClassListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: StorageClassListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: StorageClassListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: StorageClassListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: StorageClassListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: StorageClassListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: StorageClassListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let storageClassList = StorageClassListBuilder()

        [<AutoOpen>]
        module VolumeAttachment =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type VolumeAttachmentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, VolumeAttachmentArgs()
                member _.Run(cargs, args: VolumeAttachmentArgs) = VolumeAttachment(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: VolumeAttachmentArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: VolumeAttachmentArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: VolumeAttachmentArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: VolumeAttachmentArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: VolumeAttachmentArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: VolumeAttachmentArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: VolumeAttachmentArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let volumeAttachment = VolumeAttachmentBuilder()

        [<AutoOpen>]
        module VolumeAttachmentList =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type VolumeAttachmentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, VolumeAttachmentListArgs()
                member _.Run(cargs, args: VolumeAttachmentListArgs) = VolumeAttachmentList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: VolumeAttachmentListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: VolumeAttachmentListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: VolumeAttachmentListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: VolumeAttachmentListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: VolumeAttachmentListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: VolumeAttachmentListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: VolumeAttachmentListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let volumeAttachmentList = VolumeAttachmentListBuilder()

    module V1Alpha1 =
        [<AutoOpen>]
        module VolumeAttachment =
            open Pulumi.Kubernetes.Storage.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Alpha1

            type VolumeAttachmentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, VolumeAttachmentArgs()
                member _.Run(cargs, args: VolumeAttachmentArgs) = VolumeAttachment(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: VolumeAttachmentArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: VolumeAttachmentArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: VolumeAttachmentArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: VolumeAttachmentArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: VolumeAttachmentArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: VolumeAttachmentArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: VolumeAttachmentArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let volumeAttachment = VolumeAttachmentBuilder()

        [<AutoOpen>]
        module VolumeAttachmentList =
            open Pulumi.Kubernetes.Storage.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Alpha1

            type VolumeAttachmentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, VolumeAttachmentListArgs()
                member _.Run(cargs, args: VolumeAttachmentListArgs) = VolumeAttachmentList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: VolumeAttachmentListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: VolumeAttachmentListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: VolumeAttachmentListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: VolumeAttachmentListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: VolumeAttachmentListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: VolumeAttachmentListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: VolumeAttachmentListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let volumeAttachmentList = VolumeAttachmentListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module CSIDriver =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type CSIDriverBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSIDriverArgs()
                member _.Run(cargs, args: CSIDriverArgs) = CSIDriver(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CSIDriverArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CSIDriverArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CSIDriverArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CSIDriverArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CSIDriverArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CSIDriverArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: CSIDriverArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let cSIDriver = CSIDriverBuilder()

        [<AutoOpen>]
        module CSIDriverList =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type CSIDriverListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSIDriverListArgs()
                member _.Run(cargs, args: CSIDriverListArgs) = CSIDriverList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CSIDriverListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CSIDriverListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CSIDriverListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: CSIDriverListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CSIDriverListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CSIDriverListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CSIDriverListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let cSIDriverList = CSIDriverListBuilder()

        [<AutoOpen>]
        module CSINode =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type CSINodeBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSINodeArgs()
                member _.Run(cargs, args: CSINodeArgs) = CSINode(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CSINodeArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CSINodeArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CSINodeArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CSINodeArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CSINodeArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CSINodeArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: CSINodeArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let cSINode = CSINodeBuilder()

        [<AutoOpen>]
        module CSINodeList =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type CSINodeListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSINodeListArgs()
                member _.Run(cargs, args: CSINodeListArgs) = CSINodeList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: CSINodeListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: CSINodeListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: CSINodeListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: CSINodeListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: CSINodeListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: CSINodeListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: CSINodeListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let cSINodeList = CSINodeListBuilder()

        [<AutoOpen>]
        module StorageClass =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type StorageClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StorageClassArgs()
                member _.Run(cargs, args: StorageClassArgs) = StorageClass(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: StorageClassArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("allowVolumeExpansion")>]
                member _.AllowVolumeExpansion((cargs, args: StorageClassArgs), allowVolumeExpansion) =
                    args.AllowVolumeExpansion <- input allowVolumeExpansion
                    cargs, args

                member _.AllowVolumeExpansion((cargs, args: StorageClassArgs), allowVolumeExpansion) =
                    args.AllowVolumeExpansion <- io allowVolumeExpansion
                    cargs, args

                [<CustomOperation("allowedTopologies")>]
                member _.AllowedTopologies((cargs, args: StorageClassArgs), allowedTopologies) =
                    args.AllowedTopologies <- inputList allowedTopologies
                    cargs, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: StorageClassArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: StorageClassArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: StorageClassArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: StorageClassArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: StorageClassArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("mountOptions")>]
                member _.MountOptions((cargs, args: StorageClassArgs), mountOptions) =
                    args.MountOptions <- inputList mountOptions
                    cargs, args

                [<CustomOperation("parameters")>]
                member _.Parameters((cargs, args: StorageClassArgs), parameters) =
                    args.Parameters <- inputMap parameters
                    cargs, args

                [<CustomOperation("provisioner")>]
                member _.Provisioner((cargs, args: StorageClassArgs), provisioner) =
                    args.Provisioner <- input provisioner
                    cargs, args

                member _.Provisioner((cargs, args: StorageClassArgs), provisioner) =
                    args.Provisioner <- io provisioner
                    cargs, args

                [<CustomOperation("reclaimPolicy")>]
                member _.ReclaimPolicy((cargs, args: StorageClassArgs), reclaimPolicy) =
                    args.ReclaimPolicy <- input reclaimPolicy
                    cargs, args

                member _.ReclaimPolicy((cargs, args: StorageClassArgs), reclaimPolicy) =
                    args.ReclaimPolicy <- io reclaimPolicy
                    cargs, args

                [<CustomOperation("volumeBindingMode")>]
                member _.VolumeBindingMode((cargs, args: StorageClassArgs), volumeBindingMode) =
                    args.VolumeBindingMode <- input volumeBindingMode
                    cargs, args

                member _.VolumeBindingMode((cargs, args: StorageClassArgs), volumeBindingMode) =
                    args.VolumeBindingMode <- io volumeBindingMode
                    cargs, args

            let storageClass = StorageClassBuilder()

        [<AutoOpen>]
        module StorageClassList =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type StorageClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StorageClassListArgs()
                member _.Run(cargs, args: StorageClassListArgs) = StorageClassList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: StorageClassListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: StorageClassListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: StorageClassListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: StorageClassListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: StorageClassListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: StorageClassListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: StorageClassListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let storageClassList = StorageClassListBuilder()

        [<AutoOpen>]
        module VolumeAttachment =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type VolumeAttachmentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, VolumeAttachmentArgs()
                member _.Run(cargs, args: VolumeAttachmentArgs) = VolumeAttachment(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: VolumeAttachmentArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: VolumeAttachmentArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: VolumeAttachmentArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: VolumeAttachmentArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: VolumeAttachmentArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: VolumeAttachmentArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

                [<CustomOperation("spec")>]
                member _.Spec((cargs, args: VolumeAttachmentArgs), spec) =
                    args.Spec <- input spec
                    cargs, args

            let volumeAttachment = VolumeAttachmentBuilder()

        [<AutoOpen>]
        module VolumeAttachmentList =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type VolumeAttachmentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, VolumeAttachmentListArgs()
                member _.Run(cargs, args: VolumeAttachmentListArgs) = VolumeAttachmentList(cargs.Name, args)

                [<CustomOperation("name")>]
                member _.Name((cargs, args: VolumeAttachmentListArgs), name) = { cargs with Name = name }, args

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((cargs, args: VolumeAttachmentListArgs), apiVersion) =
                    args.ApiVersion <- input apiVersion
                    cargs, args

                member _.ApiVersion((cargs, args: VolumeAttachmentListArgs), apiVersion) =
                    args.ApiVersion <- io apiVersion
                    cargs, args

                [<CustomOperation("items")>]
                member _.Items((cargs, args: VolumeAttachmentListArgs), items) =
                    args.Items <- inputList items
                    cargs, args

                [<CustomOperation("kind")>]
                member _.Kind((cargs, args: VolumeAttachmentListArgs), kind) =
                    args.Kind <- input kind
                    cargs, args

                member _.Kind((cargs, args: VolumeAttachmentListArgs), kind) =
                    args.Kind <- io kind
                    cargs, args

                [<CustomOperation("metadata")>]
                member _.Metadata((cargs, args: VolumeAttachmentListArgs), metadata) =
                    args.Metadata <- input metadata
                    cargs, args

            let volumeAttachmentList = VolumeAttachmentListBuilder()
