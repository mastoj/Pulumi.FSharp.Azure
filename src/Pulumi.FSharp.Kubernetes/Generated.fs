//------------------------------------------------------------------------------
//        This code was generated by myriad.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------
namespace Pulumi.FSharp.Kubernetes

open Pulumi.FSharp
open Pulumi.FSharp.Kubernetes

module Types =
    module Inputs =
        module Apps =
            module V1 =
                [<AutoOpen>]
                module RollingUpdateDaemonSet =
                    open Pulumi.Kubernetes.Apps.V1
                    open Pulumi.Kubernetes.Types.Inputs.Apps.V1

                    type RollingUpdateDaemonSetBuilder() =
                        member _.Yield _ = KubernetesResource.Zero, RollingUpdateDaemonSetArgs()
                        member _.Run(_cargs_, _args_: RollingUpdateDaemonSetArgs) = _args_

                        [<CustomOperation("name")>]
                        member _.Name((_cargs_, _args_: RollingUpdateDaemonSetArgs), name) =
                            { _cargs_ with Name = name }, _args_

                        [<CustomOperation("maxUnavailable")>]
                        member _.MaxUnavailable((_cargs_, _args_: RollingUpdateDaemonSetArgs), maxUnavailable) =
                            _args_.MaxUnavailable <- inputUnion1Of2 maxUnavailable
                            _cargs_, _args_

                        member _.MaxUnavailable((_cargs_, _args_: RollingUpdateDaemonSetArgs), maxUnavailable) =
                            _args_.MaxUnavailable <- inputUnion2Of2 maxUnavailable
                            _cargs_, _args_

                    let rollingUpdateDaemonSet = RollingUpdateDaemonSetBuilder()

            module V1Beta2 =
                [<AutoOpen>]
                module RollingUpdateDaemonSet =
                    open Pulumi.Kubernetes.Apps.V1Beta2
                    open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

                    type RollingUpdateDaemonSetBuilder() =
                        member _.Yield _ = KubernetesResource.Zero, RollingUpdateDaemonSetArgs()
                        member _.Run(_cargs_, _args_: RollingUpdateDaemonSetArgs) = _args_

                        [<CustomOperation("name")>]
                        member _.Name((_cargs_, _args_: RollingUpdateDaemonSetArgs), name) =
                            { _cargs_ with Name = name }, _args_

                        [<CustomOperation("maxUnavailable")>]
                        member _.MaxUnavailable((_cargs_, _args_: RollingUpdateDaemonSetArgs), maxUnavailable) =
                            _args_.MaxUnavailable <- inputUnion1Of2 maxUnavailable
                            _cargs_, _args_

                        member _.MaxUnavailable((_cargs_, _args_: RollingUpdateDaemonSetArgs), maxUnavailable) =
                            _args_.MaxUnavailable <- inputUnion2Of2 maxUnavailable
                            _cargs_, _args_

                    let rollingUpdateDaemonSet = RollingUpdateDaemonSetBuilder()

        module Extensions =
            module V1Beta1 =
                [<AutoOpen>]
                module RollingUpdateDaemonSet =
                    open Pulumi.Kubernetes.Extensions.V1Beta1
                    open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

                    type RollingUpdateDaemonSetBuilder() =
                        member _.Yield _ = KubernetesResource.Zero, RollingUpdateDaemonSetArgs()
                        member _.Run(_cargs_, _args_: RollingUpdateDaemonSetArgs) = _args_

                        [<CustomOperation("name")>]
                        member _.Name((_cargs_, _args_: RollingUpdateDaemonSetArgs), name) =
                            { _cargs_ with Name = name }, _args_

                        [<CustomOperation("maxUnavailable")>]
                        member _.MaxUnavailable((_cargs_, _args_: RollingUpdateDaemonSetArgs), maxUnavailable) =
                            _args_.MaxUnavailable <- inputUnion1Of2 maxUnavailable
                            _cargs_, _args_

                        member _.MaxUnavailable((_cargs_, _args_: RollingUpdateDaemonSetArgs), maxUnavailable) =
                            _args_.MaxUnavailable <- inputUnion2Of2 maxUnavailable
                            _cargs_, _args_

                    let rollingUpdateDaemonSet = RollingUpdateDaemonSetBuilder()

module AdmissionRegistration =
    module V1 =
        [<AutoOpen>]
        module MutatingWebhookConfiguration =
            open Pulumi.Kubernetes.AdmissionRegistration.V1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1

            type MutatingWebhookConfigurationBuilder() =
                member _.Yield _ = KubernetesResource.Zero, MutatingWebhookConfigurationArgs()

                member _.Run(_cargs_, _args_: MutatingWebhookConfigurationArgs) =
                    MutatingWebhookConfiguration(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: MutatingWebhookConfigurationArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: MutatingWebhookConfigurationArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: MutatingWebhookConfigurationArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: MutatingWebhookConfigurationArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: MutatingWebhookConfigurationArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: MutatingWebhookConfigurationArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("webhooks")>]
                member _.Webhooks((_cargs_, _args_: MutatingWebhookConfigurationArgs), webhooks) =
                    _args_.Webhooks <- inputList webhooks
                    _cargs_, _args_

            let mutatingWebhookConfiguration = MutatingWebhookConfigurationBuilder()

        [<AutoOpen>]
        module MutatingWebhookConfigurationList =
            open Pulumi.Kubernetes.AdmissionRegistration.V1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1

            type MutatingWebhookConfigurationListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, MutatingWebhookConfigurationListArgs()

                member _.Run(_cargs_, _args_: MutatingWebhookConfigurationListArgs) =
                    MutatingWebhookConfigurationList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: MutatingWebhookConfigurationListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: MutatingWebhookConfigurationListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: MutatingWebhookConfigurationListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: MutatingWebhookConfigurationListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: MutatingWebhookConfigurationListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: MutatingWebhookConfigurationListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: MutatingWebhookConfigurationListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let mutatingWebhookConfigurationList =
                MutatingWebhookConfigurationListBuilder()

        [<AutoOpen>]
        module ValidatingWebhookConfiguration =
            open Pulumi.Kubernetes.AdmissionRegistration.V1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1

            type ValidatingWebhookConfigurationBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ValidatingWebhookConfigurationArgs()

                member _.Run(_cargs_, _args_: ValidatingWebhookConfigurationArgs) =
                    ValidatingWebhookConfiguration(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ValidatingWebhookConfigurationArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ValidatingWebhookConfigurationArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ValidatingWebhookConfigurationArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ValidatingWebhookConfigurationArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ValidatingWebhookConfigurationArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ValidatingWebhookConfigurationArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("webhooks")>]
                member _.Webhooks((_cargs_, _args_: ValidatingWebhookConfigurationArgs), webhooks) =
                    _args_.Webhooks <- inputList webhooks
                    _cargs_, _args_

            let validatingWebhookConfiguration = ValidatingWebhookConfigurationBuilder()

        [<AutoOpen>]
        module ValidatingWebhookConfigurationList =
            open Pulumi.Kubernetes.AdmissionRegistration.V1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1

            type ValidatingWebhookConfigurationListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ValidatingWebhookConfigurationListArgs()

                member _.Run(_cargs_, _args_: ValidatingWebhookConfigurationListArgs) =
                    ValidatingWebhookConfigurationList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let validatingWebhookConfigurationList =
                ValidatingWebhookConfigurationListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module MutatingWebhookConfiguration =
            open Pulumi.Kubernetes.AdmissionRegistration.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1Beta1

            type MutatingWebhookConfigurationBuilder() =
                member _.Yield _ = KubernetesResource.Zero, MutatingWebhookConfigurationArgs()

                member _.Run(_cargs_, _args_: MutatingWebhookConfigurationArgs) =
                    MutatingWebhookConfiguration(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: MutatingWebhookConfigurationArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: MutatingWebhookConfigurationArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: MutatingWebhookConfigurationArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: MutatingWebhookConfigurationArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: MutatingWebhookConfigurationArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: MutatingWebhookConfigurationArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("webhooks")>]
                member _.Webhooks((_cargs_, _args_: MutatingWebhookConfigurationArgs), webhooks) =
                    _args_.Webhooks <- inputList webhooks
                    _cargs_, _args_

            let mutatingWebhookConfiguration = MutatingWebhookConfigurationBuilder()

        [<AutoOpen>]
        module MutatingWebhookConfigurationList =
            open Pulumi.Kubernetes.AdmissionRegistration.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1Beta1

            type MutatingWebhookConfigurationListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, MutatingWebhookConfigurationListArgs()

                member _.Run(_cargs_, _args_: MutatingWebhookConfigurationListArgs) =
                    MutatingWebhookConfigurationList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: MutatingWebhookConfigurationListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: MutatingWebhookConfigurationListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: MutatingWebhookConfigurationListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: MutatingWebhookConfigurationListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: MutatingWebhookConfigurationListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: MutatingWebhookConfigurationListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: MutatingWebhookConfigurationListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let mutatingWebhookConfigurationList =
                MutatingWebhookConfigurationListBuilder()

        [<AutoOpen>]
        module ValidatingWebhookConfiguration =
            open Pulumi.Kubernetes.AdmissionRegistration.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1Beta1

            type ValidatingWebhookConfigurationBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ValidatingWebhookConfigurationArgs()

                member _.Run(_cargs_, _args_: ValidatingWebhookConfigurationArgs) =
                    ValidatingWebhookConfiguration(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ValidatingWebhookConfigurationArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ValidatingWebhookConfigurationArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ValidatingWebhookConfigurationArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ValidatingWebhookConfigurationArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ValidatingWebhookConfigurationArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ValidatingWebhookConfigurationArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("webhooks")>]
                member _.Webhooks((_cargs_, _args_: ValidatingWebhookConfigurationArgs), webhooks) =
                    _args_.Webhooks <- inputList webhooks
                    _cargs_, _args_

            let validatingWebhookConfiguration = ValidatingWebhookConfigurationBuilder()

        [<AutoOpen>]
        module ValidatingWebhookConfigurationList =
            open Pulumi.Kubernetes.AdmissionRegistration.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1Beta1

            type ValidatingWebhookConfigurationListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ValidatingWebhookConfigurationListArgs()

                member _.Run(_cargs_, _args_: ValidatingWebhookConfigurationListArgs) =
                    ValidatingWebhookConfigurationList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ValidatingWebhookConfigurationListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let validatingWebhookConfigurationList =
                ValidatingWebhookConfigurationListBuilder()

module ApiExtensions =
    module V1 =
        [<AutoOpen>]
        module CustomResourceDefinition =
            open Pulumi.Kubernetes.ApiExtensions.V1
            open Pulumi.Kubernetes.Types.Inputs.ApiExtensions.V1

            type CustomResourceDefinitionBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CustomResourceDefinitionArgs()

                member _.Run(_cargs_, _args_: CustomResourceDefinitionArgs) =
                    CustomResourceDefinition(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CustomResourceDefinitionArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CustomResourceDefinitionArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CustomResourceDefinitionArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CustomResourceDefinitionArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CustomResourceDefinitionArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CustomResourceDefinitionArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: CustomResourceDefinitionArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let customResourceDefinition = CustomResourceDefinitionBuilder()

        [<AutoOpen>]
        module CustomResourceDefinitionList =
            open Pulumi.Kubernetes.ApiExtensions.V1
            open Pulumi.Kubernetes.Types.Inputs.ApiExtensions.V1

            type CustomResourceDefinitionListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CustomResourceDefinitionListArgs()

                member _.Run(_cargs_, _args_: CustomResourceDefinitionListArgs) =
                    CustomResourceDefinitionList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CustomResourceDefinitionListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CustomResourceDefinitionListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CustomResourceDefinitionListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: CustomResourceDefinitionListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CustomResourceDefinitionListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CustomResourceDefinitionListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CustomResourceDefinitionListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let customResourceDefinitionList = CustomResourceDefinitionListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module CustomResourceDefinition =
            open Pulumi.Kubernetes.ApiExtensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.ApiExtensions.V1Beta1

            type CustomResourceDefinitionBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CustomResourceDefinitionArgs()

                member _.Run(_cargs_, _args_: CustomResourceDefinitionArgs) =
                    CustomResourceDefinition(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CustomResourceDefinitionArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CustomResourceDefinitionArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CustomResourceDefinitionArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CustomResourceDefinitionArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CustomResourceDefinitionArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CustomResourceDefinitionArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: CustomResourceDefinitionArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let customResourceDefinition = CustomResourceDefinitionBuilder()

        [<AutoOpen>]
        module CustomResourceDefinitionList =
            open Pulumi.Kubernetes.ApiExtensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.ApiExtensions.V1Beta1

            type CustomResourceDefinitionListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CustomResourceDefinitionListArgs()

                member _.Run(_cargs_, _args_: CustomResourceDefinitionListArgs) =
                    CustomResourceDefinitionList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CustomResourceDefinitionListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CustomResourceDefinitionListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CustomResourceDefinitionListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: CustomResourceDefinitionListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CustomResourceDefinitionListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CustomResourceDefinitionListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CustomResourceDefinitionListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let customResourceDefinitionList = CustomResourceDefinitionListBuilder()

module ApiRegistration =
    module V1 =
        [<AutoOpen>]
        module APIService =
            open Pulumi.Kubernetes.ApiRegistration.V1
            open Pulumi.Kubernetes.Types.Inputs.ApiRegistration.V1

            type APIServiceBuilder() =
                member _.Yield _ = KubernetesResource.Zero, APIServiceArgs()
                member _.Run(_cargs_, _args_: APIServiceArgs) = APIService(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: APIServiceArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: APIServiceArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: APIServiceArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: APIServiceArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: APIServiceArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: APIServiceArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: APIServiceArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let aPIService = APIServiceBuilder()

        [<AutoOpen>]
        module APIServiceList =
            open Pulumi.Kubernetes.ApiRegistration.V1
            open Pulumi.Kubernetes.Types.Inputs.ApiRegistration.V1

            type APIServiceListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, APIServiceListArgs()
                member _.Run(_cargs_, _args_: APIServiceListArgs) = APIServiceList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: APIServiceListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: APIServiceListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: APIServiceListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: APIServiceListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: APIServiceListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: APIServiceListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: APIServiceListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let aPIServiceList = APIServiceListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module APIService =
            open Pulumi.Kubernetes.ApiRegistration.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.ApiRegistration.V1Beta1

            type APIServiceBuilder() =
                member _.Yield _ = KubernetesResource.Zero, APIServiceArgs()
                member _.Run(_cargs_, _args_: APIServiceArgs) = APIService(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: APIServiceArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: APIServiceArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: APIServiceArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: APIServiceArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: APIServiceArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: APIServiceArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: APIServiceArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let aPIService = APIServiceBuilder()

        [<AutoOpen>]
        module APIServiceList =
            open Pulumi.Kubernetes.ApiRegistration.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.ApiRegistration.V1Beta1

            type APIServiceListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, APIServiceListArgs()
                member _.Run(_cargs_, _args_: APIServiceListArgs) = APIServiceList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: APIServiceListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: APIServiceListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: APIServiceListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: APIServiceListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: APIServiceListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: APIServiceListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: APIServiceListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let aPIServiceList = APIServiceListBuilder()

module Apps =
    module V1 =
        [<AutoOpen>]
        module ControllerRevisionList =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type ControllerRevisionListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ControllerRevisionListArgs()
                member _.Run(_cargs_, _args_: ControllerRevisionListArgs) = ControllerRevisionList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ControllerRevisionListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ControllerRevisionListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ControllerRevisionListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ControllerRevisionListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ControllerRevisionListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ControllerRevisionListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ControllerRevisionListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let controllerRevisionList = ControllerRevisionListBuilder()

        [<AutoOpen>]
        module DaemonSet =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type DaemonSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DaemonSetArgs()
                member _.Run(_cargs_, _args_: DaemonSetArgs) = DaemonSet(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DaemonSetArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DaemonSetArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DaemonSetArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DaemonSetArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DaemonSetArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DaemonSetArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: DaemonSetArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let daemonSet = DaemonSetBuilder()

        [<AutoOpen>]
        module DaemonSetList =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type DaemonSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DaemonSetListArgs()
                member _.Run(_cargs_, _args_: DaemonSetListArgs) = DaemonSetList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DaemonSetListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DaemonSetListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DaemonSetListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: DaemonSetListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DaemonSetListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DaemonSetListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DaemonSetListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let daemonSetList = DaemonSetListBuilder()

        [<AutoOpen>]
        module Deployment =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type DeploymentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentArgs()
                member _.Run(_cargs_, _args_: DeploymentArgs) = Deployment(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DeploymentArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DeploymentArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DeploymentArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DeploymentArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DeploymentArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DeploymentArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: DeploymentArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let deployment = DeploymentBuilder()

        [<AutoOpen>]
        module DeploymentList =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type DeploymentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentListArgs()
                member _.Run(_cargs_, _args_: DeploymentListArgs) = DeploymentList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DeploymentListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DeploymentListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DeploymentListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: DeploymentListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DeploymentListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DeploymentListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DeploymentListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let deploymentList = DeploymentListBuilder()

        [<AutoOpen>]
        module ReplicaSet =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type ReplicaSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicaSetArgs()
                member _.Run(_cargs_, _args_: ReplicaSetArgs) = ReplicaSet(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ReplicaSetArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ReplicaSetArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ReplicaSetArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ReplicaSetArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ReplicaSetArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ReplicaSetArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: ReplicaSetArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let replicaSet = ReplicaSetBuilder()

        [<AutoOpen>]
        module ReplicaSetList =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type ReplicaSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicaSetListArgs()
                member _.Run(_cargs_, _args_: ReplicaSetListArgs) = ReplicaSetList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ReplicaSetListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ReplicaSetListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ReplicaSetListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ReplicaSetListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ReplicaSetListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ReplicaSetListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ReplicaSetListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let replicaSetList = ReplicaSetListBuilder()

        [<AutoOpen>]
        module StatefulSet =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type StatefulSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatefulSetArgs()
                member _.Run(_cargs_, _args_: StatefulSetArgs) = StatefulSet(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: StatefulSetArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: StatefulSetArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: StatefulSetArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: StatefulSetArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: StatefulSetArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: StatefulSetArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: StatefulSetArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let statefulSet = StatefulSetBuilder()

        [<AutoOpen>]
        module StatefulSetList =
            open Pulumi.Kubernetes.Apps.V1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1

            type StatefulSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatefulSetListArgs()
                member _.Run(_cargs_, _args_: StatefulSetListArgs) = StatefulSetList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: StatefulSetListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: StatefulSetListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: StatefulSetListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: StatefulSetListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: StatefulSetListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: StatefulSetListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: StatefulSetListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let statefulSetList = StatefulSetListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module ControllerRevisionList =
            open Pulumi.Kubernetes.Apps.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta1

            type ControllerRevisionListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ControllerRevisionListArgs()
                member _.Run(_cargs_, _args_: ControllerRevisionListArgs) = ControllerRevisionList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ControllerRevisionListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ControllerRevisionListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ControllerRevisionListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ControllerRevisionListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ControllerRevisionListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ControllerRevisionListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ControllerRevisionListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let controllerRevisionList = ControllerRevisionListBuilder()

        [<AutoOpen>]
        module Deployment =
            open Pulumi.Kubernetes.Apps.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta1

            type DeploymentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentArgs()
                member _.Run(_cargs_, _args_: DeploymentArgs) = Deployment(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DeploymentArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DeploymentArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DeploymentArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DeploymentArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DeploymentArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DeploymentArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: DeploymentArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let deployment = DeploymentBuilder()

        [<AutoOpen>]
        module DeploymentList =
            open Pulumi.Kubernetes.Apps.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta1

            type DeploymentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentListArgs()
                member _.Run(_cargs_, _args_: DeploymentListArgs) = DeploymentList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DeploymentListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DeploymentListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DeploymentListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: DeploymentListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DeploymentListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DeploymentListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DeploymentListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let deploymentList = DeploymentListBuilder()

        [<AutoOpen>]
        module StatefulSet =
            open Pulumi.Kubernetes.Apps.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta1

            type StatefulSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatefulSetArgs()
                member _.Run(_cargs_, _args_: StatefulSetArgs) = StatefulSet(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: StatefulSetArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: StatefulSetArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: StatefulSetArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: StatefulSetArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: StatefulSetArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: StatefulSetArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: StatefulSetArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let statefulSet = StatefulSetBuilder()

        [<AutoOpen>]
        module StatefulSetList =
            open Pulumi.Kubernetes.Apps.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta1

            type StatefulSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatefulSetListArgs()
                member _.Run(_cargs_, _args_: StatefulSetListArgs) = StatefulSetList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: StatefulSetListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: StatefulSetListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: StatefulSetListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: StatefulSetListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: StatefulSetListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: StatefulSetListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: StatefulSetListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let statefulSetList = StatefulSetListBuilder()

    module V1Beta2 =
        [<AutoOpen>]
        module ControllerRevisionList =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type ControllerRevisionListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ControllerRevisionListArgs()
                member _.Run(_cargs_, _args_: ControllerRevisionListArgs) = ControllerRevisionList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ControllerRevisionListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ControllerRevisionListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ControllerRevisionListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ControllerRevisionListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ControllerRevisionListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ControllerRevisionListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ControllerRevisionListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let controllerRevisionList = ControllerRevisionListBuilder()

        [<AutoOpen>]
        module DaemonSet =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type DaemonSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DaemonSetArgs()
                member _.Run(_cargs_, _args_: DaemonSetArgs) = DaemonSet(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DaemonSetArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DaemonSetArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DaemonSetArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DaemonSetArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DaemonSetArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DaemonSetArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: DaemonSetArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let daemonSet = DaemonSetBuilder()

        [<AutoOpen>]
        module DaemonSetList =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type DaemonSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DaemonSetListArgs()
                member _.Run(_cargs_, _args_: DaemonSetListArgs) = DaemonSetList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DaemonSetListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DaemonSetListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DaemonSetListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: DaemonSetListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DaemonSetListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DaemonSetListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DaemonSetListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let daemonSetList = DaemonSetListBuilder()

        [<AutoOpen>]
        module Deployment =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type DeploymentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentArgs()
                member _.Run(_cargs_, _args_: DeploymentArgs) = Deployment(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DeploymentArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DeploymentArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DeploymentArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DeploymentArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DeploymentArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DeploymentArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: DeploymentArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let deployment = DeploymentBuilder()

        [<AutoOpen>]
        module DeploymentList =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type DeploymentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentListArgs()
                member _.Run(_cargs_, _args_: DeploymentListArgs) = DeploymentList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DeploymentListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DeploymentListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DeploymentListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: DeploymentListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DeploymentListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DeploymentListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DeploymentListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let deploymentList = DeploymentListBuilder()

        [<AutoOpen>]
        module ReplicaSet =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type ReplicaSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicaSetArgs()
                member _.Run(_cargs_, _args_: ReplicaSetArgs) = ReplicaSet(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ReplicaSetArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ReplicaSetArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ReplicaSetArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ReplicaSetArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ReplicaSetArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ReplicaSetArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: ReplicaSetArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let replicaSet = ReplicaSetBuilder()

        [<AutoOpen>]
        module ReplicaSetList =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type ReplicaSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicaSetListArgs()
                member _.Run(_cargs_, _args_: ReplicaSetListArgs) = ReplicaSetList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ReplicaSetListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ReplicaSetListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ReplicaSetListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ReplicaSetListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ReplicaSetListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ReplicaSetListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ReplicaSetListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let replicaSetList = ReplicaSetListBuilder()

        [<AutoOpen>]
        module StatefulSet =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type StatefulSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatefulSetArgs()
                member _.Run(_cargs_, _args_: StatefulSetArgs) = StatefulSet(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: StatefulSetArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: StatefulSetArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: StatefulSetArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: StatefulSetArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: StatefulSetArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: StatefulSetArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: StatefulSetArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let statefulSet = StatefulSetBuilder()

        [<AutoOpen>]
        module StatefulSetList =
            open Pulumi.Kubernetes.Apps.V1Beta2
            open Pulumi.Kubernetes.Types.Inputs.Apps.V1Beta2

            type StatefulSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatefulSetListArgs()
                member _.Run(_cargs_, _args_: StatefulSetListArgs) = StatefulSetList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: StatefulSetListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: StatefulSetListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: StatefulSetListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: StatefulSetListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: StatefulSetListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: StatefulSetListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: StatefulSetListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let statefulSetList = StatefulSetListBuilder()

module AuditRegistraion =
    module V1Alpha1 =
        [<AutoOpen>]
        module AuditSink =
            open Pulumi.Kubernetes.AuditRegistraion.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.AuditRegistraion.V1Alpha1

            type AuditSinkBuilder() =
                member _.Yield _ = KubernetesResource.Zero, AuditSinkArgs()
                member _.Run(_cargs_, _args_: AuditSinkArgs) = AuditSink(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: AuditSinkArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: AuditSinkArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: AuditSinkArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: AuditSinkArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: AuditSinkArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: AuditSinkArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: AuditSinkArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let auditSink = AuditSinkBuilder()

        [<AutoOpen>]
        module AuditSinkList =
            open Pulumi.Kubernetes.AuditRegistraion.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.AuditRegistraion.V1Alpha1

            type AuditSinkListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, AuditSinkListArgs()
                member _.Run(_cargs_, _args_: AuditSinkListArgs) = AuditSinkList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: AuditSinkListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: AuditSinkListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: AuditSinkListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: AuditSinkListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: AuditSinkListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: AuditSinkListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: AuditSinkListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let auditSinkList = AuditSinkListBuilder()

module Authentication =
    module V1 =
        [<AutoOpen>]
        module TokenRequest =
            open Pulumi.Kubernetes.Authentication.V1
            open Pulumi.Kubernetes.Types.Inputs.Authentication.V1

            type TokenRequestBuilder() =
                member _.Yield _ = KubernetesResource.Zero, TokenRequestArgs()
                member _.Run(_cargs_, _args_: TokenRequestArgs) = TokenRequest(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: TokenRequestArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: TokenRequestArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: TokenRequestArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: TokenRequestArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: TokenRequestArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: TokenRequestArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: TokenRequestArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let tokenRequest = TokenRequestBuilder()

        [<AutoOpen>]
        module TokenReview =
            open Pulumi.Kubernetes.Authentication.V1
            open Pulumi.Kubernetes.Types.Inputs.Authentication.V1

            type TokenReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, TokenReviewArgs()
                member _.Run(_cargs_, _args_: TokenReviewArgs) = TokenReview(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: TokenReviewArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: TokenReviewArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: TokenReviewArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: TokenReviewArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: TokenReviewArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: TokenReviewArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: TokenReviewArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let tokenReview = TokenReviewBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module TokenReview =
            open Pulumi.Kubernetes.Authentication.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Authentication.V1Beta1

            type TokenReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, TokenReviewArgs()
                member _.Run(_cargs_, _args_: TokenReviewArgs) = TokenReview(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: TokenReviewArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: TokenReviewArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: TokenReviewArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: TokenReviewArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: TokenReviewArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: TokenReviewArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: TokenReviewArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let tokenReview = TokenReviewBuilder()

module Authorization =
    module V1 =
        [<AutoOpen>]
        module LocalSubjectAccessReview =
            open Pulumi.Kubernetes.Authorization.V1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1

            type LocalSubjectAccessReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LocalSubjectAccessReviewArgs()

                member _.Run(_cargs_, _args_: LocalSubjectAccessReviewArgs) =
                    LocalSubjectAccessReview(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: LocalSubjectAccessReviewArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: LocalSubjectAccessReviewArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: LocalSubjectAccessReviewArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: LocalSubjectAccessReviewArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: LocalSubjectAccessReviewArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: LocalSubjectAccessReviewArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: LocalSubjectAccessReviewArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let localSubjectAccessReview = LocalSubjectAccessReviewBuilder()

        [<AutoOpen>]
        module SelfSubjectAccessReview =
            open Pulumi.Kubernetes.Authorization.V1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1

            type SelfSubjectAccessReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SelfSubjectAccessReviewArgs()

                member _.Run(_cargs_, _args_: SelfSubjectAccessReviewArgs) =
                    SelfSubjectAccessReview(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: SelfSubjectAccessReviewArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: SelfSubjectAccessReviewArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: SelfSubjectAccessReviewArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: SelfSubjectAccessReviewArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: SelfSubjectAccessReviewArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: SelfSubjectAccessReviewArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: SelfSubjectAccessReviewArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let selfSubjectAccessReview = SelfSubjectAccessReviewBuilder()

        [<AutoOpen>]
        module SelfSubjectRulesReview =
            open Pulumi.Kubernetes.Authorization.V1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1

            type SelfSubjectRulesReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SelfSubjectRulesReviewArgs()
                member _.Run(_cargs_, _args_: SelfSubjectRulesReviewArgs) = SelfSubjectRulesReview(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: SelfSubjectRulesReviewArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: SelfSubjectRulesReviewArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: SelfSubjectRulesReviewArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: SelfSubjectRulesReviewArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: SelfSubjectRulesReviewArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: SelfSubjectRulesReviewArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: SelfSubjectRulesReviewArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let selfSubjectRulesReview = SelfSubjectRulesReviewBuilder()

        [<AutoOpen>]
        module SubjectAccessReview =
            open Pulumi.Kubernetes.Authorization.V1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1

            type SubjectAccessReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SubjectAccessReviewArgs()
                member _.Run(_cargs_, _args_: SubjectAccessReviewArgs) = SubjectAccessReview(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: SubjectAccessReviewArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: SubjectAccessReviewArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: SubjectAccessReviewArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: SubjectAccessReviewArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: SubjectAccessReviewArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: SubjectAccessReviewArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: SubjectAccessReviewArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let subjectAccessReview = SubjectAccessReviewBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module LocalSubjectAccessReview =
            open Pulumi.Kubernetes.Authorization.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1Beta1

            type LocalSubjectAccessReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LocalSubjectAccessReviewArgs()

                member _.Run(_cargs_, _args_: LocalSubjectAccessReviewArgs) =
                    LocalSubjectAccessReview(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: LocalSubjectAccessReviewArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: LocalSubjectAccessReviewArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: LocalSubjectAccessReviewArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: LocalSubjectAccessReviewArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: LocalSubjectAccessReviewArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: LocalSubjectAccessReviewArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: LocalSubjectAccessReviewArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let localSubjectAccessReview = LocalSubjectAccessReviewBuilder()

        [<AutoOpen>]
        module SelfSubjectAccessReview =
            open Pulumi.Kubernetes.Authorization.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1Beta1

            type SelfSubjectAccessReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SelfSubjectAccessReviewArgs()

                member _.Run(_cargs_, _args_: SelfSubjectAccessReviewArgs) =
                    SelfSubjectAccessReview(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: SelfSubjectAccessReviewArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: SelfSubjectAccessReviewArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: SelfSubjectAccessReviewArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: SelfSubjectAccessReviewArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: SelfSubjectAccessReviewArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: SelfSubjectAccessReviewArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: SelfSubjectAccessReviewArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let selfSubjectAccessReview = SelfSubjectAccessReviewBuilder()

        [<AutoOpen>]
        module SelfSubjectRulesReview =
            open Pulumi.Kubernetes.Authorization.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1Beta1

            type SelfSubjectRulesReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SelfSubjectRulesReviewArgs()
                member _.Run(_cargs_, _args_: SelfSubjectRulesReviewArgs) = SelfSubjectRulesReview(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: SelfSubjectRulesReviewArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: SelfSubjectRulesReviewArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: SelfSubjectRulesReviewArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: SelfSubjectRulesReviewArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: SelfSubjectRulesReviewArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: SelfSubjectRulesReviewArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: SelfSubjectRulesReviewArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let selfSubjectRulesReview = SelfSubjectRulesReviewBuilder()

        [<AutoOpen>]
        module SubjectAccessReview =
            open Pulumi.Kubernetes.Authorization.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Authorization.V1Beta1

            type SubjectAccessReviewBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SubjectAccessReviewArgs()
                member _.Run(_cargs_, _args_: SubjectAccessReviewArgs) = SubjectAccessReview(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: SubjectAccessReviewArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: SubjectAccessReviewArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: SubjectAccessReviewArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: SubjectAccessReviewArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: SubjectAccessReviewArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: SubjectAccessReviewArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: SubjectAccessReviewArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let subjectAccessReview = SubjectAccessReviewBuilder()

module Autoscaling =
    module V1 =
        [<AutoOpen>]
        module HorizontalPodAutoscaler =
            open Pulumi.Kubernetes.Autoscaling.V1
            open Pulumi.Kubernetes.Types.Inputs.Autoscaling.V1

            type HorizontalPodAutoscalerBuilder() =
                member _.Yield _ = KubernetesResource.Zero, HorizontalPodAutoscalerArgs()

                member _.Run(_cargs_, _args_: HorizontalPodAutoscalerArgs) =
                    HorizontalPodAutoscaler(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: HorizontalPodAutoscalerArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: HorizontalPodAutoscalerArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: HorizontalPodAutoscalerArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: HorizontalPodAutoscalerArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: HorizontalPodAutoscalerArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: HorizontalPodAutoscalerArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: HorizontalPodAutoscalerArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let horizontalPodAutoscaler = HorizontalPodAutoscalerBuilder()

        [<AutoOpen>]
        module HorizontalPodAutoscalerList =
            open Pulumi.Kubernetes.Autoscaling.V1
            open Pulumi.Kubernetes.Types.Inputs.Autoscaling.V1

            type HorizontalPodAutoscalerListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, HorizontalPodAutoscalerListArgs()

                member _.Run(_cargs_, _args_: HorizontalPodAutoscalerListArgs) =
                    HorizontalPodAutoscalerList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: HorizontalPodAutoscalerListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: HorizontalPodAutoscalerListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: HorizontalPodAutoscalerListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: HorizontalPodAutoscalerListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: HorizontalPodAutoscalerListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: HorizontalPodAutoscalerListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: HorizontalPodAutoscalerListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let horizontalPodAutoscalerList = HorizontalPodAutoscalerListBuilder()

    module V2Beta1 =
        [<AutoOpen>]
        module HorizontalPodAutoscaler =
            open Pulumi.Kubernetes.Autoscaling.V2Beta1
            open Pulumi.Kubernetes.Types.Inputs.Autoscaling.V2Beta1

            type HorizontalPodAutoscalerBuilder() =
                member _.Yield _ = KubernetesResource.Zero, HorizontalPodAutoscalerArgs()

                member _.Run(_cargs_, _args_: HorizontalPodAutoscalerArgs) =
                    HorizontalPodAutoscaler(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: HorizontalPodAutoscalerArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: HorizontalPodAutoscalerArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: HorizontalPodAutoscalerArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: HorizontalPodAutoscalerArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: HorizontalPodAutoscalerArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: HorizontalPodAutoscalerArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: HorizontalPodAutoscalerArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let horizontalPodAutoscaler = HorizontalPodAutoscalerBuilder()

        [<AutoOpen>]
        module HorizontalPodAutoscalerList =
            open Pulumi.Kubernetes.Autoscaling.V2Beta1
            open Pulumi.Kubernetes.Types.Inputs.Autoscaling.V2Beta1

            type HorizontalPodAutoscalerListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, HorizontalPodAutoscalerListArgs()

                member _.Run(_cargs_, _args_: HorizontalPodAutoscalerListArgs) =
                    HorizontalPodAutoscalerList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: HorizontalPodAutoscalerListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: HorizontalPodAutoscalerListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: HorizontalPodAutoscalerListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: HorizontalPodAutoscalerListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: HorizontalPodAutoscalerListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: HorizontalPodAutoscalerListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: HorizontalPodAutoscalerListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let horizontalPodAutoscalerList = HorizontalPodAutoscalerListBuilder()

    module V2Beta2 =
        [<AutoOpen>]
        module HorizontalPodAutoscaler =
            open Pulumi.Kubernetes.Autoscaling.V2Beta2
            open Pulumi.Kubernetes.Types.Inputs.Autoscaling.V2Beta2

            type HorizontalPodAutoscalerBuilder() =
                member _.Yield _ = KubernetesResource.Zero, HorizontalPodAutoscalerArgs()

                member _.Run(_cargs_, _args_: HorizontalPodAutoscalerArgs) =
                    HorizontalPodAutoscaler(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: HorizontalPodAutoscalerArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: HorizontalPodAutoscalerArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: HorizontalPodAutoscalerArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: HorizontalPodAutoscalerArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: HorizontalPodAutoscalerArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: HorizontalPodAutoscalerArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: HorizontalPodAutoscalerArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let horizontalPodAutoscaler = HorizontalPodAutoscalerBuilder()

        [<AutoOpen>]
        module HorizontalPodAutoscalerList =
            open Pulumi.Kubernetes.Autoscaling.V2Beta2
            open Pulumi.Kubernetes.Types.Inputs.Autoscaling.V2Beta2

            type HorizontalPodAutoscalerListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, HorizontalPodAutoscalerListArgs()

                member _.Run(_cargs_, _args_: HorizontalPodAutoscalerListArgs) =
                    HorizontalPodAutoscalerList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: HorizontalPodAutoscalerListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: HorizontalPodAutoscalerListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: HorizontalPodAutoscalerListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: HorizontalPodAutoscalerListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: HorizontalPodAutoscalerListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: HorizontalPodAutoscalerListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: HorizontalPodAutoscalerListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let horizontalPodAutoscalerList = HorizontalPodAutoscalerListBuilder()

module Batch =
    module V1 =
        [<AutoOpen>]
        module Job =
            open Pulumi.Kubernetes.Batch.V1
            open Pulumi.Kubernetes.Types.Inputs.Batch.V1

            type JobBuilder() =
                member _.Yield _ = KubernetesResource.Zero, JobArgs()
                member _.Run(_cargs_, _args_: JobArgs) = Job(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: JobArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: JobArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: JobArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: JobArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: JobArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: JobArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: JobArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let job = JobBuilder()

        [<AutoOpen>]
        module JobList =
            open Pulumi.Kubernetes.Batch.V1
            open Pulumi.Kubernetes.Types.Inputs.Batch.V1

            type JobListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, JobListArgs()
                member _.Run(_cargs_, _args_: JobListArgs) = JobList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: JobListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: JobListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: JobListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: JobListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: JobListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: JobListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: JobListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let jobList = JobListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module CronJob =
            open Pulumi.Kubernetes.Batch.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Batch.V1Beta1

            type CronJobBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CronJobArgs()
                member _.Run(_cargs_, _args_: CronJobArgs) = CronJob(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CronJobArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CronJobArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CronJobArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CronJobArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CronJobArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CronJobArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: CronJobArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let cronJob = CronJobBuilder()

        [<AutoOpen>]
        module CronJobList =
            open Pulumi.Kubernetes.Batch.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Batch.V1Beta1

            type CronJobListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CronJobListArgs()
                member _.Run(_cargs_, _args_: CronJobListArgs) = CronJobList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CronJobListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CronJobListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CronJobListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: CronJobListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CronJobListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CronJobListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CronJobListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let cronJobList = CronJobListBuilder()

    module V2Alpha1 =
        [<AutoOpen>]
        module CronJob =
            open Pulumi.Kubernetes.Batch.V2Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Batch.V2Alpha1

            type CronJobBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CronJobArgs()
                member _.Run(_cargs_, _args_: CronJobArgs) = CronJob(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CronJobArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CronJobArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CronJobArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CronJobArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CronJobArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CronJobArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: CronJobArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let cronJob = CronJobBuilder()

        [<AutoOpen>]
        module CronJobList =
            open Pulumi.Kubernetes.Batch.V2Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Batch.V2Alpha1

            type CronJobListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CronJobListArgs()
                member _.Run(_cargs_, _args_: CronJobListArgs) = CronJobList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CronJobListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CronJobListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CronJobListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: CronJobListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CronJobListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CronJobListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CronJobListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let cronJobList = CronJobListBuilder()

module Certificates =
    module V1Beta1 =
        [<AutoOpen>]
        module CertificateSigningRequest =
            open Pulumi.Kubernetes.Certificates.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Certificates.V1Beta1

            type CertificateSigningRequestBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CertificateSigningRequestArgs()

                member _.Run(_cargs_, _args_: CertificateSigningRequestArgs) =
                    CertificateSigningRequest(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CertificateSigningRequestArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CertificateSigningRequestArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CertificateSigningRequestArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CertificateSigningRequestArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CertificateSigningRequestArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CertificateSigningRequestArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: CertificateSigningRequestArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let certificateSigningRequest = CertificateSigningRequestBuilder()

        [<AutoOpen>]
        module CertificateSigningRequestList =
            open Pulumi.Kubernetes.Certificates.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Certificates.V1Beta1

            type CertificateSigningRequestListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CertificateSigningRequestListArgs()

                member _.Run(_cargs_, _args_: CertificateSigningRequestListArgs) =
                    CertificateSigningRequestList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CertificateSigningRequestListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CertificateSigningRequestListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CertificateSigningRequestListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: CertificateSigningRequestListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CertificateSigningRequestListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CertificateSigningRequestListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CertificateSigningRequestListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let certificateSigningRequestList = CertificateSigningRequestListBuilder()

module Coordination =
    module V1 =
        [<AutoOpen>]
        module Lease =
            open Pulumi.Kubernetes.Coordination.V1
            open Pulumi.Kubernetes.Types.Inputs.Coordination.V1

            type LeaseBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LeaseArgs()
                member _.Run(_cargs_, _args_: LeaseArgs) = Lease(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: LeaseArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: LeaseArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: LeaseArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: LeaseArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: LeaseArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: LeaseArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: LeaseArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let lease = LeaseBuilder()

        [<AutoOpen>]
        module LeaseList =
            open Pulumi.Kubernetes.Coordination.V1
            open Pulumi.Kubernetes.Types.Inputs.Coordination.V1

            type LeaseListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LeaseListArgs()
                member _.Run(_cargs_, _args_: LeaseListArgs) = LeaseList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: LeaseListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: LeaseListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: LeaseListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: LeaseListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: LeaseListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: LeaseListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: LeaseListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let leaseList = LeaseListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module Lease =
            open Pulumi.Kubernetes.Coordination.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Coordination.V1Beta1

            type LeaseBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LeaseArgs()
                member _.Run(_cargs_, _args_: LeaseArgs) = Lease(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: LeaseArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: LeaseArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: LeaseArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: LeaseArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: LeaseArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: LeaseArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: LeaseArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let lease = LeaseBuilder()

        [<AutoOpen>]
        module LeaseList =
            open Pulumi.Kubernetes.Coordination.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Coordination.V1Beta1

            type LeaseListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LeaseListArgs()
                member _.Run(_cargs_, _args_: LeaseListArgs) = LeaseList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: LeaseListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: LeaseListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: LeaseListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: LeaseListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: LeaseListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: LeaseListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: LeaseListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let leaseList = LeaseListBuilder()

module Core =
    module V1 =
        [<AutoOpen>]
        module Binding =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type BindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, BindingArgs()
                member _.Run(_cargs_, _args_: BindingArgs) = Binding(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: BindingArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: BindingArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: BindingArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: BindingArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: BindingArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: BindingArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("target")>]
                member _.Target((_cargs_, _args_: BindingArgs), target) =
                    _args_.Target <- input target
                    _cargs_, _args_

            let binding = BindingBuilder()

        [<AutoOpen>]
        module ComponentStatus =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ComponentStatusBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ComponentStatusArgs()
                member _.Run(_cargs_, _args_: ComponentStatusArgs) = ComponentStatus(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ComponentStatusArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ComponentStatusArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ComponentStatusArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("conditions")>]
                member _.Conditions((_cargs_, _args_: ComponentStatusArgs), conditions) =
                    _args_.Conditions <- inputList conditions
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ComponentStatusArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ComponentStatusArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ComponentStatusArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let componentStatus = ComponentStatusBuilder()

        [<AutoOpen>]
        module ComponentStatusList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ComponentStatusListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ComponentStatusListArgs()
                member _.Run(_cargs_, _args_: ComponentStatusListArgs) = ComponentStatusList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ComponentStatusListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ComponentStatusListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ComponentStatusListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ComponentStatusListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ComponentStatusListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ComponentStatusListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ComponentStatusListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let componentStatusList = ComponentStatusListBuilder()

        [<AutoOpen>]
        module ConfigMap =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ConfigMapBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ConfigMapArgs()
                member _.Run(_cargs_, _args_: ConfigMapArgs) = ConfigMap(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ConfigMapArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ConfigMapArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ConfigMapArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("binaryData")>]
                member _.BinaryData((_cargs_, _args_: ConfigMapArgs), binaryData) =
                    _args_.BinaryData <- inputMap binaryData
                    _cargs_, _args_

                [<CustomOperation("data")>]
                member _.Data((_cargs_, _args_: ConfigMapArgs), data) =
                    _args_.Data <- inputMap data
                    _cargs_, _args_

                [<CustomOperation("immutable")>]
                member _.Immutable((_cargs_, _args_: ConfigMapArgs), immutable) =
                    _args_.Immutable <- input immutable
                    _cargs_, _args_

                member _.Immutable((_cargs_, _args_: ConfigMapArgs), immutable) =
                    _args_.Immutable <- io immutable
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ConfigMapArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ConfigMapArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ConfigMapArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let configMap = ConfigMapBuilder()

        [<AutoOpen>]
        module ConfigMapList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ConfigMapListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ConfigMapListArgs()
                member _.Run(_cargs_, _args_: ConfigMapListArgs) = ConfigMapList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ConfigMapListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ConfigMapListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ConfigMapListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ConfigMapListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ConfigMapListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ConfigMapListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ConfigMapListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let configMapList = ConfigMapListBuilder()

        [<AutoOpen>]
        module Endpoints =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type EndpointsBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EndpointsArgs()
                member _.Run(_cargs_, _args_: EndpointsArgs) = Endpoints(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: EndpointsArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: EndpointsArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: EndpointsArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: EndpointsArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: EndpointsArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: EndpointsArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("subsets")>]
                member _.Subsets((_cargs_, _args_: EndpointsArgs), subsets) =
                    _args_.Subsets <- inputList subsets
                    _cargs_, _args_

            let endpoints = EndpointsBuilder()

        [<AutoOpen>]
        module EndpointsList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type EndpointsListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EndpointsListArgs()
                member _.Run(_cargs_, _args_: EndpointsListArgs) = EndpointsList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: EndpointsListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: EndpointsListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: EndpointsListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: EndpointsListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: EndpointsListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: EndpointsListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: EndpointsListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let endpointsList = EndpointsListBuilder()

        [<AutoOpen>]
        module Event =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type EventBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EventArgs()
                member _.Run(_cargs_, _args_: EventArgs) = Event(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: EventArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("action")>]
                member _.Action((_cargs_, _args_: EventArgs), action) =
                    _args_.Action <- input action
                    _cargs_, _args_

                member _.Action((_cargs_, _args_: EventArgs), action) =
                    _args_.Action <- io action
                    _cargs_, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: EventArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: EventArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("count")>]
                member _.Count((_cargs_, _args_: EventArgs), count) =
                    _args_.Count <- input count
                    _cargs_, _args_

                member _.Count((_cargs_, _args_: EventArgs), count) =
                    _args_.Count <- io count
                    _cargs_, _args_

                [<CustomOperation("eventTime")>]
                member _.EventTime((_cargs_, _args_: EventArgs), eventTime) =
                    _args_.EventTime <- input eventTime
                    _cargs_, _args_

                member _.EventTime((_cargs_, _args_: EventArgs), eventTime) =
                    _args_.EventTime <- io eventTime
                    _cargs_, _args_

                [<CustomOperation("firstTimestamp")>]
                member _.FirstTimestamp((_cargs_, _args_: EventArgs), firstTimestamp) =
                    _args_.FirstTimestamp <- input firstTimestamp
                    _cargs_, _args_

                member _.FirstTimestamp((_cargs_, _args_: EventArgs), firstTimestamp) =
                    _args_.FirstTimestamp <- io firstTimestamp
                    _cargs_, _args_

                [<CustomOperation("involvedObject")>]
                member _.InvolvedObject((_cargs_, _args_: EventArgs), involvedObject) =
                    _args_.InvolvedObject <- input involvedObject
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: EventArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: EventArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("lastTimestamp")>]
                member _.LastTimestamp((_cargs_, _args_: EventArgs), lastTimestamp) =
                    _args_.LastTimestamp <- input lastTimestamp
                    _cargs_, _args_

                member _.LastTimestamp((_cargs_, _args_: EventArgs), lastTimestamp) =
                    _args_.LastTimestamp <- io lastTimestamp
                    _cargs_, _args_

                [<CustomOperation("message")>]
                member _.Message((_cargs_, _args_: EventArgs), message) =
                    _args_.Message <- input message
                    _cargs_, _args_

                member _.Message((_cargs_, _args_: EventArgs), message) =
                    _args_.Message <- io message
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: EventArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("reason")>]
                member _.Reason((_cargs_, _args_: EventArgs), reason) =
                    _args_.Reason <- input reason
                    _cargs_, _args_

                member _.Reason((_cargs_, _args_: EventArgs), reason) =
                    _args_.Reason <- io reason
                    _cargs_, _args_

                [<CustomOperation("related")>]
                member _.Related((_cargs_, _args_: EventArgs), related) =
                    _args_.Related <- input related
                    _cargs_, _args_

                [<CustomOperation("reportingComponent")>]
                member _.ReportingComponent((_cargs_, _args_: EventArgs), reportingComponent) =
                    _args_.ReportingComponent <- input reportingComponent
                    _cargs_, _args_

                member _.ReportingComponent((_cargs_, _args_: EventArgs), reportingComponent) =
                    _args_.ReportingComponent <- io reportingComponent
                    _cargs_, _args_

                [<CustomOperation("reportingInstance")>]
                member _.ReportingInstance((_cargs_, _args_: EventArgs), reportingInstance) =
                    _args_.ReportingInstance <- input reportingInstance
                    _cargs_, _args_

                member _.ReportingInstance((_cargs_, _args_: EventArgs), reportingInstance) =
                    _args_.ReportingInstance <- io reportingInstance
                    _cargs_, _args_

                [<CustomOperation("series")>]
                member _.Series((_cargs_, _args_: EventArgs), series) =
                    _args_.Series <- input series
                    _cargs_, _args_

                [<CustomOperation("source")>]
                member _.Source((_cargs_, _args_: EventArgs), source) =
                    _args_.Source <- input source
                    _cargs_, _args_

                [<CustomOperation("type")>]
                member _.Type((_cargs_, _args_: EventArgs), ``type``) =
                    _args_.Type <- input ``type``
                    _cargs_, _args_

                member _.Type((_cargs_, _args_: EventArgs), ``type``) =
                    _args_.Type <- io ``type``
                    _cargs_, _args_

            let event = EventBuilder()

        [<AutoOpen>]
        module EventList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type EventListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EventListArgs()
                member _.Run(_cargs_, _args_: EventListArgs) = EventList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: EventListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: EventListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: EventListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: EventListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: EventListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: EventListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: EventListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let eventList = EventListBuilder()

        [<AutoOpen>]
        module LimitRange =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type LimitRangeBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LimitRangeArgs()
                member _.Run(_cargs_, _args_: LimitRangeArgs) = LimitRange(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: LimitRangeArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: LimitRangeArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: LimitRangeArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: LimitRangeArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: LimitRangeArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: LimitRangeArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: LimitRangeArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let limitRange = LimitRangeBuilder()

        [<AutoOpen>]
        module LimitRangeList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type LimitRangeListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, LimitRangeListArgs()
                member _.Run(_cargs_, _args_: LimitRangeListArgs) = LimitRangeList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: LimitRangeListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: LimitRangeListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: LimitRangeListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: LimitRangeListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: LimitRangeListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: LimitRangeListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: LimitRangeListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let limitRangeList = LimitRangeListBuilder()

        [<AutoOpen>]
        module Namespace =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type NamespaceBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NamespaceArgs()
                member _.Run(_cargs_, _args_: NamespaceArgs) = Namespace(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: NamespaceArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: NamespaceArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: NamespaceArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: NamespaceArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: NamespaceArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: NamespaceArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: NamespaceArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let ``namespace`` = NamespaceBuilder()

        [<AutoOpen>]
        module NamespaceList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type NamespaceListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NamespaceListArgs()
                member _.Run(_cargs_, _args_: NamespaceListArgs) = NamespaceList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: NamespaceListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: NamespaceListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: NamespaceListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: NamespaceListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: NamespaceListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: NamespaceListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: NamespaceListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let namespaceList = NamespaceListBuilder()

        [<AutoOpen>]
        module Node =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type NodeBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NodeArgs()
                member _.Run(_cargs_, _args_: NodeArgs) = Node(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: NodeArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: NodeArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: NodeArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: NodeArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: NodeArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: NodeArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: NodeArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let node = NodeBuilder()

        [<AutoOpen>]
        module NodeList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type NodeListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NodeListArgs()
                member _.Run(_cargs_, _args_: NodeListArgs) = NodeList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: NodeListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: NodeListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: NodeListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: NodeListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: NodeListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: NodeListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: NodeListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let nodeList = NodeListBuilder()

        [<AutoOpen>]
        module PersistentVolume =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PersistentVolumeBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PersistentVolumeArgs()
                member _.Run(_cargs_, _args_: PersistentVolumeArgs) = PersistentVolume(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PersistentVolumeArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PersistentVolumeArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PersistentVolumeArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PersistentVolumeArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PersistentVolumeArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PersistentVolumeArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: PersistentVolumeArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let persistentVolume = PersistentVolumeBuilder()

        [<AutoOpen>]
        module PersistentVolumeClaim =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PersistentVolumeClaimBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PersistentVolumeClaimArgs()
                member _.Run(_cargs_, _args_: PersistentVolumeClaimArgs) = PersistentVolumeClaim(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PersistentVolumeClaimArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PersistentVolumeClaimArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PersistentVolumeClaimArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PersistentVolumeClaimArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PersistentVolumeClaimArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PersistentVolumeClaimArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: PersistentVolumeClaimArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let persistentVolumeClaim = PersistentVolumeClaimBuilder()

        [<AutoOpen>]
        module PersistentVolumeClaimList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PersistentVolumeClaimListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PersistentVolumeClaimListArgs()

                member _.Run(_cargs_, _args_: PersistentVolumeClaimListArgs) =
                    PersistentVolumeClaimList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PersistentVolumeClaimListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PersistentVolumeClaimListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PersistentVolumeClaimListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: PersistentVolumeClaimListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PersistentVolumeClaimListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PersistentVolumeClaimListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PersistentVolumeClaimListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let persistentVolumeClaimList = PersistentVolumeClaimListBuilder()

        [<AutoOpen>]
        module PersistentVolumeList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PersistentVolumeListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PersistentVolumeListArgs()
                member _.Run(_cargs_, _args_: PersistentVolumeListArgs) = PersistentVolumeList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PersistentVolumeListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PersistentVolumeListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PersistentVolumeListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: PersistentVolumeListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PersistentVolumeListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PersistentVolumeListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PersistentVolumeListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let persistentVolumeList = PersistentVolumeListBuilder()

        [<AutoOpen>]
        module Pod =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PodBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodArgs()
                member _.Run(_cargs_, _args_: PodArgs) = Pod(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PodArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PodArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PodArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PodArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PodArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PodArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: PodArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let pod = PodBuilder()

        [<AutoOpen>]
        module PodList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PodListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodListArgs()
                member _.Run(_cargs_, _args_: PodListArgs) = PodList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PodListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PodListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PodListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: PodListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PodListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PodListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PodListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let podList = PodListBuilder()

        [<AutoOpen>]
        module PodTemplate =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PodTemplateBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodTemplateArgs()
                member _.Run(_cargs_, _args_: PodTemplateArgs) = PodTemplate(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PodTemplateArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PodTemplateArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PodTemplateArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PodTemplateArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PodTemplateArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PodTemplateArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("template")>]
                member _.Template((_cargs_, _args_: PodTemplateArgs), template) =
                    _args_.Template <- input template
                    _cargs_, _args_

            let podTemplate = PodTemplateBuilder()

        [<AutoOpen>]
        module PodTemplateList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type PodTemplateListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodTemplateListArgs()
                member _.Run(_cargs_, _args_: PodTemplateListArgs) = PodTemplateList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PodTemplateListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PodTemplateListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PodTemplateListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: PodTemplateListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PodTemplateListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PodTemplateListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PodTemplateListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let podTemplateList = PodTemplateListBuilder()

        [<AutoOpen>]
        module ReplicationController =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ReplicationControllerBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicationControllerArgs()
                member _.Run(_cargs_, _args_: ReplicationControllerArgs) = ReplicationController(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ReplicationControllerArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ReplicationControllerArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ReplicationControllerArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ReplicationControllerArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ReplicationControllerArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ReplicationControllerArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: ReplicationControllerArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let replicationController = ReplicationControllerBuilder()

        [<AutoOpen>]
        module ReplicationControllerList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ReplicationControllerListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicationControllerListArgs()

                member _.Run(_cargs_, _args_: ReplicationControllerListArgs) =
                    ReplicationControllerList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ReplicationControllerListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ReplicationControllerListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ReplicationControllerListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ReplicationControllerListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ReplicationControllerListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ReplicationControllerListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ReplicationControllerListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let replicationControllerList = ReplicationControllerListBuilder()

        [<AutoOpen>]
        module ResourceQuota =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ResourceQuotaBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ResourceQuotaArgs()
                member _.Run(_cargs_, _args_: ResourceQuotaArgs) = ResourceQuota(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ResourceQuotaArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ResourceQuotaArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ResourceQuotaArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ResourceQuotaArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ResourceQuotaArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ResourceQuotaArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: ResourceQuotaArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let resourceQuota = ResourceQuotaBuilder()

        [<AutoOpen>]
        module ResourceQuotaList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ResourceQuotaListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ResourceQuotaListArgs()
                member _.Run(_cargs_, _args_: ResourceQuotaListArgs) = ResourceQuotaList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ResourceQuotaListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ResourceQuotaListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ResourceQuotaListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ResourceQuotaListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ResourceQuotaListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ResourceQuotaListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ResourceQuotaListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let resourceQuotaList = ResourceQuotaListBuilder()

        [<AutoOpen>]
        module Secret =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type SecretBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SecretArgs()
                member _.Run(_cargs_, _args_: SecretArgs) = Secret(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: SecretArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: SecretArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: SecretArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("data")>]
                member _.Data((_cargs_, _args_: SecretArgs), data) =
                    _args_.Data <- inputMap data
                    _cargs_, _args_

                [<CustomOperation("immutable")>]
                member _.Immutable((_cargs_, _args_: SecretArgs), immutable) =
                    _args_.Immutable <- input immutable
                    _cargs_, _args_

                member _.Immutable((_cargs_, _args_: SecretArgs), immutable) =
                    _args_.Immutable <- io immutable
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: SecretArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: SecretArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: SecretArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("stringData")>]
                member _.StringData((_cargs_, _args_: SecretArgs), stringData) =
                    _args_.StringData <- inputMap stringData
                    _cargs_, _args_

                [<CustomOperation("type")>]
                member _.Type((_cargs_, _args_: SecretArgs), ``type``) =
                    _args_.Type <- input ``type``
                    _cargs_, _args_

                member _.Type((_cargs_, _args_: SecretArgs), ``type``) =
                    _args_.Type <- io ``type``
                    _cargs_, _args_

            let secret = SecretBuilder()

        [<AutoOpen>]
        module SecretList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type SecretListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, SecretListArgs()
                member _.Run(_cargs_, _args_: SecretListArgs) = SecretList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: SecretListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: SecretListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: SecretListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: SecretListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: SecretListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: SecretListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: SecretListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let secretList = SecretListBuilder()

        [<AutoOpen>]
        module Service =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ServiceBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ServiceArgs()
                member _.Run(_cargs_, _args_: ServiceArgs) = Service(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ServiceArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ServiceArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ServiceArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ServiceArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ServiceArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ServiceArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: ServiceArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let service = ServiceBuilder()

        [<AutoOpen>]
        module ServiceAccount =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ServiceAccountBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ServiceAccountArgs()
                member _.Run(_cargs_, _args_: ServiceAccountArgs) = ServiceAccount(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ServiceAccountArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ServiceAccountArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ServiceAccountArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("automountServiceAccountToken")>]
                member _.AutomountServiceAccountToken(
                    (_cargs_, _args_: ServiceAccountArgs),
                    automountServiceAccountToken)
                    =
                    _args_.AutomountServiceAccountToken <- input automountServiceAccountToken
                    _cargs_, _args_

                member _.AutomountServiceAccountToken(
                    (_cargs_, _args_: ServiceAccountArgs),
                    automountServiceAccountToken)
                    =
                    _args_.AutomountServiceAccountToken <- io automountServiceAccountToken
                    _cargs_, _args_

                [<CustomOperation("imagePullSecrets")>]
                member _.ImagePullSecrets((_cargs_, _args_: ServiceAccountArgs), imagePullSecrets) =
                    _args_.ImagePullSecrets <- inputList imagePullSecrets
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ServiceAccountArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ServiceAccountArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ServiceAccountArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("secrets")>]
                member _.Secrets((_cargs_, _args_: ServiceAccountArgs), secrets) =
                    _args_.Secrets <- inputList secrets
                    _cargs_, _args_

            let serviceAccount = ServiceAccountBuilder()

        [<AutoOpen>]
        module ServiceAccountList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ServiceAccountListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ServiceAccountListArgs()
                member _.Run(_cargs_, _args_: ServiceAccountListArgs) = ServiceAccountList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ServiceAccountListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ServiceAccountListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ServiceAccountListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ServiceAccountListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ServiceAccountListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ServiceAccountListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ServiceAccountListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let serviceAccountList = ServiceAccountListBuilder()

        [<AutoOpen>]
        module ServiceList =
            open Pulumi.Kubernetes.Core.V1
            open Pulumi.Kubernetes.Types.Inputs.Core.V1

            type ServiceListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ServiceListArgs()
                member _.Run(_cargs_, _args_: ServiceListArgs) = ServiceList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ServiceListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ServiceListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ServiceListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ServiceListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ServiceListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ServiceListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ServiceListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let serviceList = ServiceListBuilder()

module Discovery =
    module V1Beta1 =
        [<AutoOpen>]
        module EndpointSlice =
            open Pulumi.Kubernetes.Discovery.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Discovery.V1Beta1

            type EndpointSliceBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EndpointSliceArgs()
                member _.Run(_cargs_, _args_: EndpointSliceArgs) = EndpointSlice(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: EndpointSliceArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("addressType")>]
                member _.AddressType((_cargs_, _args_: EndpointSliceArgs), addressType) =
                    _args_.AddressType <- input addressType
                    _cargs_, _args_

                member _.AddressType((_cargs_, _args_: EndpointSliceArgs), addressType) =
                    _args_.AddressType <- io addressType
                    _cargs_, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: EndpointSliceArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: EndpointSliceArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("endpoints")>]
                member _.Endpoints((_cargs_, _args_: EndpointSliceArgs), endpoints) =
                    _args_.Endpoints <- inputList endpoints
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: EndpointSliceArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: EndpointSliceArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: EndpointSliceArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("ports")>]
                member _.Ports((_cargs_, _args_: EndpointSliceArgs), ports) =
                    _args_.Ports <- inputList ports
                    _cargs_, _args_

            let endpointSlice = EndpointSliceBuilder()

        [<AutoOpen>]
        module EndpointSliceList =
            open Pulumi.Kubernetes.Discovery.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Discovery.V1Beta1

            type EndpointSliceListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EndpointSliceListArgs()
                member _.Run(_cargs_, _args_: EndpointSliceListArgs) = EndpointSliceList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: EndpointSliceListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: EndpointSliceListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: EndpointSliceListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: EndpointSliceListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: EndpointSliceListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: EndpointSliceListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: EndpointSliceListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let endpointSliceList = EndpointSliceListBuilder()

module Events =
    module V1Beta1 =
        [<AutoOpen>]
        module Event =
            open Pulumi.Kubernetes.Events.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Events.V1Beta1

            type EventBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EventArgs()
                member _.Run(_cargs_, _args_: EventArgs) = Event(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: EventArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("action")>]
                member _.Action((_cargs_, _args_: EventArgs), action) =
                    _args_.Action <- input action
                    _cargs_, _args_

                member _.Action((_cargs_, _args_: EventArgs), action) =
                    _args_.Action <- io action
                    _cargs_, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: EventArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: EventArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("deprecatedCount")>]
                member _.DeprecatedCount((_cargs_, _args_: EventArgs), deprecatedCount) =
                    _args_.DeprecatedCount <- input deprecatedCount
                    _cargs_, _args_

                member _.DeprecatedCount((_cargs_, _args_: EventArgs), deprecatedCount) =
                    _args_.DeprecatedCount <- io deprecatedCount
                    _cargs_, _args_

                [<CustomOperation("deprecatedFirstTimestamp")>]
                member _.DeprecatedFirstTimestamp((_cargs_, _args_: EventArgs), deprecatedFirstTimestamp) =
                    _args_.DeprecatedFirstTimestamp <- input deprecatedFirstTimestamp
                    _cargs_, _args_

                member _.DeprecatedFirstTimestamp((_cargs_, _args_: EventArgs), deprecatedFirstTimestamp) =
                    _args_.DeprecatedFirstTimestamp <- io deprecatedFirstTimestamp
                    _cargs_, _args_

                [<CustomOperation("deprecatedLastTimestamp")>]
                member _.DeprecatedLastTimestamp((_cargs_, _args_: EventArgs), deprecatedLastTimestamp) =
                    _args_.DeprecatedLastTimestamp <- input deprecatedLastTimestamp
                    _cargs_, _args_

                member _.DeprecatedLastTimestamp((_cargs_, _args_: EventArgs), deprecatedLastTimestamp) =
                    _args_.DeprecatedLastTimestamp <- io deprecatedLastTimestamp
                    _cargs_, _args_

                [<CustomOperation("deprecatedSource")>]
                member _.DeprecatedSource((_cargs_, _args_: EventArgs), deprecatedSource) =
                    _args_.DeprecatedSource <- input deprecatedSource
                    _cargs_, _args_

                [<CustomOperation("eventTime")>]
                member _.EventTime((_cargs_, _args_: EventArgs), eventTime) =
                    _args_.EventTime <- input eventTime
                    _cargs_, _args_

                member _.EventTime((_cargs_, _args_: EventArgs), eventTime) =
                    _args_.EventTime <- io eventTime
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: EventArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: EventArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: EventArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("note")>]
                member _.Note((_cargs_, _args_: EventArgs), note) =
                    _args_.Note <- input note
                    _cargs_, _args_

                member _.Note((_cargs_, _args_: EventArgs), note) =
                    _args_.Note <- io note
                    _cargs_, _args_

                [<CustomOperation("reason")>]
                member _.Reason((_cargs_, _args_: EventArgs), reason) =
                    _args_.Reason <- input reason
                    _cargs_, _args_

                member _.Reason((_cargs_, _args_: EventArgs), reason) =
                    _args_.Reason <- io reason
                    _cargs_, _args_

                [<CustomOperation("regarding")>]
                member _.Regarding((_cargs_, _args_: EventArgs), regarding) =
                    _args_.Regarding <- input regarding
                    _cargs_, _args_

                [<CustomOperation("related")>]
                member _.Related((_cargs_, _args_: EventArgs), related) =
                    _args_.Related <- input related
                    _cargs_, _args_

                [<CustomOperation("reportingController")>]
                member _.ReportingController((_cargs_, _args_: EventArgs), reportingController) =
                    _args_.ReportingController <- input reportingController
                    _cargs_, _args_

                member _.ReportingController((_cargs_, _args_: EventArgs), reportingController) =
                    _args_.ReportingController <- io reportingController
                    _cargs_, _args_

                [<CustomOperation("reportingInstance")>]
                member _.ReportingInstance((_cargs_, _args_: EventArgs), reportingInstance) =
                    _args_.ReportingInstance <- input reportingInstance
                    _cargs_, _args_

                member _.ReportingInstance((_cargs_, _args_: EventArgs), reportingInstance) =
                    _args_.ReportingInstance <- io reportingInstance
                    _cargs_, _args_

                [<CustomOperation("series")>]
                member _.Series((_cargs_, _args_: EventArgs), series) =
                    _args_.Series <- input series
                    _cargs_, _args_

                [<CustomOperation("type")>]
                member _.Type((_cargs_, _args_: EventArgs), ``type``) =
                    _args_.Type <- input ``type``
                    _cargs_, _args_

                member _.Type((_cargs_, _args_: EventArgs), ``type``) =
                    _args_.Type <- io ``type``
                    _cargs_, _args_

            let event = EventBuilder()

        [<AutoOpen>]
        module EventList =
            open Pulumi.Kubernetes.Events.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Events.V1Beta1

            type EventListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, EventListArgs()
                member _.Run(_cargs_, _args_: EventListArgs) = EventList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: EventListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: EventListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: EventListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: EventListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: EventListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: EventListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: EventListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let eventList = EventListBuilder()

module Extensions =
    module V1Beta1 =
        [<AutoOpen>]
        module DaemonSet =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type DaemonSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DaemonSetArgs()
                member _.Run(_cargs_, _args_: DaemonSetArgs) = DaemonSet(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DaemonSetArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DaemonSetArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DaemonSetArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DaemonSetArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DaemonSetArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DaemonSetArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: DaemonSetArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let daemonSet = DaemonSetBuilder()

        [<AutoOpen>]
        module DaemonSetList =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type DaemonSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DaemonSetListArgs()
                member _.Run(_cargs_, _args_: DaemonSetListArgs) = DaemonSetList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DaemonSetListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DaemonSetListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DaemonSetListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: DaemonSetListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DaemonSetListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DaemonSetListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DaemonSetListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let daemonSetList = DaemonSetListBuilder()

        [<AutoOpen>]
        module Deployment =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type DeploymentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentArgs()
                member _.Run(_cargs_, _args_: DeploymentArgs) = Deployment(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DeploymentArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DeploymentArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DeploymentArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DeploymentArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DeploymentArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DeploymentArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: DeploymentArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let deployment = DeploymentBuilder()

        [<AutoOpen>]
        module DeploymentList =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type DeploymentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, DeploymentListArgs()
                member _.Run(_cargs_, _args_: DeploymentListArgs) = DeploymentList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: DeploymentListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: DeploymentListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: DeploymentListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: DeploymentListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: DeploymentListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: DeploymentListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: DeploymentListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let deploymentList = DeploymentListBuilder()

        [<AutoOpen>]
        module Ingress =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type IngressBuilder() =
                member _.Yield _ = KubernetesResource.Zero, IngressArgs()
                member _.Run(_cargs_, _args_: IngressArgs) = Ingress(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: IngressArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: IngressArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: IngressArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: IngressArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: IngressArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: IngressArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: IngressArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let ingress = IngressBuilder()

        [<AutoOpen>]
        module IngressList =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type IngressListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, IngressListArgs()
                member _.Run(_cargs_, _args_: IngressListArgs) = IngressList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: IngressListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: IngressListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: IngressListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: IngressListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: IngressListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: IngressListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: IngressListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let ingressList = IngressListBuilder()

        [<AutoOpen>]
        module NetworkPolicy =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type NetworkPolicyBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NetworkPolicyArgs()
                member _.Run(_cargs_, _args_: NetworkPolicyArgs) = NetworkPolicy(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: NetworkPolicyArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: NetworkPolicyArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: NetworkPolicyArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: NetworkPolicyArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: NetworkPolicyArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: NetworkPolicyArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: NetworkPolicyArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let networkPolicy = NetworkPolicyBuilder()

        [<AutoOpen>]
        module NetworkPolicyList =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type NetworkPolicyListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NetworkPolicyListArgs()
                member _.Run(_cargs_, _args_: NetworkPolicyListArgs) = NetworkPolicyList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: NetworkPolicyListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: NetworkPolicyListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: NetworkPolicyListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: NetworkPolicyListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: NetworkPolicyListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: NetworkPolicyListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: NetworkPolicyListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let networkPolicyList = NetworkPolicyListBuilder()

        [<AutoOpen>]
        module PodSecurityPolicy =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type PodSecurityPolicyBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodSecurityPolicyArgs()
                member _.Run(_cargs_, _args_: PodSecurityPolicyArgs) = PodSecurityPolicy(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PodSecurityPolicyArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PodSecurityPolicyArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PodSecurityPolicyArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PodSecurityPolicyArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PodSecurityPolicyArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PodSecurityPolicyArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: PodSecurityPolicyArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let podSecurityPolicy = PodSecurityPolicyBuilder()

        [<AutoOpen>]
        module PodSecurityPolicyList =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type PodSecurityPolicyListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodSecurityPolicyListArgs()
                member _.Run(_cargs_, _args_: PodSecurityPolicyListArgs) = PodSecurityPolicyList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PodSecurityPolicyListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PodSecurityPolicyListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PodSecurityPolicyListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: PodSecurityPolicyListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PodSecurityPolicyListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PodSecurityPolicyListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PodSecurityPolicyListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let podSecurityPolicyList = PodSecurityPolicyListBuilder()

        [<AutoOpen>]
        module ReplicaSet =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type ReplicaSetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicaSetArgs()
                member _.Run(_cargs_, _args_: ReplicaSetArgs) = ReplicaSet(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ReplicaSetArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ReplicaSetArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ReplicaSetArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ReplicaSetArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ReplicaSetArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ReplicaSetArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: ReplicaSetArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let replicaSet = ReplicaSetBuilder()

        [<AutoOpen>]
        module ReplicaSetList =
            open Pulumi.Kubernetes.Extensions.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Extensions.V1Beta1

            type ReplicaSetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ReplicaSetListArgs()
                member _.Run(_cargs_, _args_: ReplicaSetListArgs) = ReplicaSetList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ReplicaSetListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ReplicaSetListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ReplicaSetListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ReplicaSetListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ReplicaSetListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ReplicaSetListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ReplicaSetListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let replicaSetList = ReplicaSetListBuilder()

module FlowControl =
    module V1Alpha1 =
        [<AutoOpen>]
        module FlowSchema =
            open Pulumi.Kubernetes.FlowControl.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.FlowControl.V1Alpha1

            type FlowSchemaBuilder() =
                member _.Yield _ = KubernetesResource.Zero, FlowSchemaArgs()
                member _.Run(_cargs_, _args_: FlowSchemaArgs) = FlowSchema(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: FlowSchemaArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: FlowSchemaArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: FlowSchemaArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: FlowSchemaArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: FlowSchemaArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: FlowSchemaArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: FlowSchemaArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let flowSchema = FlowSchemaBuilder()

        [<AutoOpen>]
        module FlowSchemaList =
            open Pulumi.Kubernetes.FlowControl.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.FlowControl.V1Alpha1

            type FlowSchemaListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, FlowSchemaListArgs()
                member _.Run(_cargs_, _args_: FlowSchemaListArgs) = FlowSchemaList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: FlowSchemaListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: FlowSchemaListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: FlowSchemaListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: FlowSchemaListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: FlowSchemaListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: FlowSchemaListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: FlowSchemaListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let flowSchemaList = FlowSchemaListBuilder()

        [<AutoOpen>]
        module PriorityLevelConfiguration =
            open Pulumi.Kubernetes.FlowControl.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.FlowControl.V1Alpha1

            type PriorityLevelConfigurationBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityLevelConfigurationArgs()

                member _.Run(_cargs_, _args_: PriorityLevelConfigurationArgs) =
                    PriorityLevelConfiguration(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PriorityLevelConfigurationArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PriorityLevelConfigurationArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PriorityLevelConfigurationArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PriorityLevelConfigurationArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PriorityLevelConfigurationArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PriorityLevelConfigurationArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: PriorityLevelConfigurationArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let priorityLevelConfiguration = PriorityLevelConfigurationBuilder()

        [<AutoOpen>]
        module PriorityLevelConfigurationList =
            open Pulumi.Kubernetes.FlowControl.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.FlowControl.V1Alpha1

            type PriorityLevelConfigurationListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityLevelConfigurationListArgs()

                member _.Run(_cargs_, _args_: PriorityLevelConfigurationListArgs) =
                    PriorityLevelConfigurationList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PriorityLevelConfigurationListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PriorityLevelConfigurationListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PriorityLevelConfigurationListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: PriorityLevelConfigurationListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PriorityLevelConfigurationListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PriorityLevelConfigurationListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PriorityLevelConfigurationListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let priorityLevelConfigurationList = PriorityLevelConfigurationListBuilder()

module Meta =
    module V1 =
        [<AutoOpen>]
        module Status =
            open Pulumi.Kubernetes.Meta.V1
            open Pulumi.Kubernetes.Types.Inputs.Meta.V1

            type StatusBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StatusArgs()
                member _.Run(_cargs_, _args_: StatusArgs) = Status(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: StatusArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: StatusArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: StatusArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("code")>]
                member _.Code((_cargs_, _args_: StatusArgs), code) =
                    _args_.Code <- input code
                    _cargs_, _args_

                member _.Code((_cargs_, _args_: StatusArgs), code) =
                    _args_.Code <- io code
                    _cargs_, _args_

                [<CustomOperation("details")>]
                member _.Details((_cargs_, _args_: StatusArgs), details) =
                    _args_.Details <- input details
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: StatusArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: StatusArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("message")>]
                member _.Message((_cargs_, _args_: StatusArgs), message) =
                    _args_.Message <- input message
                    _cargs_, _args_

                member _.Message((_cargs_, _args_: StatusArgs), message) =
                    _args_.Message <- io message
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: StatusArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("reason")>]
                member _.Reason((_cargs_, _args_: StatusArgs), reason) =
                    _args_.Reason <- input reason
                    _cargs_, _args_

                member _.Reason((_cargs_, _args_: StatusArgs), reason) =
                    _args_.Reason <- io reason
                    _cargs_, _args_

            let status = StatusBuilder()

module Networking =
    module V1 =
        [<AutoOpen>]
        module NetworkPolicy =
            open Pulumi.Kubernetes.Networking.V1
            open Pulumi.Kubernetes.Types.Inputs.Networking.V1

            type NetworkPolicyBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NetworkPolicyArgs()
                member _.Run(_cargs_, _args_: NetworkPolicyArgs) = NetworkPolicy(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: NetworkPolicyArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: NetworkPolicyArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: NetworkPolicyArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: NetworkPolicyArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: NetworkPolicyArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: NetworkPolicyArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: NetworkPolicyArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let networkPolicy = NetworkPolicyBuilder()

        [<AutoOpen>]
        module NetworkPolicyList =
            open Pulumi.Kubernetes.Networking.V1
            open Pulumi.Kubernetes.Types.Inputs.Networking.V1

            type NetworkPolicyListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, NetworkPolicyListArgs()
                member _.Run(_cargs_, _args_: NetworkPolicyListArgs) = NetworkPolicyList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: NetworkPolicyListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: NetworkPolicyListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: NetworkPolicyListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: NetworkPolicyListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: NetworkPolicyListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: NetworkPolicyListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: NetworkPolicyListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let networkPolicyList = NetworkPolicyListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module Ingress =
            open Pulumi.Kubernetes.Networking.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Networking.V1Beta1

            type IngressBuilder() =
                member _.Yield _ = KubernetesResource.Zero, IngressArgs()
                member _.Run(_cargs_, _args_: IngressArgs) = Ingress(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: IngressArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: IngressArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: IngressArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: IngressArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: IngressArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: IngressArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: IngressArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let ingress = IngressBuilder()

        [<AutoOpen>]
        module IngressClass =
            open Pulumi.Kubernetes.Networking.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Networking.V1Beta1

            type IngressClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, IngressClassArgs()
                member _.Run(_cargs_, _args_: IngressClassArgs) = IngressClass(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: IngressClassArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: IngressClassArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: IngressClassArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: IngressClassArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: IngressClassArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: IngressClassArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: IngressClassArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let ingressClass = IngressClassBuilder()

        [<AutoOpen>]
        module IngressClassList =
            open Pulumi.Kubernetes.Networking.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Networking.V1Beta1

            type IngressClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, IngressClassListArgs()
                member _.Run(_cargs_, _args_: IngressClassListArgs) = IngressClassList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: IngressClassListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: IngressClassListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: IngressClassListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: IngressClassListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: IngressClassListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: IngressClassListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: IngressClassListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let ingressClassList = IngressClassListBuilder()

        [<AutoOpen>]
        module IngressList =
            open Pulumi.Kubernetes.Networking.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Networking.V1Beta1

            type IngressListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, IngressListArgs()
                member _.Run(_cargs_, _args_: IngressListArgs) = IngressList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: IngressListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: IngressListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: IngressListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: IngressListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: IngressListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: IngressListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: IngressListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let ingressList = IngressListBuilder()

module Node =
    module V1Alpha1 =
        [<AutoOpen>]
        module RuntimeClass =
            open Pulumi.Kubernetes.Node.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Node.V1Alpha1

            type RuntimeClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RuntimeClassArgs()
                member _.Run(_cargs_, _args_: RuntimeClassArgs) = RuntimeClass(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RuntimeClassArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RuntimeClassArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RuntimeClassArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RuntimeClassArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RuntimeClassArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RuntimeClassArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: RuntimeClassArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let runtimeClass = RuntimeClassBuilder()

        [<AutoOpen>]
        module RuntimeClassList =
            open Pulumi.Kubernetes.Node.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Node.V1Alpha1

            type RuntimeClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RuntimeClassListArgs()
                member _.Run(_cargs_, _args_: RuntimeClassListArgs) = RuntimeClassList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RuntimeClassListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RuntimeClassListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RuntimeClassListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: RuntimeClassListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RuntimeClassListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RuntimeClassListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RuntimeClassListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let runtimeClassList = RuntimeClassListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module RuntimeClass =
            open Pulumi.Kubernetes.Node.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Node.V1Beta1

            type RuntimeClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RuntimeClassArgs()
                member _.Run(_cargs_, _args_: RuntimeClassArgs) = RuntimeClass(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RuntimeClassArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RuntimeClassArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RuntimeClassArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("handler")>]
                member _.Handler((_cargs_, _args_: RuntimeClassArgs), handler) =
                    _args_.Handler <- input handler
                    _cargs_, _args_

                member _.Handler((_cargs_, _args_: RuntimeClassArgs), handler) =
                    _args_.Handler <- io handler
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RuntimeClassArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RuntimeClassArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RuntimeClassArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("overhead")>]
                member _.Overhead((_cargs_, _args_: RuntimeClassArgs), overhead) =
                    _args_.Overhead <- input overhead
                    _cargs_, _args_

                [<CustomOperation("scheduling")>]
                member _.Scheduling((_cargs_, _args_: RuntimeClassArgs), scheduling) =
                    _args_.Scheduling <- input scheduling
                    _cargs_, _args_

            let runtimeClass = RuntimeClassBuilder()

        [<AutoOpen>]
        module RuntimeClassList =
            open Pulumi.Kubernetes.Node.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Node.V1Beta1

            type RuntimeClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RuntimeClassListArgs()
                member _.Run(_cargs_, _args_: RuntimeClassListArgs) = RuntimeClassList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RuntimeClassListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RuntimeClassListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RuntimeClassListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: RuntimeClassListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RuntimeClassListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RuntimeClassListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RuntimeClassListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let runtimeClassList = RuntimeClassListBuilder()

module Policy =
    module V1Beta1 =
        [<AutoOpen>]
        module PodDisruptionBudget =
            open Pulumi.Kubernetes.Policy.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Policy.V1Beta1

            type PodDisruptionBudgetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodDisruptionBudgetArgs()
                member _.Run(_cargs_, _args_: PodDisruptionBudgetArgs) = PodDisruptionBudget(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PodDisruptionBudgetArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PodDisruptionBudgetArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PodDisruptionBudgetArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PodDisruptionBudgetArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PodDisruptionBudgetArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PodDisruptionBudgetArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: PodDisruptionBudgetArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let podDisruptionBudget = PodDisruptionBudgetBuilder()

        [<AutoOpen>]
        module PodDisruptionBudgetList =
            open Pulumi.Kubernetes.Policy.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Policy.V1Beta1

            type PodDisruptionBudgetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodDisruptionBudgetListArgs()

                member _.Run(_cargs_, _args_: PodDisruptionBudgetListArgs) =
                    PodDisruptionBudgetList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PodDisruptionBudgetListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PodDisruptionBudgetListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PodDisruptionBudgetListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: PodDisruptionBudgetListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PodDisruptionBudgetListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PodDisruptionBudgetListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PodDisruptionBudgetListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let podDisruptionBudgetList = PodDisruptionBudgetListBuilder()

        [<AutoOpen>]
        module PodSecurityPolicy =
            open Pulumi.Kubernetes.Policy.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Policy.V1Beta1

            type PodSecurityPolicyBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodSecurityPolicyArgs()
                member _.Run(_cargs_, _args_: PodSecurityPolicyArgs) = PodSecurityPolicy(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PodSecurityPolicyArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PodSecurityPolicyArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PodSecurityPolicyArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PodSecurityPolicyArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PodSecurityPolicyArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PodSecurityPolicyArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: PodSecurityPolicyArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let podSecurityPolicy = PodSecurityPolicyBuilder()

        [<AutoOpen>]
        module PodSecurityPolicyList =
            open Pulumi.Kubernetes.Policy.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Policy.V1Beta1

            type PodSecurityPolicyListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodSecurityPolicyListArgs()
                member _.Run(_cargs_, _args_: PodSecurityPolicyListArgs) = PodSecurityPolicyList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PodSecurityPolicyListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PodSecurityPolicyListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PodSecurityPolicyListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: PodSecurityPolicyListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PodSecurityPolicyListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PodSecurityPolicyListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PodSecurityPolicyListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let podSecurityPolicyList = PodSecurityPolicyListBuilder()

module Rbac =
    module V1 =
        [<AutoOpen>]
        module ClusterRole =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type ClusterRoleBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleArgs()
                member _.Run(_cargs_, _args_: ClusterRoleArgs) = ClusterRole(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ClusterRoleArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("aggregationRule")>]
                member _.AggregationRule((_cargs_, _args_: ClusterRoleArgs), aggregationRule) =
                    _args_.AggregationRule <- input aggregationRule
                    _cargs_, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ClusterRoleArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ClusterRoleArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ClusterRoleArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ClusterRoleArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ClusterRoleArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("rules")>]
                member _.Rules((_cargs_, _args_: ClusterRoleArgs), rules) =
                    _args_.Rules <- inputList rules
                    _cargs_, _args_

            let clusterRole = ClusterRoleBuilder()

        [<AutoOpen>]
        module ClusterRoleBinding =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type ClusterRoleBindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleBindingArgs()
                member _.Run(_cargs_, _args_: ClusterRoleBindingArgs) = ClusterRoleBinding(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ClusterRoleBindingArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ClusterRoleBindingArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ClusterRoleBindingArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ClusterRoleBindingArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ClusterRoleBindingArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ClusterRoleBindingArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("roleRef")>]
                member _.RoleRef((_cargs_, _args_: ClusterRoleBindingArgs), roleRef) =
                    _args_.RoleRef <- input roleRef
                    _cargs_, _args_

                [<CustomOperation("subjects")>]
                member _.Subjects((_cargs_, _args_: ClusterRoleBindingArgs), subjects) =
                    _args_.Subjects <- inputList subjects
                    _cargs_, _args_

            let clusterRoleBinding = ClusterRoleBindingBuilder()

        [<AutoOpen>]
        module ClusterRoleBindingList =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type ClusterRoleBindingListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleBindingListArgs()
                member _.Run(_cargs_, _args_: ClusterRoleBindingListArgs) = ClusterRoleBindingList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ClusterRoleBindingListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ClusterRoleBindingListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ClusterRoleBindingListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ClusterRoleBindingListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ClusterRoleBindingListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ClusterRoleBindingListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ClusterRoleBindingListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let clusterRoleBindingList = ClusterRoleBindingListBuilder()

        [<AutoOpen>]
        module ClusterRoleList =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type ClusterRoleListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleListArgs()
                member _.Run(_cargs_, _args_: ClusterRoleListArgs) = ClusterRoleList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ClusterRoleListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ClusterRoleListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ClusterRoleListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ClusterRoleListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ClusterRoleListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ClusterRoleListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ClusterRoleListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let clusterRoleList = ClusterRoleListBuilder()

        [<AutoOpen>]
        module Role =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type RoleBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleArgs()
                member _.Run(_cargs_, _args_: RoleArgs) = Role(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RoleArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RoleArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RoleArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RoleArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RoleArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RoleArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("rules")>]
                member _.Rules((_cargs_, _args_: RoleArgs), rules) =
                    _args_.Rules <- inputList rules
                    _cargs_, _args_

            let role = RoleBuilder()

        [<AutoOpen>]
        module RoleBinding =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type RoleBindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleBindingArgs()
                member _.Run(_cargs_, _args_: RoleBindingArgs) = RoleBinding(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RoleBindingArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RoleBindingArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RoleBindingArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RoleBindingArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RoleBindingArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RoleBindingArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("roleRef")>]
                member _.RoleRef((_cargs_, _args_: RoleBindingArgs), roleRef) =
                    _args_.RoleRef <- input roleRef
                    _cargs_, _args_

                [<CustomOperation("subjects")>]
                member _.Subjects((_cargs_, _args_: RoleBindingArgs), subjects) =
                    _args_.Subjects <- inputList subjects
                    _cargs_, _args_

            let roleBinding = RoleBindingBuilder()

        [<AutoOpen>]
        module RoleBindingList =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type RoleBindingListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleBindingListArgs()
                member _.Run(_cargs_, _args_: RoleBindingListArgs) = RoleBindingList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RoleBindingListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RoleBindingListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RoleBindingListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: RoleBindingListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RoleBindingListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RoleBindingListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RoleBindingListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let roleBindingList = RoleBindingListBuilder()

        [<AutoOpen>]
        module RoleList =
            open Pulumi.Kubernetes.Rbac.V1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1

            type RoleListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleListArgs()
                member _.Run(_cargs_, _args_: RoleListArgs) = RoleList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RoleListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RoleListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RoleListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: RoleListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RoleListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RoleListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RoleListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let roleList = RoleListBuilder()

    module V1Alpha1 =
        [<AutoOpen>]
        module ClusterRole =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type ClusterRoleBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleArgs()
                member _.Run(_cargs_, _args_: ClusterRoleArgs) = ClusterRole(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ClusterRoleArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("aggregationRule")>]
                member _.AggregationRule((_cargs_, _args_: ClusterRoleArgs), aggregationRule) =
                    _args_.AggregationRule <- input aggregationRule
                    _cargs_, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ClusterRoleArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ClusterRoleArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ClusterRoleArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ClusterRoleArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ClusterRoleArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("rules")>]
                member _.Rules((_cargs_, _args_: ClusterRoleArgs), rules) =
                    _args_.Rules <- inputList rules
                    _cargs_, _args_

            let clusterRole = ClusterRoleBuilder()

        [<AutoOpen>]
        module ClusterRoleBinding =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type ClusterRoleBindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleBindingArgs()
                member _.Run(_cargs_, _args_: ClusterRoleBindingArgs) = ClusterRoleBinding(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ClusterRoleBindingArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ClusterRoleBindingArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ClusterRoleBindingArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ClusterRoleBindingArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ClusterRoleBindingArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ClusterRoleBindingArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("roleRef")>]
                member _.RoleRef((_cargs_, _args_: ClusterRoleBindingArgs), roleRef) =
                    _args_.RoleRef <- input roleRef
                    _cargs_, _args_

                [<CustomOperation("subjects")>]
                member _.Subjects((_cargs_, _args_: ClusterRoleBindingArgs), subjects) =
                    _args_.Subjects <- inputList subjects
                    _cargs_, _args_

            let clusterRoleBinding = ClusterRoleBindingBuilder()

        [<AutoOpen>]
        module ClusterRoleBindingList =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type ClusterRoleBindingListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleBindingListArgs()
                member _.Run(_cargs_, _args_: ClusterRoleBindingListArgs) = ClusterRoleBindingList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ClusterRoleBindingListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ClusterRoleBindingListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ClusterRoleBindingListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ClusterRoleBindingListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ClusterRoleBindingListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ClusterRoleBindingListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ClusterRoleBindingListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let clusterRoleBindingList = ClusterRoleBindingListBuilder()

        [<AutoOpen>]
        module ClusterRoleList =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type ClusterRoleListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleListArgs()
                member _.Run(_cargs_, _args_: ClusterRoleListArgs) = ClusterRoleList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ClusterRoleListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ClusterRoleListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ClusterRoleListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ClusterRoleListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ClusterRoleListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ClusterRoleListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ClusterRoleListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let clusterRoleList = ClusterRoleListBuilder()

        [<AutoOpen>]
        module Role =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type RoleBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleArgs()
                member _.Run(_cargs_, _args_: RoleArgs) = Role(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RoleArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RoleArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RoleArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RoleArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RoleArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RoleArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("rules")>]
                member _.Rules((_cargs_, _args_: RoleArgs), rules) =
                    _args_.Rules <- inputList rules
                    _cargs_, _args_

            let role = RoleBuilder()

        [<AutoOpen>]
        module RoleBinding =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type RoleBindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleBindingArgs()
                member _.Run(_cargs_, _args_: RoleBindingArgs) = RoleBinding(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RoleBindingArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RoleBindingArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RoleBindingArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RoleBindingArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RoleBindingArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RoleBindingArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("roleRef")>]
                member _.RoleRef((_cargs_, _args_: RoleBindingArgs), roleRef) =
                    _args_.RoleRef <- input roleRef
                    _cargs_, _args_

                [<CustomOperation("subjects")>]
                member _.Subjects((_cargs_, _args_: RoleBindingArgs), subjects) =
                    _args_.Subjects <- inputList subjects
                    _cargs_, _args_

            let roleBinding = RoleBindingBuilder()

        [<AutoOpen>]
        module RoleBindingList =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type RoleBindingListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleBindingListArgs()
                member _.Run(_cargs_, _args_: RoleBindingListArgs) = RoleBindingList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RoleBindingListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RoleBindingListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RoleBindingListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: RoleBindingListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RoleBindingListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RoleBindingListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RoleBindingListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let roleBindingList = RoleBindingListBuilder()

        [<AutoOpen>]
        module RoleList =
            open Pulumi.Kubernetes.Rbac.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Alpha1

            type RoleListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleListArgs()
                member _.Run(_cargs_, _args_: RoleListArgs) = RoleList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RoleListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RoleListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RoleListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: RoleListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RoleListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RoleListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RoleListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let roleList = RoleListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module ClusterRole =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type ClusterRoleBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleArgs()
                member _.Run(_cargs_, _args_: ClusterRoleArgs) = ClusterRole(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ClusterRoleArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("aggregationRule")>]
                member _.AggregationRule((_cargs_, _args_: ClusterRoleArgs), aggregationRule) =
                    _args_.AggregationRule <- input aggregationRule
                    _cargs_, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ClusterRoleArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ClusterRoleArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ClusterRoleArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ClusterRoleArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ClusterRoleArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("rules")>]
                member _.Rules((_cargs_, _args_: ClusterRoleArgs), rules) =
                    _args_.Rules <- inputList rules
                    _cargs_, _args_

            let clusterRole = ClusterRoleBuilder()

        [<AutoOpen>]
        module ClusterRoleBinding =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type ClusterRoleBindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleBindingArgs()
                member _.Run(_cargs_, _args_: ClusterRoleBindingArgs) = ClusterRoleBinding(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ClusterRoleBindingArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ClusterRoleBindingArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ClusterRoleBindingArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ClusterRoleBindingArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ClusterRoleBindingArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ClusterRoleBindingArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("roleRef")>]
                member _.RoleRef((_cargs_, _args_: ClusterRoleBindingArgs), roleRef) =
                    _args_.RoleRef <- input roleRef
                    _cargs_, _args_

                [<CustomOperation("subjects")>]
                member _.Subjects((_cargs_, _args_: ClusterRoleBindingArgs), subjects) =
                    _args_.Subjects <- inputList subjects
                    _cargs_, _args_

            let clusterRoleBinding = ClusterRoleBindingBuilder()

        [<AutoOpen>]
        module ClusterRoleBindingList =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type ClusterRoleBindingListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleBindingListArgs()
                member _.Run(_cargs_, _args_: ClusterRoleBindingListArgs) = ClusterRoleBindingList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ClusterRoleBindingListArgs), name) =
                    { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ClusterRoleBindingListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ClusterRoleBindingListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ClusterRoleBindingListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ClusterRoleBindingListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ClusterRoleBindingListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ClusterRoleBindingListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let clusterRoleBindingList = ClusterRoleBindingListBuilder()

        [<AutoOpen>]
        module ClusterRoleList =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type ClusterRoleListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, ClusterRoleListArgs()
                member _.Run(_cargs_, _args_: ClusterRoleListArgs) = ClusterRoleList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: ClusterRoleListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: ClusterRoleListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: ClusterRoleListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: ClusterRoleListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: ClusterRoleListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: ClusterRoleListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: ClusterRoleListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let clusterRoleList = ClusterRoleListBuilder()

        [<AutoOpen>]
        module Role =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type RoleBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleArgs()
                member _.Run(_cargs_, _args_: RoleArgs) = Role(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RoleArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RoleArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RoleArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RoleArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RoleArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RoleArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("rules")>]
                member _.Rules((_cargs_, _args_: RoleArgs), rules) =
                    _args_.Rules <- inputList rules
                    _cargs_, _args_

            let role = RoleBuilder()

        [<AutoOpen>]
        module RoleBinding =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type RoleBindingBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleBindingArgs()
                member _.Run(_cargs_, _args_: RoleBindingArgs) = RoleBinding(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RoleBindingArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RoleBindingArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RoleBindingArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RoleBindingArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RoleBindingArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RoleBindingArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("roleRef")>]
                member _.RoleRef((_cargs_, _args_: RoleBindingArgs), roleRef) =
                    _args_.RoleRef <- input roleRef
                    _cargs_, _args_

                [<CustomOperation("subjects")>]
                member _.Subjects((_cargs_, _args_: RoleBindingArgs), subjects) =
                    _args_.Subjects <- inputList subjects
                    _cargs_, _args_

            let roleBinding = RoleBindingBuilder()

        [<AutoOpen>]
        module RoleBindingList =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type RoleBindingListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleBindingListArgs()
                member _.Run(_cargs_, _args_: RoleBindingListArgs) = RoleBindingList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RoleBindingListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RoleBindingListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RoleBindingListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: RoleBindingListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RoleBindingListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RoleBindingListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RoleBindingListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let roleBindingList = RoleBindingListBuilder()

        [<AutoOpen>]
        module RoleList =
            open Pulumi.Kubernetes.Rbac.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Rbac.V1Beta1

            type RoleListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, RoleListArgs()
                member _.Run(_cargs_, _args_: RoleListArgs) = RoleList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: RoleListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: RoleListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: RoleListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: RoleListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: RoleListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: RoleListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: RoleListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let roleList = RoleListBuilder()

module Scheduling =
    module V1 =
        [<AutoOpen>]
        module PriorityClass =
            open Pulumi.Kubernetes.Scheduling.V1
            open Pulumi.Kubernetes.Types.Inputs.Scheduling.V1

            type PriorityClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityClassArgs()
                member _.Run(_cargs_, _args_: PriorityClassArgs) = PriorityClass(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PriorityClassArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PriorityClassArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PriorityClassArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("description")>]
                member _.Description((_cargs_, _args_: PriorityClassArgs), description) =
                    _args_.Description <- input description
                    _cargs_, _args_

                member _.Description((_cargs_, _args_: PriorityClassArgs), description) =
                    _args_.Description <- io description
                    _cargs_, _args_

                [<CustomOperation("globalDefault")>]
                member _.GlobalDefault((_cargs_, _args_: PriorityClassArgs), globalDefault) =
                    _args_.GlobalDefault <- input globalDefault
                    _cargs_, _args_

                member _.GlobalDefault((_cargs_, _args_: PriorityClassArgs), globalDefault) =
                    _args_.GlobalDefault <- io globalDefault
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PriorityClassArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PriorityClassArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PriorityClassArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("preemptionPolicy")>]
                member _.PreemptionPolicy((_cargs_, _args_: PriorityClassArgs), preemptionPolicy) =
                    _args_.PreemptionPolicy <- input preemptionPolicy
                    _cargs_, _args_

                member _.PreemptionPolicy((_cargs_, _args_: PriorityClassArgs), preemptionPolicy) =
                    _args_.PreemptionPolicy <- io preemptionPolicy
                    _cargs_, _args_

                [<CustomOperation("value")>]
                member _.Value((_cargs_, _args_: PriorityClassArgs), value) =
                    _args_.Value <- input value
                    _cargs_, _args_

                member _.Value((_cargs_, _args_: PriorityClassArgs), value) =
                    _args_.Value <- io value
                    _cargs_, _args_

            let priorityClass = PriorityClassBuilder()

        [<AutoOpen>]
        module PriorityClassList =
            open Pulumi.Kubernetes.Scheduling.V1
            open Pulumi.Kubernetes.Types.Inputs.Scheduling.V1

            type PriorityClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityClassListArgs()
                member _.Run(_cargs_, _args_: PriorityClassListArgs) = PriorityClassList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PriorityClassListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PriorityClassListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PriorityClassListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: PriorityClassListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PriorityClassListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PriorityClassListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PriorityClassListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let priorityClassList = PriorityClassListBuilder()

    module V1Alpha1 =
        [<AutoOpen>]
        module PriorityClass =
            open Pulumi.Kubernetes.Scheduling.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Scheduling.V1Alpha1

            type PriorityClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityClassArgs()
                member _.Run(_cargs_, _args_: PriorityClassArgs) = PriorityClass(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PriorityClassArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PriorityClassArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PriorityClassArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("description")>]
                member _.Description((_cargs_, _args_: PriorityClassArgs), description) =
                    _args_.Description <- input description
                    _cargs_, _args_

                member _.Description((_cargs_, _args_: PriorityClassArgs), description) =
                    _args_.Description <- io description
                    _cargs_, _args_

                [<CustomOperation("globalDefault")>]
                member _.GlobalDefault((_cargs_, _args_: PriorityClassArgs), globalDefault) =
                    _args_.GlobalDefault <- input globalDefault
                    _cargs_, _args_

                member _.GlobalDefault((_cargs_, _args_: PriorityClassArgs), globalDefault) =
                    _args_.GlobalDefault <- io globalDefault
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PriorityClassArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PriorityClassArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PriorityClassArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("preemptionPolicy")>]
                member _.PreemptionPolicy((_cargs_, _args_: PriorityClassArgs), preemptionPolicy) =
                    _args_.PreemptionPolicy <- input preemptionPolicy
                    _cargs_, _args_

                member _.PreemptionPolicy((_cargs_, _args_: PriorityClassArgs), preemptionPolicy) =
                    _args_.PreemptionPolicy <- io preemptionPolicy
                    _cargs_, _args_

                [<CustomOperation("value")>]
                member _.Value((_cargs_, _args_: PriorityClassArgs), value) =
                    _args_.Value <- input value
                    _cargs_, _args_

                member _.Value((_cargs_, _args_: PriorityClassArgs), value) =
                    _args_.Value <- io value
                    _cargs_, _args_

            let priorityClass = PriorityClassBuilder()

        [<AutoOpen>]
        module PriorityClassList =
            open Pulumi.Kubernetes.Scheduling.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Scheduling.V1Alpha1

            type PriorityClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityClassListArgs()
                member _.Run(_cargs_, _args_: PriorityClassListArgs) = PriorityClassList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PriorityClassListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PriorityClassListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PriorityClassListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: PriorityClassListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PriorityClassListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PriorityClassListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PriorityClassListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let priorityClassList = PriorityClassListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module PriorityClass =
            open Pulumi.Kubernetes.Scheduling.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Scheduling.V1Beta1

            type PriorityClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityClassArgs()
                member _.Run(_cargs_, _args_: PriorityClassArgs) = PriorityClass(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PriorityClassArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PriorityClassArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PriorityClassArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("description")>]
                member _.Description((_cargs_, _args_: PriorityClassArgs), description) =
                    _args_.Description <- input description
                    _cargs_, _args_

                member _.Description((_cargs_, _args_: PriorityClassArgs), description) =
                    _args_.Description <- io description
                    _cargs_, _args_

                [<CustomOperation("globalDefault")>]
                member _.GlobalDefault((_cargs_, _args_: PriorityClassArgs), globalDefault) =
                    _args_.GlobalDefault <- input globalDefault
                    _cargs_, _args_

                member _.GlobalDefault((_cargs_, _args_: PriorityClassArgs), globalDefault) =
                    _args_.GlobalDefault <- io globalDefault
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PriorityClassArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PriorityClassArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PriorityClassArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("preemptionPolicy")>]
                member _.PreemptionPolicy((_cargs_, _args_: PriorityClassArgs), preemptionPolicy) =
                    _args_.PreemptionPolicy <- input preemptionPolicy
                    _cargs_, _args_

                member _.PreemptionPolicy((_cargs_, _args_: PriorityClassArgs), preemptionPolicy) =
                    _args_.PreemptionPolicy <- io preemptionPolicy
                    _cargs_, _args_

                [<CustomOperation("value")>]
                member _.Value((_cargs_, _args_: PriorityClassArgs), value) =
                    _args_.Value <- input value
                    _cargs_, _args_

                member _.Value((_cargs_, _args_: PriorityClassArgs), value) =
                    _args_.Value <- io value
                    _cargs_, _args_

            let priorityClass = PriorityClassBuilder()

        [<AutoOpen>]
        module PriorityClassList =
            open Pulumi.Kubernetes.Scheduling.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Scheduling.V1Beta1

            type PriorityClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PriorityClassListArgs()
                member _.Run(_cargs_, _args_: PriorityClassListArgs) = PriorityClassList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PriorityClassListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PriorityClassListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PriorityClassListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: PriorityClassListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PriorityClassListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PriorityClassListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PriorityClassListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let priorityClassList = PriorityClassListBuilder()

module Settings =
    module V1Alpha1 =
        [<AutoOpen>]
        module PodPreset =
            open Pulumi.Kubernetes.Settings.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Settings.V1Alpha1

            type PodPresetBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodPresetArgs()
                member _.Run(_cargs_, _args_: PodPresetArgs) = PodPreset(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PodPresetArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PodPresetArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PodPresetArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PodPresetArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PodPresetArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PodPresetArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: PodPresetArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let podPreset = PodPresetBuilder()

        [<AutoOpen>]
        module PodPresetList =
            open Pulumi.Kubernetes.Settings.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Settings.V1Alpha1

            type PodPresetListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, PodPresetListArgs()
                member _.Run(_cargs_, _args_: PodPresetListArgs) = PodPresetList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: PodPresetListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: PodPresetListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: PodPresetListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: PodPresetListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: PodPresetListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: PodPresetListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: PodPresetListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let podPresetList = PodPresetListBuilder()

module Storage =
    module V1 =
        [<AutoOpen>]
        module CSIDriver =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type CSIDriverBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSIDriverArgs()
                member _.Run(_cargs_, _args_: CSIDriverArgs) = CSIDriver(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CSIDriverArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CSIDriverArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CSIDriverArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CSIDriverArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CSIDriverArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CSIDriverArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: CSIDriverArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let cSIDriver = CSIDriverBuilder()

        [<AutoOpen>]
        module CSIDriverList =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type CSIDriverListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSIDriverListArgs()
                member _.Run(_cargs_, _args_: CSIDriverListArgs) = CSIDriverList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CSIDriverListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CSIDriverListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CSIDriverListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: CSIDriverListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CSIDriverListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CSIDriverListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CSIDriverListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let cSIDriverList = CSIDriverListBuilder()

        [<AutoOpen>]
        module CSINode =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type CSINodeBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSINodeArgs()
                member _.Run(_cargs_, _args_: CSINodeArgs) = CSINode(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CSINodeArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CSINodeArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CSINodeArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CSINodeArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CSINodeArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CSINodeArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: CSINodeArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let cSINode = CSINodeBuilder()

        [<AutoOpen>]
        module CSINodeList =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type CSINodeListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSINodeListArgs()
                member _.Run(_cargs_, _args_: CSINodeListArgs) = CSINodeList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CSINodeListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CSINodeListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CSINodeListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: CSINodeListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CSINodeListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CSINodeListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CSINodeListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let cSINodeList = CSINodeListBuilder()

        [<AutoOpen>]
        module StorageClass =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type StorageClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StorageClassArgs()
                member _.Run(_cargs_, _args_: StorageClassArgs) = StorageClass(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: StorageClassArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("allowVolumeExpansion")>]
                member _.AllowVolumeExpansion((_cargs_, _args_: StorageClassArgs), allowVolumeExpansion) =
                    _args_.AllowVolumeExpansion <- input allowVolumeExpansion
                    _cargs_, _args_

                member _.AllowVolumeExpansion((_cargs_, _args_: StorageClassArgs), allowVolumeExpansion) =
                    _args_.AllowVolumeExpansion <- io allowVolumeExpansion
                    _cargs_, _args_

                [<CustomOperation("allowedTopologies")>]
                member _.AllowedTopologies((_cargs_, _args_: StorageClassArgs), allowedTopologies) =
                    _args_.AllowedTopologies <- inputList allowedTopologies
                    _cargs_, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: StorageClassArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: StorageClassArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: StorageClassArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: StorageClassArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: StorageClassArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("mountOptions")>]
                member _.MountOptions((_cargs_, _args_: StorageClassArgs), mountOptions) =
                    _args_.MountOptions <- inputList mountOptions
                    _cargs_, _args_

                [<CustomOperation("parameters")>]
                member _.Parameters((_cargs_, _args_: StorageClassArgs), parameters) =
                    _args_.Parameters <- inputMap parameters
                    _cargs_, _args_

                [<CustomOperation("provisioner")>]
                member _.Provisioner((_cargs_, _args_: StorageClassArgs), provisioner) =
                    _args_.Provisioner <- input provisioner
                    _cargs_, _args_

                member _.Provisioner((_cargs_, _args_: StorageClassArgs), provisioner) =
                    _args_.Provisioner <- io provisioner
                    _cargs_, _args_

                [<CustomOperation("reclaimPolicy")>]
                member _.ReclaimPolicy((_cargs_, _args_: StorageClassArgs), reclaimPolicy) =
                    _args_.ReclaimPolicy <- input reclaimPolicy
                    _cargs_, _args_

                member _.ReclaimPolicy((_cargs_, _args_: StorageClassArgs), reclaimPolicy) =
                    _args_.ReclaimPolicy <- io reclaimPolicy
                    _cargs_, _args_

                [<CustomOperation("volumeBindingMode")>]
                member _.VolumeBindingMode((_cargs_, _args_: StorageClassArgs), volumeBindingMode) =
                    _args_.VolumeBindingMode <- input volumeBindingMode
                    _cargs_, _args_

                member _.VolumeBindingMode((_cargs_, _args_: StorageClassArgs), volumeBindingMode) =
                    _args_.VolumeBindingMode <- io volumeBindingMode
                    _cargs_, _args_

            let storageClass = StorageClassBuilder()

        [<AutoOpen>]
        module StorageClassList =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type StorageClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StorageClassListArgs()
                member _.Run(_cargs_, _args_: StorageClassListArgs) = StorageClassList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: StorageClassListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: StorageClassListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: StorageClassListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: StorageClassListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: StorageClassListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: StorageClassListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: StorageClassListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let storageClassList = StorageClassListBuilder()

        [<AutoOpen>]
        module VolumeAttachment =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type VolumeAttachmentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, VolumeAttachmentArgs()
                member _.Run(_cargs_, _args_: VolumeAttachmentArgs) = VolumeAttachment(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: VolumeAttachmentArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: VolumeAttachmentArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: VolumeAttachmentArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: VolumeAttachmentArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: VolumeAttachmentArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: VolumeAttachmentArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: VolumeAttachmentArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let volumeAttachment = VolumeAttachmentBuilder()

        [<AutoOpen>]
        module VolumeAttachmentList =
            open Pulumi.Kubernetes.Storage.V1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1

            type VolumeAttachmentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, VolumeAttachmentListArgs()
                member _.Run(_cargs_, _args_: VolumeAttachmentListArgs) = VolumeAttachmentList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: VolumeAttachmentListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: VolumeAttachmentListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: VolumeAttachmentListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: VolumeAttachmentListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: VolumeAttachmentListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: VolumeAttachmentListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: VolumeAttachmentListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let volumeAttachmentList = VolumeAttachmentListBuilder()

    module V1Alpha1 =
        [<AutoOpen>]
        module VolumeAttachment =
            open Pulumi.Kubernetes.Storage.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Alpha1

            type VolumeAttachmentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, VolumeAttachmentArgs()
                member _.Run(_cargs_, _args_: VolumeAttachmentArgs) = VolumeAttachment(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: VolumeAttachmentArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: VolumeAttachmentArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: VolumeAttachmentArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: VolumeAttachmentArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: VolumeAttachmentArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: VolumeAttachmentArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: VolumeAttachmentArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let volumeAttachment = VolumeAttachmentBuilder()

        [<AutoOpen>]
        module VolumeAttachmentList =
            open Pulumi.Kubernetes.Storage.V1Alpha1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Alpha1

            type VolumeAttachmentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, VolumeAttachmentListArgs()
                member _.Run(_cargs_, _args_: VolumeAttachmentListArgs) = VolumeAttachmentList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: VolumeAttachmentListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: VolumeAttachmentListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: VolumeAttachmentListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: VolumeAttachmentListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: VolumeAttachmentListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: VolumeAttachmentListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: VolumeAttachmentListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let volumeAttachmentList = VolumeAttachmentListBuilder()

    module V1Beta1 =
        [<AutoOpen>]
        module CSIDriver =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type CSIDriverBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSIDriverArgs()
                member _.Run(_cargs_, _args_: CSIDriverArgs) = CSIDriver(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CSIDriverArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CSIDriverArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CSIDriverArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CSIDriverArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CSIDriverArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CSIDriverArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: CSIDriverArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let cSIDriver = CSIDriverBuilder()

        [<AutoOpen>]
        module CSIDriverList =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type CSIDriverListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSIDriverListArgs()
                member _.Run(_cargs_, _args_: CSIDriverListArgs) = CSIDriverList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CSIDriverListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CSIDriverListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CSIDriverListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: CSIDriverListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CSIDriverListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CSIDriverListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CSIDriverListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let cSIDriverList = CSIDriverListBuilder()

        [<AutoOpen>]
        module CSINode =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type CSINodeBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSINodeArgs()
                member _.Run(_cargs_, _args_: CSINodeArgs) = CSINode(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CSINodeArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CSINodeArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CSINodeArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CSINodeArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CSINodeArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CSINodeArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: CSINodeArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let cSINode = CSINodeBuilder()

        [<AutoOpen>]
        module CSINodeList =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type CSINodeListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, CSINodeListArgs()
                member _.Run(_cargs_, _args_: CSINodeListArgs) = CSINodeList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: CSINodeListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: CSINodeListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: CSINodeListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: CSINodeListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: CSINodeListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: CSINodeListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: CSINodeListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let cSINodeList = CSINodeListBuilder()

        [<AutoOpen>]
        module StorageClass =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type StorageClassBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StorageClassArgs()
                member _.Run(_cargs_, _args_: StorageClassArgs) = StorageClass(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: StorageClassArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("allowVolumeExpansion")>]
                member _.AllowVolumeExpansion((_cargs_, _args_: StorageClassArgs), allowVolumeExpansion) =
                    _args_.AllowVolumeExpansion <- input allowVolumeExpansion
                    _cargs_, _args_

                member _.AllowVolumeExpansion((_cargs_, _args_: StorageClassArgs), allowVolumeExpansion) =
                    _args_.AllowVolumeExpansion <- io allowVolumeExpansion
                    _cargs_, _args_

                [<CustomOperation("allowedTopologies")>]
                member _.AllowedTopologies((_cargs_, _args_: StorageClassArgs), allowedTopologies) =
                    _args_.AllowedTopologies <- inputList allowedTopologies
                    _cargs_, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: StorageClassArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: StorageClassArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: StorageClassArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: StorageClassArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: StorageClassArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("mountOptions")>]
                member _.MountOptions((_cargs_, _args_: StorageClassArgs), mountOptions) =
                    _args_.MountOptions <- inputList mountOptions
                    _cargs_, _args_

                [<CustomOperation("parameters")>]
                member _.Parameters((_cargs_, _args_: StorageClassArgs), parameters) =
                    _args_.Parameters <- inputMap parameters
                    _cargs_, _args_

                [<CustomOperation("provisioner")>]
                member _.Provisioner((_cargs_, _args_: StorageClassArgs), provisioner) =
                    _args_.Provisioner <- input provisioner
                    _cargs_, _args_

                member _.Provisioner((_cargs_, _args_: StorageClassArgs), provisioner) =
                    _args_.Provisioner <- io provisioner
                    _cargs_, _args_

                [<CustomOperation("reclaimPolicy")>]
                member _.ReclaimPolicy((_cargs_, _args_: StorageClassArgs), reclaimPolicy) =
                    _args_.ReclaimPolicy <- input reclaimPolicy
                    _cargs_, _args_

                member _.ReclaimPolicy((_cargs_, _args_: StorageClassArgs), reclaimPolicy) =
                    _args_.ReclaimPolicy <- io reclaimPolicy
                    _cargs_, _args_

                [<CustomOperation("volumeBindingMode")>]
                member _.VolumeBindingMode((_cargs_, _args_: StorageClassArgs), volumeBindingMode) =
                    _args_.VolumeBindingMode <- input volumeBindingMode
                    _cargs_, _args_

                member _.VolumeBindingMode((_cargs_, _args_: StorageClassArgs), volumeBindingMode) =
                    _args_.VolumeBindingMode <- io volumeBindingMode
                    _cargs_, _args_

            let storageClass = StorageClassBuilder()

        [<AutoOpen>]
        module StorageClassList =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type StorageClassListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, StorageClassListArgs()
                member _.Run(_cargs_, _args_: StorageClassListArgs) = StorageClassList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: StorageClassListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: StorageClassListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: StorageClassListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: StorageClassListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: StorageClassListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: StorageClassListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: StorageClassListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let storageClassList = StorageClassListBuilder()

        [<AutoOpen>]
        module VolumeAttachment =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type VolumeAttachmentBuilder() =
                member _.Yield _ = KubernetesResource.Zero, VolumeAttachmentArgs()
                member _.Run(_cargs_, _args_: VolumeAttachmentArgs) = VolumeAttachment(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: VolumeAttachmentArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: VolumeAttachmentArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: VolumeAttachmentArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: VolumeAttachmentArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: VolumeAttachmentArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: VolumeAttachmentArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

                [<CustomOperation("spec")>]
                member _.Spec((_cargs_, _args_: VolumeAttachmentArgs), spec) =
                    _args_.Spec <- input spec
                    _cargs_, _args_

            let volumeAttachment = VolumeAttachmentBuilder()

        [<AutoOpen>]
        module VolumeAttachmentList =
            open Pulumi.Kubernetes.Storage.V1Beta1
            open Pulumi.Kubernetes.Types.Inputs.Storage.V1Beta1

            type VolumeAttachmentListBuilder() =
                member _.Yield _ = KubernetesResource.Zero, VolumeAttachmentListArgs()
                member _.Run(_cargs_, _args_: VolumeAttachmentListArgs) = VolumeAttachmentList(_cargs_.Name, _args_)

                [<CustomOperation("name")>]
                member _.Name((_cargs_, _args_: VolumeAttachmentListArgs), name) = { _cargs_ with Name = name }, _args_

                [<CustomOperation("apiVersion")>]
                member _.ApiVersion((_cargs_, _args_: VolumeAttachmentListArgs), apiVersion) =
                    _args_.ApiVersion <- input apiVersion
                    _cargs_, _args_

                member _.ApiVersion((_cargs_, _args_: VolumeAttachmentListArgs), apiVersion) =
                    _args_.ApiVersion <- io apiVersion
                    _cargs_, _args_

                [<CustomOperation("items")>]
                member _.Items((_cargs_, _args_: VolumeAttachmentListArgs), items) =
                    _args_.Items <- inputList items
                    _cargs_, _args_

                [<CustomOperation("kind")>]
                member _.Kind((_cargs_, _args_: VolumeAttachmentListArgs), kind) =
                    _args_.Kind <- input kind
                    _cargs_, _args_

                member _.Kind((_cargs_, _args_: VolumeAttachmentListArgs), kind) =
                    _args_.Kind <- io kind
                    _cargs_, _args_

                [<CustomOperation("metadata")>]
                member _.Metadata((_cargs_, _args_: VolumeAttachmentListArgs), metadata) =
                    _args_.Metadata <- input metadata
                    _cargs_, _args_

            let volumeAttachmentList = VolumeAttachmentListBuilder()
